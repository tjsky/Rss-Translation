<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Mon, 22 Sep 2025 15:18:15 GMT</lastBuildDate>
    <item>
      <title>浏览器列表现在支持基线</title>
      <link>https://www.reddit.com/r/programming/comments/1nnp9lt/browserslist_now_supports_baseline/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/feross      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nnp9lt/browserslist_now_supports_baseline/</guid>
      <pubDate>Mon, 22 Sep 2025 15:15:42 GMT</pubDate>
    </item>
    <item>
      <title>我正在重写Zig的Redis</title>
      <link>https://www.reddit.com/r/programming/comments/1nnp7gh/im_rewriting_redis_in_zig/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/pseudocharleskkk       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nnp7gh/im_rewriting_redis_in_zig/</guid>
      <pubDate>Mon, 22 Sep 2025 15:13:27 GMT</pubDate>
    </item>
    <item>
      <title>停止使用.REVERSE（）。查找（）：满足Findlast（）</title>
      <link>https://www.reddit.com/r/programming/comments/1nnoai2/stop_using_reversefind_meet_findlast/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/garethx      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nnoai2/stop_using_reversefind_meet_findlast/</guid>
      <pubDate>Mon, 22 Sep 2025 14:39:49 GMT</pubDate>
    </item>
    <item>
      <title>以下过程不会使您成为机器人</title>
      <link>https://www.reddit.com/r/programming/comments/1nno90y/following_processes_wont_make_you_a_robot/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://frederickvanbrabant.com/blog/2025-09-19-following-processes-wont-make-you-a-robot/”&gt; [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nno90y/following_processes_wont_make_you_a_robot/</guid>
      <pubDate>Mon, 22 Sep 2025 14:38:13 GMT</pubDate>
    </item>
    <item>
      <title>亲爱的github：没有yaml锚，请</title>
      <link>https://www.reddit.com/r/programming/comments/1nno8qn/dear_github_no_yaml_anchors_please/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/GarethX   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nno8qn/dear_github_no_yaml_anchors_please/</guid>
      <pubDate>Mon, 22 Sep 2025 14:37:54 GMT</pubDate>
    </item>
    <item>
      <title>通过传送安全访问服务器</title>
      <link>https://www.reddit.com/r/programming/comments/1nno5p6/secure_server_access_with_teleport/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/root0ps      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nno5p6/secure_server_access_with_teleport/</guid>
      <pubDate>Mon, 22 Sep 2025 14:34:46 GMT</pubDate>
    </item>
    <item>
      <title>我，一个非发展的人，如何阅读开发人员的教程，为我写作，初学者</title>
      <link>https://www.reddit.com/r/programming/comments/1nnnvlo/how_i_a_nondeveloper_read_the_tutorial_you_a/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/pysk00l     [link]       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nnnvlo/how_i_a_nondeveloper_read_the_tutorial_you_a/</guid>
      <pubDate>Mon, 22 Sep 2025 14:23:52 GMT</pubDate>
    </item>
    <item>
      <title>数组中的静态压缩前缀树</title>
      <link>https://www.reddit.com/r/programming/comments/1nnns06/static_compressed_prefix_tree_in_array/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我正在寻找一种空间有效的方法来存储静态辐射树，因为我在网上发现的所有实现都很恐怖：向儿童的指针阵列，分配的字符串，分配的字符串等，意味着内存碎片碎片片段和较差的缓存位置。 So, since my radix tree is static, it can be stored all in a single array: - first store the common prefix (fragment) - then reserve n elements where each one will be an offset to the child - the first child starts immediately after the offsets The implementation is a simple recursion, based on the above procedure, with a helper function to count unique prefixes and find the common prefix length.有趣的是，数组通常小于每个单词长度的总和。 这里有人使用/看到类似的东西吗？我在任何地方都找不到它，但是用例很明显（自动更正等）。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/sourcepopered      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nnns06/static_compressed_prefix_tree_in_array/</guid>
      <pubDate>Mon, 22 Sep 2025 14:19:56 GMT</pubDate>
    </item>
    <item>
      <title>Python记录模块是从2002年开始的。这是2025年使用它的方法</title>
      <link>https://www.reddit.com/r/programming/comments/1nnmrjl/the_python_logging_module_is_from_2002_heres_how/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/thin nommous     &lt;a href =“ https://www.reddit.com/r/programming/comments/1nnmrjl/1nnmrjl/the_python_logging_module_is_from_2002_heres_how/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nnmrjl/the_python_logging_module_is_from_2002_heres_how/</guid>
      <pubDate>Mon, 22 Sep 2025 13:39:29 GMT</pubDate>
    </item>
    <item>
      <title>二进制编码器</title>
      <link>https://www.reddit.com/r/programming/comments/1nnmi0v/binary_encoder/</link>
      <description><![CDATA[在提交由＆＃32; /u/u/yok1rai       [commist]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nnmi0v/binary_encoder/</guid>
      <pubDate>Mon, 22 Sep 2025 13:28:27 GMT</pubDate>
    </item>
    <item>
      <title>如果除了删除一种编程语言，您会选择保留哪个语言？排除程序集和机器代码，并假设CPU即使通常不可能，也可以在本语中执行此语言</title>
      <link>https://www.reddit.com/r/programming/comments/1nnmh7c/if_every_programming_language_except_one_were/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   s   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/yok1rai      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nnmh7c/if_every_programming_language_except_one_were/</guid>
      <pubDate>Mon, 22 Sep 2025 13:27:29 GMT</pubDate>
    </item>
    <item>
      <title>logger4me：一个简单多彩的Python记录实用程序</title>
      <link>https://www.reddit.com/r/programming/comments/1nnm1yw/logger4me_a_simple_and_colorful_python_logging/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我为方便起见了一个简单的python logger。您可以通过安装logger4me软件包来使用它。尝试一下，建议添加的任何功能。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/loud-insect9247       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nnm1yw/logger4me_a_simple_and_colorful_python_logging/</guid>
      <pubDate>Mon, 22 Sep 2025 13:10:13 GMT</pubDate>
    </item>
    <item>
      <title>Netflix的直播灾难：大规模流式传输的工程挑战</title>
      <link>https://www.reddit.com/r/programming/comments/1nnln86/netflixs_livestreaming_disaster_the_engineering/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ani171202      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nnln86/netflixs_livestreaming_disaster_the_engineering/</guid>
      <pubDate>Mon, 22 Sep 2025 12:52:55 GMT</pubDate>
    </item>
    <item>
      <title>您应该在2025年选择的前5种编码语言</title>
      <link>https://www.reddit.com/r/programming/comments/1nnlhy3/top_5_coding_languages_you_should_choose_in_2025/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/wann_be_cool     [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nnlhy3/top_5_coding_languages_you_should_choose_in_2025/</guid>
      <pubDate>Mon, 22 Sep 2025 12:46:36 GMT</pubDate>
    </item>
    <item>
      <title>AI如何影响工程领导</title>
      <link>https://www.reddit.com/r/programming/comments/1nnlhab/how_ai_is_impacting_engineering_leadership/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/gregorojstersek      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nnlhab/how_ai_is_impacting_engineering_leadership/</guid>
      <pubDate>Mon, 22 Sep 2025 12:45:47 GMT</pubDate>
    </item>
    </channel>
</rss>