<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Wed, 30 Apr 2025 15:18:44 GMT</lastBuildDate>
    <item>
      <title>Minecraft像不到一条推文的景观</title>
      <link>https://www.reddit.com/r/programming/comments/1kbiu8w/minecraft_like_landscape_in_less_than_a_tweet/</link>
      <description><![CDATA[]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbiu8w/minecraft_like_landscape_in_less_than_a_tweet/</guid>
      <pubDate>Wed, 30 Apr 2025 15:08:39 GMT</pubDate>
    </item>
    <item>
      <title>使用双子座自动化代码删除（和一点python）</title>
      <link>https://www.reddit.com/r/programming/comments/1kbhy7c/automating_code_deletion_with_gemini_and_a_little/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/kaycebasques       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbhy7c/automating_code_deletion_with_gemini_and_a_little/</guid>
      <pubDate>Wed, 30 Apr 2025 14:31:04 GMT</pubDate>
    </item>
    <item>
      <title>今天在Code HQ（4月30日）中：AI发生了生存危机，Rust在弹力，以及为什么我的Python代码试图杀死我</title>
      <link>https://www.reddit.com/r/programming/comments/1kbhep5/today_in_code_hq_april_30_ais_having_an/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿书呆子，开发人员，窃窃私语者和AI提示诗人， 欢迎您每天的剂量“今天的编译器正在发生什么？” — brought to you by Code HQ, a new micro-community where we solve bugs, share brain-melting breakthroughs, and occasionally cry in semicolons. Let’s dive into the weird and wonderful coding world of April 30, 2025:   AI Now Explains Its Code… And Might Be Smarter Than You  Today, MIT梅塔（Meta）发行了一篇有关AI模型的新论文，该论文不仅撰写代码 - 它像有太多咖啡的教授一样解释了它。 它不仅会为您提供功能。它告诉您为什么它存在，每行会做什么，偶尔会提供未经请求的生活建议。 为什么这很重要：如果这足够好，堆栈溢出可能必须将品牌重塑为“只是氛围”。这可能会改变我们永远学习编程的方式 - 或成为您的被动攻击性编码伙伴。    Rust刚刚升级（再次）    Rust不仅是“打破大脑并治愈您的灵魂的语言。” It’s now deeper in the Linux 6.10 kernel, which means the language that sounds like a fantasy RPG weapon is now writing the future of operating systems. Fun fact: If Rust gets any more traction, your next toaster might refuse to run unless it&#39;s memory-safe.   NASA&#39;s Using Python on Mars  Yes, Mars.红色的一个。因此，下次有人告诉您Python是“仅适合初学者”时，问他们他们的代码是否实际上已经进入了太空。    有趣的区域：一天的模因    宝石：git commit -m＆quot“最终最终最终固定版本”我们都知道这意味着什么。   日常的github宝石：vercel的satori   如果您要将JSX变成光滑的SVG，请查看Vercel/Satori。它快速，干净，使渲染的SVG感觉不像巫术。&lt; /p&gt;   P.S。我为像我们这样的人们建立了一个社区 如果您喜欢这种疯狂 - 突破，错误，模因，火星级别的python-我创建了一个小的（但强大的）社区：         我们每天发布2-3次，这是： 脑燃料的混合（最新工具＆amp;趋势＆p&gt;  debug disasters  debug disasters  debug disasters    poins  codion poins poins pocion 成为早期会员，并从头开始塑造它。谁知道 - 有一天，您将吹嘘自己在传播之前的加入方式。&lt; /p&gt;  如果您要调试一些灵魂刺耳的东西，找到了一个很酷的回购，或者只是想大喊半岛放置位置，请发表评论。在线程中见，开发战士。 保持怪异。保持编译。保持咖啡因。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/no/no-station4656      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbhep5/today_in_code_hq_april_30_ais_having_an/</guid>
      <pubDate>Wed, 30 Apr 2025 14:07:06 GMT</pubDate>
    </item>
    <item>
      <title>Sharding Mastodon，第1部分</title>
      <link>https://www.reddit.com/r/programming/comments/1kbgh7r/sharding_mastodon_part_1/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/levkk1       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbgh7r/sharding_mastodon_part_1/</guid>
      <pubDate>Wed, 30 Apr 2025 13:27:15 GMT</pubDate>
    </item>
    <item>
      <title>无辜的循环</title>
      <link>https://www.reddit.com/r/programming/comments/1kbg87i/the_innocent_loop/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/aijan1       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbg87i/the_innocent_loop/</guid>
      <pubDate>Wed, 30 Apr 2025 13:16:07 GMT</pubDate>
    </item>
    <item>
      <title>为什么在生产中追踪</title>
      <link>https://www.reddit.com/r/programming/comments/1kbg7dq/why_trace_in_production/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/synfo     [link]      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbg7dq/why_trace_in_production/</guid>
      <pubDate>Wed, 30 Apr 2025 13:15:08 GMT</pubDate>
    </item>
    <item>
      <title>我在Ruby上建立了MCP，以帮助开发人员将任何Rails API变成MCP服务器</title>
      <link>https://www.reddit.com/r/programming/comments/1kbedkx/i_built_mcp_on_ruby_to_help_developers_turn_any/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我在Ruby上构建了MCP，该宝石将您的Rails应用程序遵循模型上下文协议（MCP）标准，将您的Rails应用程序转化为功能齐全的LLM服务器。   是什么？ - 标准化应用程序如何与AI模型对话。   我的实施将其带到了Ruby/Rails，并使用：  OpenAi＆amp;拟人化（只需添加您的API键） 持久存储选项（内存，redis，activerecord） 动态UIS的流响应 文件处理＆amp;工具呼叫支持 只需几行代码   为什么我构建了它 我想要一种干净的，轨道友好的方式来添加AI功能，而无需为每个提供商编写样板板。现有的MCP实施是专注于Python的，因此我为Ruby社区建立了此功能。   activerecord存储（刚刚在v0.3.0中发布）使您可以将对话存储在现有的导轨数据库中。   尝试一下： https：//github.com/nagstler/mcp_on_ruby    提交由＆＃32; /u/u/nagstler      &lt;a href =“ https://www.reddit.com/r/programming/comments/1kbedkx/i_built_mcp_mcp_on_ruby_to_help_help_help_help_develpers_turn_turn_turn_any/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbedkx/i_built_mcp_on_ruby_to_help_developers_turn_any/</guid>
      <pubDate>Wed, 30 Apr 2025 11:43:50 GMT</pubDate>
    </item>
    <item>
      <title>为什么您的代码库中自动生成的技术文档更好</title>
      <link>https://www.reddit.com/r/programming/comments/1kbdqnu/why_autogenerated_technical_documentation_from/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://stackstudio.io/blog/the-death-of-the-preadme-why-why-why-why-gener-gener-technical-decumentation-from-your-your-codebase-is-is-the-future”&gt; [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbdqnu/why_autogenerated_technical_documentation_from/</guid>
      <pubDate>Wed, 30 Apr 2025 11:07:08 GMT</pubDate>
    </item>
    <item>
      <title>让V8提起：更快的JavaScript启动，带有明确的编译提示</title>
      <link>https://www.reddit.com/r/programming/comments/1kbdj9s/giving_v8_a_headsup_faster_javascript_startup/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/self       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbdj9s/giving_v8_a_headsup_faster_javascript_startup/</guid>
      <pubDate>Wed, 30 Apr 2025 10:54:50 GMT</pubDate>
    </item>
    <item>
      <title>什么是对象 /链接器 /工具链 / ...？ （汇编术语表）</title>
      <link>https://www.reddit.com/r/programming/comments/1kbcxp1/what_is_an_object_linker_toolchain_glossary_of/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/tmewett      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbcxp1/what_is_an_object_linker_toolchain_glossary_of/</guid>
      <pubDate>Wed, 30 Apr 2025 10:15:44 GMT</pubDate>
    </item>
    <item>
      <title>💥技术谈话每周＃57👉氛围编码，节省成本的自动化，类型的通信，前端工具的未来，缩放Haskell应用程序，Web应用程序，在Grammarly，Async Communication，Async Communication，...</title>
      <link>https://www.reddit.com/r/programming/comments/1kbcw5k/tech_talks_weekly_57_vibe_coding_costsaving/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/techtalksweekly     ＆＃32;   [注释]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbcw5k/tech_talks_weekly_57_vibe_coding_costsaving/</guid>
      <pubDate>Wed, 30 Apr 2025 10:12:47 GMT</pubDate>
    </item>
    <item>
      <title>矢量化ML模型以娱乐</title>
      <link>https://www.reddit.com/r/programming/comments/1kbckil/vectorizing_ml_models_for_fun/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/foxintheredbox      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kbckil/vectorizing_ml_models_for_fun/</guid>
      <pubDate>Wed, 30 Apr 2025 09:50:50 GMT</pubDate>
    </item>
    <item>
      <title>Mariadb 11.8矢量功能是新的，但已经具有一堆集成</title>
      <link>https://www.reddit.com/r/programming/comments/1kb90rt/mariadb_118_vector_features_are_new_but_already/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/ottokekalainen      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kb90rt/mariadb_118_vector_features_are_new_but_already/</guid>
      <pubDate>Wed, 30 Apr 2025 05:34:38 GMT</pubDate>
    </item>
    <item>
      <title>使用PYQT5的代码提取器</title>
      <link>https://www.reddit.com/r/programming/comments/1kb8u9o/code_extractor_using_pyqt5/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我创建了一个基于PYQT5的代码提取器，该代码提取器扫描，过滤和导出整个代码库作为Markdown。   github repo： https://github.com/adco30/codeextractor  href =“ https://www.youtube.com/watch?v=nwzmap8d0sm”&gt; https://www.youtube.com/watch?v=nwzmap8d0sm    排除列表和扩展过滤器，然后显示可折叠的凹痕视图。特定于语言的解析器提取详细大纲的类和功能签名。 Markdown服务将每个文件的内容都包装到带有代码栅栏的单个文档中。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/small_trife_2309      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kb8u9o/code_extractor_using_pyqt5/</guid>
      <pubDate>Wed, 30 Apr 2025 05:22:59 GMT</pubDate>
    </item>
    <item>
      <title>合同软件开发的糟糕状态</title>
      <link>https://www.reddit.com/r/programming/comments/1kb7ubh/the_abysmal_state_of_contract_software_development/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/reeses_boi     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kb7ubh/the_abysmal_state_of_contract_software_development/</guid>
      <pubDate>Wed, 30 Apr 2025 04:19:45 GMT</pubDate>
    </item>
    </channel>
</rss>