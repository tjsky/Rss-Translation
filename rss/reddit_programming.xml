<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Mon, 02 Jun 2025 06:24:37 GMT</lastBuildDate>
    <item>
      <title>了解数据库中的一致性：超越基础知识</title>
      <link>https://www.reddit.com/r/programming/comments/1l17dzd/understanding_consistency_in_databases_beyond_the/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好！我试图尽可能地做任何教学，任何建议或改进，请随时在下面发表评论：）  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://medium.com/@lucas01/understanding-consistency-in-databases-beyond-the-basics-the-basics-293013a50481”&gt; [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1l17dzd/understanding_consistency_in_databases_beyond_the/</guid>
      <pubDate>Mon, 02 Jun 2025 03:00:04 GMT</pubDate>
    </item>
    <item>
      <title>IRS开源其直接文件软件，实际上非常好（查看Scala Fact Graph）</title>
      <link>https://www.reddit.com/r/programming/comments/1l13uvu/irs_opensourced_its_direct_file_software_and_it/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/no-amoeba-6542        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1l13uvu/irs_opensourced_its_direct_file_software_and_it/</guid>
      <pubDate>Mon, 02 Jun 2025 00:01:58 GMT</pubDate>
    </item>
    <item>
      <title>Java工程：Digest＃53</title>
      <link>https://www.reddit.com/r/programming/comments/1l13bxz/engineering_with_java_digest_53/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/decuntional-ad2036     ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1l13bxz/engineering_with_java_digest_53/</guid>
      <pubDate>Sun, 01 Jun 2025 23:36:58 GMT</pubDate>
    </item>
    <item>
      <title>TIL：显然，现代软件工程的解决方案是由2400年前的一些死希腊人解决的。谁知道？</title>
      <link>https://www.reddit.com/r/programming/comments/1l1330o/til_apparently_the_solution_to_modern_software/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  显然，当我们忙于争论反应还是vue更好的时候，微服务是否最终会解决我们所有的问题（叙述者：他们不会），一些哲学家，在电力概念概念之前就死了，甚至已经弄清楚了已经弄清楚的代码，这是不吸吮的。 Revolutionary concept: &quot;What if we actually validated our inputs instead of just hoping the frontend sends us good data?&quot; Aristotle over here like &quot;Hey maybe your variable named user should actually contain user data instead of sometimes being null, sometimes being an error object, and sometimes being the string &#39;undefined&#39; because your junior dev thought that was clever.&quot; But sure, let&#39;s在我们的生产日志中填充填充。哲学101：  的原则实际上是在哲学上教授的原则，应该是他们声称的（令人震惊的） 不能同时有效且无效的东西（Mind = blown = blown） 只有您的代码，您就不了解您的代码，而不是fiers of Secut of Secut of Secord 几年来，我的错误监视仪表板看起来令人怀疑...安静。几乎喜欢在编码实际上有效之前思考。 现在，如果您为我原谅，我需要去解释我的PM，为什么我们不能公正地quot quot效不了解什么“它”实际上是。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/alonsonetwork     link&gt; link&gt; link&gt; [&gt;]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1l1330o/til_apparently_the_solution_to_modern_software/</guid>
      <pubDate>Sun, 01 Jun 2025 23:25:10 GMT</pubDate>
    </item>
    <item>
      <title>Oauth 2.0流解释</title>
      <link>https://www.reddit.com/r/programming/comments/1l12hli/oauth_20_flows_explained/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  你好， 需要将OAuth 2.0集成到您的应用中吗？查看此博客文章以了解授权代码流＆amp;带有PKCE的授权代码  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/deep_independence770      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1l12hli/oauth_20_flows_explained/</guid>
      <pubDate>Sun, 01 Jun 2025 22:58:01 GMT</pubDate>
    </item>
    <item>
      <title>DNS不必很难</title>
      <link>https://www.reddit.com/r/programming/comments/1l0ykeq/dns_does_not_have_to_be_hard/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/craciun_07      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1l0ykeq/dns_does_not_have_to_be_hard/</guid>
      <pubDate>Sun, 01 Jun 2025 20:10:55 GMT</pubDate>
    </item>
    <item>
      <title>贝叶斯平均评分 - 如何不按平均评分进行排序2.0</title>
      <link>https://www.reddit.com/r/programming/comments/1l0yc0h/bayesian_average_ratings_how_not_to_sort_by/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/throwaway490215     ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1l0yc0h/bayesian_average_ratings_how_not_to_sort_by/</guid>
      <pubDate>Sun, 01 Jun 2025 20:01:02 GMT</pubDate>
    </item>
    <item>
      <title>宣布rolldown-vite（带有皮包锈列）</title>
      <link>https://www.reddit.com/r/programming/comments/1l0y1ab/announcing_rolldownvite_featuring_a_rustrewrite/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/siimon04     link link&gt; link link&gt;        [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1l0y1ab/announcing_rolldownvite_featuring_a_rustrewrite/</guid>
      <pubDate>Sun, 01 Jun 2025 19:48:19 GMT</pubDate>
    </item>
    <item>
      <title>我开源了符合OIDC的身份提供商和auth服务器（支持PKCE，内省，动态客户端注册等）</title>
      <link>https://www.reddit.com/r/programming/comments/1l0xo7c/i_opensourced_an_oidccompliant_identity_provider/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  因此，经过几个月的深夜编码会议并完成了我的学位，我终于发布了VigiloAuth作为开源。这是一个完整的OAuth 2.0和OpenID Connect服务器。审核记录 它通过OpenID基金会的基本认证计划和全面的授权服务器测试。尚未正式认证（处理），但是如果您想验证，所有测试日志都在存储库中公开。 几乎所有内容都是可配置的：代币的寿命，密码策略，SMTP设置，费率限制，https https执行，authtrotsenting，auththrottling。基本上试图做到这一点，因此您不必为了更改基本行为而分配代码。 绝对不是完美的。核心功能有效并且经过了经过良好测试，但是某些内部代码绝对是“初稿”。质量。有重构要做，尤其是在模块化周围。 That&#39;s honestly part of why I&#39;m open-sourcing it, I could really use some community feedback and fresh perspectives. Roadmap: * RBAC and proper scope management * Admin UI (because config files only go so far) * Social login integrations * TOTP/2FA support * Device and Hybrid flows If you&#39;re building apps that need auth, hate being locked into proprietary solutions, or just want to mess around with一些GO代码，检查一下。问题和公关欢迎。我很想让这件事对更多的人有用。 您可以在这里找到回购： https://github.com.com.com/vigiloauth/vigiloauth/vigiloauth/vigilo   /u/u/op_2873       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1l0xo7c/i_opensourced_an_oidccompliant_identity_provider/</guid>
      <pubDate>Sun, 01 Jun 2025 19:33:01 GMT</pubDate>
    </item>
    <item>
      <title>粗体编辑 - 可能写入（事件系统）</title>
      <link>https://www.reddit.com/r/programming/comments/1l0xj7y/bold_edit_may_writeup_event_system/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/levodelelis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1l0xj7y/bold_edit_may_writeup_event_system/</guid>
      <pubDate>Sun, 01 Jun 2025 19:27:09 GMT</pubDate>
    </item>
    <item>
      <title>类型交流•Kris Jenkins</title>
      <link>https://www.reddit.com/r/programming/comments/1l0wyw5/communicating_in_types_kris_jenkins/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/goto-con       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1l0wyw5/communicating_in_types_kris_jenkins/</guid>
      <pubDate>Sun, 01 Jun 2025 19:03:40 GMT</pubDate>
    </item>
    <item>
      <title>我制作了一种编程语言来测试创意LLM的真实程度</title>
      <link>https://www.reddit.com/r/programming/comments/1l0wtrz/i_made_a_programming_language_to_test_how/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  不是因为我需要。不是因为它有效。但是，由于目前的基准测试觉得它们是为了使模型看起来很聪明而不是证明自己是构建的。 ，所以我写了Chester：由Python和JavaScript启发的专门制造的玩具语言。它是可读的（ISH），严格的（绝对），并且强迫LLMS在结构上推理 -  Beyond只是反思已知的模式。 这个想法？如果模型可以采用C代码并通过抹布将其转移到工作切斯特代码中，那么也许它可以理解语法背后的算法，而不仅仅是语法。换句话说，该测试将已知的转化为未知。  最后，我在幻觉率，翻译质量和生成代码的实际执行中对多个LLM进行了基准测试。 这很奇怪。它实际上有点有效。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/u/u/u/u/u/u/bruh-sound-eftect-6       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1l0wtrz/i_made_a_programming_language_to_test_how/</guid>
      <pubDate>Sun, 01 Jun 2025 18:58:07 GMT</pubDate>
    </item>
    <item>
      <title>为什么CSS感到如此艰难（最终使它点击的是什么）</title>
      <link>https://www.reddit.com/r/programming/comments/1l0w8kc/why_css_feels_so_hard_and_what_finally_made_it/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/porpor-sprinkles9910     [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1l0w8kc/why_css_feels_so_hard_and_what_finally_made_it/</guid>
      <pubDate>Sun, 01 Jun 2025 18:34:16 GMT</pubDate>
    </item>
    <item>
      <title>3我从工程师到经理成长时的主要学习</title>
      <link>https://www.reddit.com/r/programming/comments/1l0w2gz/3_main_learnings_when_i_grew_from_engineer_to/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/gregorojstersek      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1l0w2gz/3_main_learnings_when_i_grew_from_engineer_to/</guid>
      <pubDate>Sun, 01 Jun 2025 18:27:22 GMT</pubDate>
    </item>
    <item>
      <title>生锈中的运行时定位变量</title>
      <link>https://www.reddit.com/r/programming/comments/1l0ux7q/runtimeinitialized_variables_in_rust/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/nfrankel      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1l0ux7q/runtimeinitialized_variables_in_rust/</guid>
      <pubDate>Sun, 01 Jun 2025 17:40:39 GMT</pubDate>
    </item>
    </channel>
</rss>