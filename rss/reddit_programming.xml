<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Wed, 08 Oct 2025 12:34:45 GMT</lastBuildDate>
    <item>
      <title>无服务器：快速上市，更快地到未来•Srushith repakula</title>
      <link>https://www.reddit.com/r/programming/comments/1o192hi/serverless_fast_to_market_faster_to_the_future/</link>
      <description><![CDATA[ 由   提交 /u/goto-con   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o192hi/serverless_fast_to_market_faster_to_the_future/</guid>
      <pubDate>Wed, 08 Oct 2025 12:27:49 GMT</pubDate>
    </item>
    <item>
      <title>上下文工程和 API</title>
      <link>https://www.reddit.com/r/programming/comments/1o18p73/context_engineering_apis/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/finn55       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o18p73/context_engineering_apis/</guid>
      <pubDate>Wed, 08 Oct 2025 12:11:14 GMT</pubDate>
    </item>
    <item>
      <title>大规模解决双重预订：顶尖科技公司的系统设计模式</title>
      <link>https://www.reddit.com/r/programming/comments/1o170e7/solving_double_booking_at_scale_system_design/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/local_ad_6109      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o170e7/solving_double_booking_at_scale_system_design/</guid>
      <pubDate>Wed, 08 Oct 2025 10:43:27 GMT</pubDate>
    </item>
    <item>
      <title>与Tornadovm的纯Modern Java中的程序GPU</title>
      <link>https://www.reddit.com/r/programming/comments/1o16jwu/program_gpus_in_pure_modern_java_with_tornadovm/</link>
      <description><![CDATA[ 由   提交/u/mikebmx1  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o16jwu/program_gpus_in_pure_modern_java_with_tornadovm/</guid>
      <pubDate>Wed, 08 Oct 2025 10:16:27 GMT</pubDate>
    </item>
    <item>
      <title>WebAssembly WASI编译器在Web浏览器中使用Exaequos</title>
      <link>https://www.reddit.com/r/programming/comments/1o165l5/webassembly_wasi_compilers_in_the_web_browser/</link>
      <description><![CDATA[ 由   提交/u/exaequos  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o165l5/webassembly_wasi_compilers_in_the_web_browser/</guid>
      <pubDate>Wed, 08 Oct 2025 09:52:10 GMT</pubDate>
    </item>
    <item>
      <title>春季的MTL：为什么重要以及如何使用Hashicorp保管库和内存证书实施它（比特案例研究）</title>
      <link>https://www.reddit.com/r/programming/comments/1o15z4f/mtls_in_spring_why_it_matters_and_how_to/</link>
      <description><![CDATA[]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o15z4f/mtls_in_spring_why_it_matters_and_how_to/</guid>
      <pubDate>Wed, 08 Oct 2025 09:40:38 GMT</pubDate>
    </item>
    <item>
      <title>Codefinity是学习编码的合法平台吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1o15n49/is_codefinity_a_legit_platform_for_learning_coding/</link>
      <description><![CDATA[ 由   提交/u/Ok-Hair-7518   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o15n49/is_codefinity_a_legit_platform_for_learning_coding/</guid>
      <pubDate>Wed, 08 Oct 2025 09:18:56 GMT</pubDate>
    </item>
    <item>
      <title>Tsoding，野牛和可能的替代品</title>
      <link>https://www.reddit.com/r/programming/comments/1o15f77/tsoding_bison_and_possible_alternatives/</link>
      <description><![CDATA[于是，编程影响者Tsoding（我时不时地看他）制作了一个关于Yacc、Bison和其他解析工具的视频。这显然是他的系列的一部分，他在其中探讨了神秘且过时的 GNU 内容。要么做出替代方案，要么取笑它，或者两者兼而有之。 事情是这样的......当我学习语言理论时，他们使用 Bison 给我们提供了“现实生活”的语言。正在使用的语法示例...它仍然是我至今使用的工具。现在我开始担心我可能正在使用过时的工具，并且我需要探索更好的替代方案。 我还有一些方法来完成视频，但从我到目前为止所看到的来看，Tsoding 没有引用任何更好或更现代的方法来解析代码。这促使我发布此内容... 您日常使用什么来编写语法/解析代码？您在 C/Cpp 中使用什么？ Python 呢？   由   提交/u/Nac_oh  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o15f77/tsoding_bison_and_possible_alternatives/</guid>
      <pubDate>Wed, 08 Oct 2025 09:04:09 GMT</pubDate>
    </item>
    <item>
      <title>用陶里构建了一个Visual Docker数据库管理器</title>
      <link>https://www.reddit.com/r/programming/comments/1o1398z/built_a_visual_docker_database_manager_with_tauri/</link>
      <description><![CDATA[嘿 👋 — 单独开发。刚刚推出了 Docker DB Manager，这是一个使用 Tauri v2 和 React 构建的桌面应用程序。 问题：跨项目管理数据库容器变得乏味——不断检查可用端口、重新创建容器以更改设置，以及跨 .env 文件和注释寻找密码。 它的作用：  无需终端命令即可创建和管理容器 在创建容器之前检测端口冲突 无需手动重新创建即可编辑配置（端口、名称） 生成可复制的连接字符串 与 Docker Desktop 实时同步  当前支持 PostgreSQL、MySQL、 Redis 和 MongoDB（更多数据库即将推出）。 它是开源，我希望得到您的反馈： GitHub： https://github.com/AbianS/docker-db-manager 适用于 macOS（Apple Silicon + Intel）。 Windows 和 Linux 即将推出。 很高兴回答有关架构或实现的问题！ 🚀   由   提交/u/Zukonsio  [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o1398z/built_a_visual_docker_database_manager_with_tauri/</guid>
      <pubDate>Wed, 08 Oct 2025 06:42:45 GMT</pubDate>
    </item>
    <item>
      <title>2025 年最难到最容易学习的 20 种编程语言排名 |商务部</title>
      <link>https://www.reddit.com/r/programming/comments/1o12xcz/20_hardest_to_easiest_rankings_of_programming/</link>
      <description><![CDATA[BIZMIA 评选的 2025 年开发者最难学习的 20 种编程语言。   由   提交/u/waozen   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o12xcz/20_hardest_to_easiest_rankings_of_programming/</guid>
      <pubDate>Wed, 08 Oct 2025 06:22:27 GMT</pubDate>
    </item>
    <item>
      <title>CSS有42个单位</title>
      <link>https://www.reddit.com/r/programming/comments/1o12gps/css_has_42_units/</link>
      <description><![CDATA[ 由   提交 /u/harromeister   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o12gps/css_has_42_units/</guid>
      <pubDate>Wed, 08 Oct 2025 05:54:07 GMT</pubDate>
    </item>
    <item>
      <title>十年前的一堂课中的代码不起作用（显然）</title>
      <link>https://www.reddit.com/r/programming/comments/1o126jj/code_from_a_lesson_a_decade_ago_for_unity_not/</link>
      <description><![CDATA[嘿伙计们，我想我正在学习 2014 年关于 Unity 的游戏开发课程？无论如何，这段代码的目的是增加 Skyplane - 材质四边形对象上的 x 偏移量。编译时没有错误，但它不会更改启动时的 x 偏移量。至少在剧本上，这个数字仍在增加。但材质不受影响。我使用的是unity 2022。代码有什么问题吗？另外，我并没有真正在 reddit 上发帖，而且我完全不知道发布此内容的 URL 要求是什么，lmao。我刚刚复制并粘贴了发布时所在的页面。 using UnityEngine; using System.Collections; public class TextureOffsetAnimator1 : MonoBehaviour { public Vector2 ScrollSpeeds = new Vector2(0.0f, 0.0f); public Renderer TargetRenderer = null; //Private Private Vector2 _offset = Vector2.zero; //创建MonoBehaviour后第一次执行Update之前调用一次 void Start() { if (TargetRenderer == null) { TargetRenderer = GetComponent(); } if (TargetRenderer != null) { _offset = TargetRenderer.material.GetTextureOffset(“_MainTex”); } } // 每帧调用一次更新 void Update() { if (!TargetRenderer) return; _offset += ScrollSpeeds * Time.deltaTime; TargetRenderer.material.SetTextureOffset(&quot;_MainTex&quot;, _offset); } }   由   提交/u/GRILL3DCHEESEBOB   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o126jj/code_from_a_lesson_a_decade_ago_for_unity_not/</guid>
      <pubDate>Wed, 08 Oct 2025 05:36:39 GMT</pubDate>
    </item>
    <item>
      <title>重建世界项目</title>
      <link>https://www.reddit.com/r/programming/comments/1o114bv/rebuild_the_world_project/</link>
      <description><![CDATA[ 一旦陷入死胡同，请从后退一些步骤开始  一个致力于当代信息技术（尤其是编程）退化趋势的新网站刚刚出现。 其中涵盖的大多数主题对于公众来说可能极具争议性，但是，在我看来，每个主题背后都有强有力的理由，它们不应该被简单地忽略。   由   提交/u/SureCoyote9650   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o114bv/rebuild_the_world_project/</guid>
      <pubDate>Wed, 08 Oct 2025 04:35:35 GMT</pubDate>
    </item>
    <item>
      <title>设计用于分支AI对话的SDK（Python + Typescript）</title>
      <link>https://www.reddit.com/r/programming/comments/1o110i0/designing_an_sdk_for_branching_ai_conversations/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  传统的AI聊天API是线性的 - 一条从头到尾的单个消息链。当我们开始尝试进行分支分支对话（任何消息都可以分叉到新路径中），出现了许多有趣的技术问题。 Graph 而不是列表，同时使其可查询和轻巧。  有效地维持上下文  - 确定分支是继承了完整的历史记录，部分历史记录，部分历史还是开始新鲜（我们将这些上下文模式称为完整/partial/none/none/none/none/none）。 Ensuring each branch has a real UUID (no “main” placeholder) so merges and references remain consistent later. Handling token limits and usage tracking across diverging branches.  The end result is a small cross-language SDK (Python + TypeScript) that abstracts these concerns away and exposes simple calls例如 对话。Create（）， branches.create（）和 message.stream（）。。 我写了一篇简短的技术文章，解释了我们如何完成这些设计决策以及我们在构建时如何完成的：    https://afzal.xyz/rethinking-ai-conversations-why-branching-beats-linear-thinking-85ed5cfd97f5   很想听听其他人如何建模相似的分支或树结构化对话系统，尤其是围绕有效维护上下文或可视化对话图。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/sleaktrade      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o110i0/designing_an_sdk_for_branching_ai_conversations/</guid>
      <pubDate>Wed, 08 Oct 2025 04:29:49 GMT</pubDate>
    </item>
    <item>
      <title>设计用于分支AI对话的SDK（Python + Typescript）</title>
      <link>https://www.reddit.com/r/programming/comments/1o10zkb/designing_an_sdk_for_branching_ai_conversations/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  传统的AI聊天API是线性的 - 从头到尾的一系列消息链。当我们开始尝试实验分支对话时（任何消息都可以分叉进入新路径），出现了许多有趣的技术问题。  有效地维护上下文 - 决定一个分支是否继承了完整的历史，部分历史或开始新鲜（我们将这些上下文模式称为完整/部分/局部/无）。 流式响应在多个分支之间同时进行流式响应，而在多个分支上跨多个分支中的订单不损坏的保证，请确保每个分支的一致性。 later. Handling token limits and usage tracking across diverging branches.  The end result is a small cross-language SDK (Python + TypeScript) that abstracts these concerns away and exposes simple calls like conversations.create(), branches.create(), and messages.stream(). I wrote a short technical post解释我们如何处理这些设计决策以及我们在构建它时学到的知识：  https://afzal.xyz/rethinking-ai-conversations-why-branching-beats-linear-thinking-85ed5cfd97f5   很想听听其他人如何建模相似的分支或树结构化对话系统，尤其是围绕有效维护上下文或可视化对话图。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/sleaktrade      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o10zkb/designing_an_sdk_for_branching_ai_conversations/</guid>
      <pubDate>Wed, 08 Oct 2025 04:28:24 GMT</pubDate>
    </item>
    </channel>
</rss>