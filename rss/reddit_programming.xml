<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Tue, 14 Oct 2025 01:09:02 GMT</lastBuildDate>
    <item>
      <title>收缩架构</title>
      <link>https://www.reddit.com/r/programming/comments/1o60elg/architecture_for_contraction/</link>
      <description><![CDATA[如果你的团队变小怎么办？不作为失败场景。作为设计约束。   由   提交 /u/robbyrussell   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o60elg/architecture_for_contraction/</guid>
      <pubDate>Mon, 13 Oct 2025 23:58:03 GMT</pubDate>
    </item>
    <item>
      <title>足球比赛预测机器人</title>
      <link>https://www.reddit.com/r/programming/comments/1o5z2bn/football_match_prediction_bot/</link>
      <description><![CDATA[嘿！我构建了一个 Python 项目，它使用数据、统计数据和一些巧妙的技巧来模拟两支球队（国家队或联赛队）之间的足球比赛结果。该机器人的工作原理是分析每支球队最近的比赛，考虑胜负、主客场表现，甚至联赛的相对实力等因素。然后，它计算双方的自定义得分，并预测 A 队是否获胜、失败或平局。 有两种主要模式： ⚽ 团队 vs 团队 - 比较任意两支球队并获得模拟比赛结果。 📊 团队统计 - 查看特定团队的详细表现统计数据。 如果您想要完全自动化，还可以使用 自动模式，扫描所有即将到来的比赛，预测每个结果，并通过网络钩子将它们直接发送到 Discord 频道。它甚至将所有数据（比赛结果、赔率、百分比等）保存到 .txt 文件中，以便您稍后查看或分享预测。 这不是一个投注工具 - 只是一种有趣的方式，可以在真正的比赛之前查看统计数据如何排列。可以将其视为足球激情、自动化和一点混乱的混合体。尽管如此，CR7 仍然是 GOAT 🐐⚽ 请随时对项目进行审查 谢谢大家   由   提交/u/sangokuhomer  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o5z2bn/football_match_prediction_bot/</guid>
      <pubDate>Mon, 13 Oct 2025 22:58:37 GMT</pubDate>
    </item>
    <item>
      <title>集体矩阵乘法 – JAX Pallas:Mosaic GPU</title>
      <link>https://www.reddit.com/r/programming/comments/1o5yncg/collective_matrix_multiplication_jax_pallasmosaic/</link>
      <description><![CDATA[ 由   提交 /u/mttd   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o5yncg/collective_matrix_multiplication_jax_pallasmosaic/</guid>
      <pubDate>Mon, 13 Oct 2025 22:40:47 GMT</pubDate>
    </item>
    <item>
      <title>Java 字符串内部结构 - 存储、实习、串联和性能</title>
      <link>https://www.reddit.com/r/programming/comments/1o5yf4o/java_strings_internals_storage_interning/</link>
      <description><![CDATA[ 由   提交 /u/One_Being7941   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o5yf4o/java_strings_internals_storage_interning/</guid>
      <pubDate>Mon, 13 Oct 2025 22:31:01 GMT</pubDate>
    </item>
    <item>
      <title>反应编译器 v1.0</title>
      <link>https://www.reddit.com/r/programming/comments/1o5x90j/react_compiler_v10/</link>
      <description><![CDATA[ 由   提交 /u/alexeyr   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o5x90j/react_compiler_v10/</guid>
      <pubDate>Mon, 13 Oct 2025 21:43:49 GMT</pubDate>
    </item>
    <item>
      <title>人工智能无法修复损坏的系统：2025 年 DORA 报告的教训</title>
      <link>https://www.reddit.com/r/programming/comments/1o5wxpz/ai_wont_fix_broken_systems_lessons_from_the_2025/</link>
      <description><![CDATA[更快的编码并不总是意味着更高的生产力。   由   提交/u/aviator_co  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o5wxpz/ai_wont_fix_broken_systems_lessons_from_the_2025/</guid>
      <pubDate>Mon, 13 Oct 2025 21:31:35 GMT</pubDate>
    </item>
    <item>
      <title>具有混合跳跃搜索的跳跃排序程序</title>
      <link>https://www.reddit.com/r/programming/comments/1o5whsk/jump_sort_program_with_hybrid_jump_search/</link>
      <description><![CDATA[ 由   提交/u/woofmeowmeowwoof   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o5whsk/jump_sort_program_with_hybrid_jump_search/</guid>
      <pubDate>Mon, 13 Oct 2025 21:14:58 GMT</pubDate>
    </item>
    <item>
      <title>我构建了一个小型 C 编译器来了解编译器的工作原理</title>
      <link>https://www.reddit.com/r/programming/comments/1o5vsh7/i_built_a_small_c_compiler_to_understand_how/</link>
      <description><![CDATA[我是一名软件工程师，想要了解编译器内部到底发生了什么 - 从解析到解释。 因此，我构建了一个名为 **Mini C Compiler** 的小型教育项目，它支持 C 的子集并通过解释器运行代码。 它并不是为了快速或完整，而是为了帮助理解编译器中的核心概念。 动手的方式。  我还提供了完整的文档，为有兴趣学习的人解释每个步骤。 🔗 GitHub：https://github.com/ironrinox/mini-c-compiler   由   提交/u/ironrinox9  [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o5vsh7/i_built_a_small_c_compiler_to_understand_how/</guid>
      <pubDate>Mon, 13 Oct 2025 20:48:56 GMT</pubDate>
    </item>
    <item>
      <title>生成式人工智能与代理式人工智能：有什么区别？</title>
      <link>https://www.reddit.com/r/programming/comments/1o5s6p5/generative_ai_vs_agentic_ai_whats_the_difference/</link>
      <description><![CDATA[ 由   提交 /u/thecoode   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o5s6p5/generative_ai_vs_agentic_ai_whats_the_difference/</guid>
      <pubDate>Mon, 13 Oct 2025 18:38:12 GMT</pubDate>
    </item>
    <item>
      <title>Redis 上运行的 Lua 脚本存在严重漏洞 - CVE-2025-49844</title>
      <link>https://www.reddit.com/r/programming/comments/1o5rmrn/critical_vulnerability_in_lua_scripts_run_on/</link>
      <description><![CDATA[我想知道你们对将脚本语言引入键值存储的整个想法有何看法，以便您可以“高效且原子地在 Redis 中执行部分应用程序逻辑”。   由   提交/u/matt_112358  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o5rmrn/critical_vulnerability_in_lua_scripts_run_on/</guid>
      <pubDate>Mon, 13 Oct 2025 18:18:15 GMT</pubDate>
    </item>
    <item>
      <title>测试并不能证明代码是正确的……他们只是同意它</title>
      <link>https://www.reddit.com/r/programming/comments/1o5rh32/tests_dont_prove_code_is_correct_they_just_agree/</link>
      <description><![CDATA[“测试并不能证明某件事是正确的，而是证明一段代码的行为方式与另一段代码认为它应该行为的方式相同。” 有一天，我在编写一些“完美通过”的测试时突然想到了这个想法。我意识到他们实际上并没有证明任何东西——只是确认我在两个地方的假设是匹配的。 当你的实现和测试都有相同的错误假设时，一切仍然会通过。绿色复选标记，虚假信心。 这让我重新思考测试的用途。它们并不是真正要证明真理——更多的是要锁定意图。一种说法是，“如果我改变这种行为，我想知道。” 棘手的部分是意图本身可能是错误的。 无论如何，这只是太多追求 100% 覆盖率的深夜的随机反映。很好奇你们都怎么想的——你们认为测试是验证、文档，还是只是控制混乱的护栏？   由   提交 /u/untypedfuture   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o5rh32/tests_dont_prove_code_is_correct_they_just_agree/</guid>
      <pubDate>Mon, 13 Oct 2025 18:12:44 GMT</pubDate>
    </item>
    <item>
      <title>基于行的 Lisp 编辑</title>
      <link>https://www.reddit.com/r/programming/comments/1o5res3/linebased_lisp_editing/</link>
      <description><![CDATA[ 由   提交/u/aartaka  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o5res3/linebased_lisp_editing/</guid>
      <pubDate>Mon, 13 Oct 2025 18:10:27 GMT</pubDate>
    </item>
    <item>
      <title>《星际迷航》中没有程序员</title>
      <link>https://www.reddit.com/r/programming/comments/1o5rdyg/there_are_no_programmers_in_star_trek/</link>
      <description><![CDATA[ 由   提交/u/Active-Fuel-49   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o5rdyg/there_are_no_programmers_in_star_trek/</guid>
      <pubDate>Mon, 13 Oct 2025 18:09:42 GMT</pubDate>
    </item>
    <item>
      <title>技术债务：让开发人员现在更快乐，或者以后付出更多</title>
      <link>https://www.reddit.com/r/programming/comments/1o5nnoe/technical_debt_make_developers_happier_now_or_pay/</link>
      <description><![CDATA[ 由   提交/u/nosoyjohn  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o5nnoe/technical_debt_make_developers_happier_now_or_pay/</guid>
      <pubDate>Mon, 13 Oct 2025 15:57:35 GMT</pubDate>
    </item>
    <item>
      <title>使用 Swift Subprocess 自动化所有事情</title>
      <link>https://www.reddit.com/r/programming/comments/1o5nm1t/automate_all_the_things_with_swift_subprocess/</link>
      <description><![CDATA[ 由   提交/u/jacobs-tech-tavern   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o5nm1t/automate_all_the_things_with_swift_subprocess/</guid>
      <pubDate>Mon, 13 Oct 2025 15:55:58 GMT</pubDate>
    </item>
    </channel>
</rss>