<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Wed, 20 Aug 2025 09:18:45 GMT</lastBuildDate>
    <item>
      <title>流程：LLM编排，及时测试和成本监控</title>
      <link>https://www.reddit.com/r/programming/comments/1mv9qbl/flowrun_llm_orchestration_prompt_testing_cost/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/stays_wing_9573        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mv9qbl/flowrun_llm_orchestration_prompt_testing_cost/</guid>
      <pubDate>Wed, 20 Aug 2025 09:10:29 GMT</pubDate>
    </item>
    <item>
      <title>一个简单的VS代码扩展程序，以记住每个编辑器窗口在Linux中的哪个虚拟桌面</title>
      <link>https://www.reddit.com/r/programming/comments/1mv9m0g/a_simple_vs_code_extension_to_remember_which/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/r./streccarbon       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mv9m0g/a_simple_vs_code_extension_to_remember_which/</guid>
      <pubDate>Wed, 20 Aug 2025 09:03:01 GMT</pubDate>
    </item>
    <item>
      <title>我创建了一个击键自动化实用程序（振动型）</title>
      <link>https://www.reddit.com/r/programming/comments/1mv9i0j/i_created_a_keystroke_automation_utility/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我厌倦了重新录制的教程视频，因为错字和慢速键入。 。 因此，我构建了 choreotyper   - 一个小型的开放式实用程序，可以自动从文本文件中键入键入键入的文本文件，以编码为活动的窗口。 “类型”我叙述时代码活着。看起来很自然，没有无尽的重演，更不用说编辑。  免责声明  当前版本是预发行的，需要一个桌面附件，例如Stream Deck，可以发送http requests         href =“ https://www.youtube.com/watch?v=1Mzld425b0w”&gt;视频：简介：present href =“ https://github.com/greek-developer/choreotyper”&gt; project：repository      &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/thomas-sarmis       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mv9i0j/i_created_a_keystroke_automation_utility/</guid>
      <pubDate>Wed, 20 Aug 2025 08:56:16 GMT</pubDate>
    </item>
    <item>
      <title>Vibe编码和AI代理重新定义了Web应用程序在2025年的构建方式 -  [研究结果]</title>
      <link>https://www.reddit.com/r/programming/comments/1mv9beq/vibe_coding_and_ai_agents_redefine_how_web_apps/</link>
      <description><![CDATA[We just wrapped up our fourth annual “Starting Web App” research, and the shift we’re seeing this year feels like a real breaking point in software development. Some highlights:  AI app generators exploded — they jumped to 38% adoption in just one year. “Vibe coding” (tools like Lovable, Bolt, Base44, etc.) went from experimental to mainstream, letting devs “chat” an app into existence. AI agents are starting to handle not just coding, but requirements gathering, schema changes, and even version control. Traditional DEV +低代码仍在这里，但是余额倾向于AI-First的方法。  完整的写入，数据和图表在这里：👉 https://flatlogic.com/starting-com/starting-web-app-n-2025-2025-2025-research-results-results-results-results-results-results 玩具？ 开发人员信任代理人会处理关键的后端 +数据工作，还是现在可以保持前端玩具？ 在接下来的2  -  3年中，这将如何重塑SaaS启动？提交由＆＃32;  /u/flatlogic-generator   [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mv9beq/vibe_coding_and_ai_agents_redefine_how_web_apps/</guid>
      <pubDate>Wed, 20 Aug 2025 08:44:42 GMT</pubDate>
    </item>
    <item>
      <title>博客“设计零信任体系结构：20种开源工具可保护每一层</title>
      <link>https://www.reddit.com/r/programming/comments/1mv91p8/blog_on_designing_a_zero_trust_architecture_20/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/philiplgriffiths88     [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mv91p8/blog_on_designing_a_zero_trust_architecture_20/</guid>
      <pubDate>Wed, 20 Aug 2025 08:27:17 GMT</pubDate>
    </item>
    <item>
      <title>SPL轻型多源混合计算实践</title>
      <link>https://www.reddit.com/r/programming/comments/1mv8onx/spl_lightweight_multisource_mixed_computation/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/vast_lab8278     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mv8onx/spl_lightweight_multisource_mixed_computation/</guid>
      <pubDate>Wed, 20 Aug 2025 08:03:59 GMT</pubDate>
    </item>
    <item>
      <title>Siksha Mitra |由Gemma LLM提供支持的离线AI导师（无需互联网）</title>
      <link>https://www.reddit.com/r/programming/comments/1mv8mm8/siksha_mitra_offline_ai_tutor_powered_by_gemma/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/ok_soil5098     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mv8mm8/siksha_mitra_offline_ai_tutor_powered_by_gemma/</guid>
      <pubDate>Wed, 20 Aug 2025 08:00:30 GMT</pubDate>
    </item>
    <item>
      <title>我构建了一个春季启动器，以供地图删除样板 - 欢迎反馈</title>
      <link>https://www.reddit.com/r/programming/comments/1mv8kwj/i_built_a_spring_boot_starter_for_mapstruct_to/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好， 在使用  spring boot + mapstruct 时，我注意到一个重复的痛苦：   反复编写 @code&gt; mapper（componentModel = componentModel =＆spring＆spring＆quet;有线的事情  首先看起来像是 small ……但是在多个项目和数十个映射器中，这种重复的设置变成了更大的生产力drag  和一个简单的错误来源。 。 does:  Auto-detects and registers MapStruct mappers in your Spring Boot app No need to specify componentModel = &quot;spring&quot; everywhere in the mappers Simple dependency + optional application.yml config → ready to go   安装：    1）依赖性：   maven：     ＆lt; depentency＆gt; ＆lt; groupId＆gt; com.codestackfoundry.starters＆lt;/groupid＆gt; ＆lt; artifactid＆gt; mapstruct-spring-boot-starter＆lt;/artifactid＆gt; gt; ＆lt;版本＆gt; 1.0.1＆lt;/version＆gt; ＆lt;/depentency＆gt;    gradle：  依赖项{实现&#39;com.codestackfoundry.starters：mapsstruct-spring-boot-starter：1.0.1&#39;}            conformution（optiation） com.example.demo.mapper-com.shared.mapper href =“ https://github.com/codestackfoundry/spring-boot-starters”&gt; https://github.com/codestackfoundry/spring-boot-spring-boot-starters  href =“ https://codestackfoundry.com/docs/mapsstruct-spring-boot-starter.html”&gt; https://codestackfoundry.com/docs/mapsstruct-spring-spring-boot-spring-boot-starter-boot-starter-boot-starter.html一下＆＃32;提交由＆＃32; /u/u/loblessscodelearn     ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mv8kwj/i_built_a_spring_boot_starter_for_mapstruct_to/</guid>
      <pubDate>Wed, 20 Aug 2025 07:57:29 GMT</pubDate>
    </item>
    <item>
      <title>Copilot打破了您的审核日志，但Microsoft不会告诉您</title>
      <link>https://www.reddit.com/r/programming/comments/1mv7cxz/copilot_broke_your_audit_log_but_microsoft_wont/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/Worth_Trust_3825   [link]  &lt;a href =“ https://www.reddit.com/r/programming/comments/1mv7cxz/copilot_broke_your_your_your_audit_but_but_but_microsoft_microsoft_wont/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mv7cxz/copilot_broke_your_audit_log_but_microsoft_wont/</guid>
      <pubDate>Wed, 20 Aug 2025 06:41:21 GMT</pubDate>
    </item>
    <item>
      <title>信不信由你，一个断路器以某种方式达到了六个Sigma质量（可靠性99.9997％）</title>
      <link>https://www.reddit.com/r/programming/comments/1mv774h/believe_it_or_not_a_circuit_breaker_that_somehow/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   嘿  r/programming   ，   我一直在为过去的几个月和几个月的时间进行断路器实施工作。 The performance numbers I&#39;m seeing are honestly surprising me - wondering if others can reproduce them. What I&#39;m claiming:  Six Sigma quality (≤3.4 DPMO, achieved 0.30 DPMO) 10-50x faster than traditional circuit breakers Sub-millisecond response times under load 用可用核心进行硬件缩放   我的怀疑部分说这些数字太好了，但是我已经在不同的机器上进行了测试，结果是一致的，并且结果是一致的。   尝试一下。 ：D    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/uthosivary-call26      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mv774h/believe_it_or_not_a_circuit_breaker_that_somehow/</guid>
      <pubDate>Wed, 20 Aug 2025 06:31:25 GMT</pubDate>
    </item>
    <item>
      <title>如何解决停止悖论</title>
      <link>https://www.reddit.com/r/programming/comments/1muzi1d/how_to_resolve_a_halting_paradox/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/fire_in_the_the_theater     [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1muzi1d/how_to_resolve_a_halting_paradox/</guid>
      <pubDate>Wed, 20 Aug 2025 00:03:35 GMT</pubDate>
    </item>
    <item>
      <title>我们如何利用CoderAbbit：从简单的PR到RCE到1M存储库上写入访问</title>
      <link>https://www.reddit.com/r/programming/comments/1muvk0j/how_we_exploited_coderabbit_from_a_simple_pr_to/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/f1_ignorant   href=&quot;https://research.kudelskisecurity.com/2025/08/19/how-we-exploited-coderabbit-from-a-simple-pr-to-rce-and-write-access-on-1m-repositories/&quot;&gt;[link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1muvk0j/how_we_exploited_coderabbit_from_a_simple_pr_to/</guid>
      <pubDate>Tue, 19 Aug 2025 21:23:54 GMT</pubDate>
    </item>
    <item>
      <title>Javadoc正在获得黑暗模式！</title>
      <link>https://www.reddit.com/r/programming/comments/1muty3h/javadoc_is_getting_a_dark_mode/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/davidalayachew     link&gt; link&gt; link&gt; [link]&gt; [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1muty3h/javadoc_is_getting_a_dark_mode/</guid>
      <pubDate>Tue, 19 Aug 2025 20:24:39 GMT</pubDate>
    </item>
    <item>
      <title>与Postgres同步：逻辑复制与ETL</title>
      <link>https://www.reddit.com/r/programming/comments/1mut7nd/syncing_with_postgres_logical_replication_vs_etl/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/philippemnoel      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mut7nd/syncing_with_postgres_logical_replication_vs_etl/</guid>
      <pubDate>Tue, 19 Aug 2025 19:58:01 GMT</pubDate>
    </item>
    <item>
      <title>D2（文本到字数）现在支持ASCII输出</title>
      <link>https://www.reddit.com/r/programming/comments/1muq8o4/d2_texttodiagram_now_supports_ascii_output/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/terrastruct      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1muq8o4/d2_texttodiagram_now_supports_ascii_output/</guid>
      <pubDate>Tue, 19 Aug 2025 18:11:32 GMT</pubDate>
    </item>
    </channel>
</rss>