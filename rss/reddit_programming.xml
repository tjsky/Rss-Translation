<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sun, 31 Aug 2025 12:29:27 GMT</lastBuildDate>
    <item>
      <title>构建了我自己的开发人员实用程序集（Regex，Grok，Json，diff，cron等），因为工作阻止了通常的网站 - 寻找反馈</title>
      <link>https://www.reddit.com/r/programming/comments/1n4spwz/built_my_own_set_of_developer_utilities_regex/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在我当前的组织中，许多常用的开发人员工具被阻止。例如，Regex101或Grok Debugger等网站无法从我们的内部网络访问。我发现自己花了太多时间，没有快速测试模式，调试JSON或验证Cron表达式的方法。 ，因此我决定为自己构建一个小型网络应用程序，将我最多使用的开发人员实用程序捆绑在一起。现在，它已经在内部直播，我每天都在使用它。这是我到目前为止构建的：•REGEX TESTER：实时测试和可视化正则匹配。 •Grok Tester：使用自定义或内置的Grok模式分析日志。 •JSON发言：可立即缩小或缩小JSON。 •DIFF查看器：并排比较两个文本片段，并突出显示差异。 •cron助手：验证cron表达式，获取人类可读的解释，并使用样本预设预览即将到来的运行时间。 •历史：快速重新审视最近的正则和Grok测试的方法。 •广告/面板占位符：计划将此空间用于广告（以抵消托管）或其他开发人员小部件。 这个想法是将所有东西都放在一个地方，这样我就不需要依靠外部工具，这些工具可能会根据公司的限制而可用。&gt; 我正在寻找其他开发人员的投入：•像其他工具一样，有什么用的工具，可以这样做，这是什么有用的。 •您认为的任何改进都可以使现有工具变得更好（UX，功能，快捷方式）？ •您经常希望有开发人员实用程序在公司的防火墙后面或在您公司的防火墙后面提供吗？ 很想听听您的想法。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/salle_bad_3120       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n4spwz/built_my_own_set_of_developer_utilities_regex/</guid>
      <pubDate>Sun, 31 Aug 2025 11:52:42 GMT</pubDate>
    </item>
    <item>
      <title>Next.js令人发指</title>
      <link>https://www.reddit.com/r/programming/comments/1n4rpq7/nextjs_is_infuriating/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/dminik       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n4rpq7/nextjs_is_infuriating/</guid>
      <pubDate>Sun, 31 Aug 2025 10:54:47 GMT</pubDate>
    </item>
    <item>
      <title>我不喜欢numpy</title>
      <link>https://www.reddit.com/r/programming/comments/1n4rioj/i_dont_like_numpy/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/utive-fuel-49       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n4rioj/i_dont_like_numpy/</guid>
      <pubDate>Sun, 31 Aug 2025 10:42:21 GMT</pubDate>
    </item>
    <item>
      <title>编译器驱动的开发：在浏览器中构建一个编译的榆树游乐场</title>
      <link>https://www.reddit.com/r/programming/comments/1n4rd6t/compilerdriven_development_building_an_elm/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/cekrem      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n4rd6t/compilerdriven_development_building_an_elm/</guid>
      <pubDate>Sun, 31 Aug 2025 10:32:27 GMT</pubDate>
    </item>
    <item>
      <title>IntentGraph：用于分析大型代码库的开源Python库（依赖关系映射，聚类，结构化输出）</title>
      <link>https://www.reddit.com/r/programming/comments/1n4pnga/intentgraph_opensource_python_library_for/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/raytracer       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n4pnga/intentgraph_opensource_python_library_for/</guid>
      <pubDate>Sun, 31 Aug 2025 08:42:11 GMT</pubDate>
    </item>
    <item>
      <title>真正提高速度的冲刺复古流</title>
      <link>https://www.reddit.com/r/programming/comments/1n4pf4z/the_sprint_retro_flow_that_actually_improves/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  曾经走出复古的感觉，就像什么都没有改变吗？ 🙋‍♂️我与Lead Dev进行了同样的对话 - 很棒的想法，但没有跟进。 诀窍？ A  30分钟的复古以结尾，只有一个或两个明确的动作和一个所有者。目标提醒✅快速检查过去的动作✅无声集思广益＆amp;在顶部疼痛点上进行投票✅定义下一步并将其锁定在 中保持紧密，保持专注并观察动量构建。 查看我的文章中的详细流程。  &lt;！ -  sc_on--&gt; 32;&gt; 32;提交由＆＃32; /u/u/u/gabortilldotcom      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n4pf4z/the_sprint_retro_flow_that_actually_improves/</guid>
      <pubDate>Sun, 31 Aug 2025 08:26:32 GMT</pubDate>
    </item>
    <item>
      <title>平行性动物园</title>
      <link>https://www.reddit.com/r/programming/comments/1n4n74c/the_parallelism_mesh_zoo/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/mttd      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n4n74c/the_parallelism_mesh_zoo/</guid>
      <pubDate>Sun, 31 Aug 2025 06:05:36 GMT</pubDate>
    </item>
    <item>
      <title>我如何用分布式锁服务服务器解决S3写入争议</title>
      <link>https://www.reddit.com/r/programming/comments/1n4lhll/how_i_solved_s3_write_contention_with_a/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  介绍 在构建分布式系统时，通常拥有需要写入共享资源的多个工人或服务（例如Amazon S3存储桶）。但是，S3不提供本机锁定，并同时写入可以导致数据损坏，种族条件或意外结果。在本文中，我将通过构建和部署分布式锁定服务器以及如何执行相同的操作来介绍如何解决此问题。 问题：并发写信给S3  想象您有几个分布式工人，每个人都将文件上传到同一S3桶。如果两名工人试图同时编写同一文件，则您有风险：  数据腐败或部分写入 不一致的状态 难以欺骗竞赛条件    稳健的解决方案都需要进行分布式锁定 - 所有工人都可以锁定策略。 我考虑了几种方法：   s3对象锁定：不适合所有用例，可以很复杂。  步骤2：构建一个分布式锁服务器 我决定构建一台专用的锁服务器，受到Redis setnx的简单性的启发，但使用REDIS的http api和rentful http api和客户端库的多种语言。  Secure Access的共享秘密  Rust，Python和Node.js  阻止和非阻挡锁定锁定获取  步骤3：实现锁服务器 我实现了生锈和可靠性。服务器公开两个端点：  发布/获取 - 尝试获取资源/所有者 发布/发布的锁，发布锁  每个请求必须包括一个共享的秘密。 node.js，使从lockkserver_client import lockserverclient = lockserverclient = lockserverclient = lockserverclient（lockserverclient（lockserverclient）（  python示例：   python示例： upload_to_s3（&#39;my-bucket&#39;，&#39;file.txt&#39;）最后：client.Release（&#39;s3-upload-lock&#39;）      node.js示例：         const const {lockserverclient} = lockserverclient} = const client = new lockserverclient（{所有者：&#39;worker-123&#39;，秘密：&#39;your-strong-secret&#39;}）;等待客户端。Acquire（&#39;s3-upload-lock&#39;）; //…上传到s3…等待客户端（&#39;s3-upload-lock&#39;）;   步骤5：部署和测试  将锁者部署为独立服务（Docker，Bare Metal或Cloud VM）    配置了所有工人使用同一lockserver_secretver_secretver_secretver_secret  eat agn torified at Fornified s Time Andied s Tirsified S Tore and Andied S Tore s Tirsified S 3资源  结果  不再有种族条件：一个工人一次写作。     language-agnostic：任何工人（Rust，Python，Node.js等）都可以参与。 结论 通过引入分布式锁服务器，我能够以可扩展，安全和语言的语言方式求解S3写入争论。如果您面临类似的挑战，请考虑使用或贡献给Lockserver。 链接：   github： href =“ https://crates.io/crates/lockserver”&gt; https://crates.io/crates/lockserver    npm： https://www.npmjs.com/package/package/lockserver-client        感谢您的阅读！如果您发现这很有帮助，请随时播放回购或在下面发表评论。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/plaping_clerk7250     [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n4lhll/how_i_solved_s3_write_contention_with_a/</guid>
      <pubDate>Sun, 31 Aug 2025 04:25:10 GMT</pubDate>
    </item>
    <item>
      <title>最小的看板</title>
      <link>https://www.reddit.com/r/programming/comments/1n4g6jf/the_most_minimal_kanban/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  撰写了本文，内容涉及实施最小的软件看板，以及可能对软件设计的说法。希望你喜欢。 🙂 我想尝试使用Linux中的CLI工具来为大多数人写一个Web应用程序的内容。我认为 可以使该模型与bash/yq一起使用，但不想对该概念进行编程。提交由＆＃32; /u/u/fd93_blog       [commist]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n4g6jf/the_most_minimal_kanban/</guid>
      <pubDate>Sat, 30 Aug 2025 23:50:00 GMT</pubDate>
    </item>
    <item>
      <title>AI合作者从头开始写了一个工作的C编译器</title>
      <link>https://www.reddit.com/r/programming/comments/1n4ez3d/ai_collaborator_wrote_a_working_c_compiler_from/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  如果有人想检查源本身，则将存储库链接。我一直在尝试使用AI来构建更复杂的软件系统。在过去的几周中，我们（我的AI合作者）（我 +“ EVE”）试图创建一个具有LLVM后端的C89编译器。  实验的目的是让代理商疯了，看看它可以做什么，不要取代人类或使其看起来像是生产级的编译器。  项目的当前状态：      程序  通过包括合并排序，FIB，2D数组和控制流  的测试，我发现有趣的是，适合AI驱动的开发的编译器如何非常适合编译器。由于它们是模块化且可测试的，因此可以通过测试驱动的开发和上下文管理来指导AI。在此设置下，夏娃生产了大部分系统。我的角色主要是在她被卡住并提供检查时重新开始她。 限制：  尚无优化通过 错误处理是最小的 清理和边缘案例和边缘案例仍然是不完整的             这是一个profectiment of Fastiment Impertiment Importife &lt;我可能是我的prove&gt;，我可能已经准备好了，这可能是我的p&gt;这个社区的反馈：  您建议您接下来运行什么基准或测试套件？ 编译器结构的哪些方面您认为AI驱动的系统最难处理？      对于上下文中，我也有ML的背景来训练我自己的模型。我的一部分动机是探索AI的软件开发仍然遥不可及，而不是预期的。  要澄清，AI并未带有现有的编译器代码库。工作流程及时→生成→测试→迭代。  当然，llms是通过人工编写的代码和文献进行培训的，因此输出是下游的。我认为这不太视为“纯发明”，而是更多地显示出正确的方法（TDD，模块化崩溃，上下文管理），AI可以无需直接人类实施的情况组装工作系统。  链接：         wyrmcc（compiler）： https://github.com/liyuzer/eve          &lt;！ -  sc_on-&gt; 32;提交由＆＃32; /u/u/u/u/comentivesprize20     link link&gt; [link link]  &lt;a href =“ https://www.reddit.com/r/programming/comments/1n4ez3d/ai_collaborator_wrote_a_working_c_compiler_from//]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n4ez3d/ai_collaborator_wrote_a_working_c_compiler_from/</guid>
      <pubDate>Sat, 30 Aug 2025 22:52:32 GMT</pubDate>
    </item>
    <item>
      <title>乐观还是悲观？了解数据库中的锁定</title>
      <link>https://www.reddit.com/r/programming/comments/1n4eewc/optimistic_or_pessimistic_understanding_locking/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/dhairya-chauhan     [link]  ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n4eewc/optimistic_or_pessimistic_understanding_locking/</guid>
      <pubDate>Sat, 30 Aug 2025 22:26:20 GMT</pubDate>
    </item>
    <item>
      <title>为什么“首先发生了什么？”是大规模系统中最难的问题之一</title>
      <link>https://www.reddit.com/r/programming/comments/1n4dldv/why_what_happened_first_is_one_of_the_hardest/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/scalableThread      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n4dldv/why_what_happened_first_is_one_of_the_hardest/</guid>
      <pubDate>Sat, 30 Aug 2025 21:49:47 GMT</pubDate>
    </item>
    <item>
      <title>试图在物理硬件上运行自己的操作系统（结果混合）</title>
      <link>https://www.reddit.com/r/programming/comments/1n4c1qe/trying_to_run_my_own_os_on_physical_hardware_with/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/daedaluscommunity       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n4c1qe/trying_to_run_my_own_os_on_physical_hardware_with/</guid>
      <pubDate>Sat, 30 Aug 2025 20:42:46 GMT</pubDate>
    </item>
    <item>
      <title>Tinyrender的第二版：500行Bare C ++的软件渲染</title>
      <link>https://www.reddit.com/r/programming/comments/1n4bxwe/second_edition_of_tinyrenderer_software_rendering/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/haqreu      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n4bxwe/second_edition_of_tinyrenderer_software_rendering/</guid>
      <pubDate>Sat, 30 Aug 2025 20:38:08 GMT</pubDate>
    </item>
    <item>
      <title>WOW私人服务器C ++代码评论tariq10x</title>
      <link>https://www.reddit.com/r/programming/comments/1n47l0k/wow_private_servers_c_code_review_by_tariq10x/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  高质量的深入研究私人服务器在引擎盖下的工作方式。作为一个在这些日子里玩过这些的人，我总是想知道他们是如何将其删除的。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/bulltrapking       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n47l0k/wow_private_servers_c_code_review_by_tariq10x/</guid>
      <pubDate>Sat, 30 Aug 2025 17:36:04 GMT</pubDate>
    </item>
    </channel>
</rss>