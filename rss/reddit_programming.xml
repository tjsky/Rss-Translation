<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Mon, 28 Jul 2025 15:20:45 GMT</lastBuildDate>
    <item>
      <title>🌀我构建了Rewindtty：作为JSON日志记录和重播终端会话的C工具（就像您的CLI的黑匣子一样）</title>
      <link>https://www.reddit.com/r/programming/comments/1mbiib6/i_built_rewindtty_a_c_tool_to_record_and_replay/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿，伙计们！ 👋 在过去的几周中，我一直在使用C中的一个小工具，   rewindtty    - 它就像一个黑框一样，就像您的终端。记录：启动一个外壳（或任何程序），将所有输入和输出记录到JSON日志。   rewindtty重播：在类似终端环境中逐步重播该会话。    2024-07-28T14：01：01：03Z＆QOED命令：ls-la-la-la; }  Why? I wanted a dead-simple way to:  Capture what really happened in a CLI session, without overengineering. Debug or share reproducible steps with colleagues (like &quot;here’s exactly what I typed and what I got&quot;). Build a foundation for visual or animated终端播放（想想GIF或Asciinema式出口）。  它如何工作 在引擎盖下：  使用fork （）在pseudo-terminal internical interminal.i&gt;    时间戳。 干净的JSON输出使我可以轻松进行转换，差异，分析或可视化。  我正在与我一起玩的很酷的想法：  导出到 .cast&gt; .cast  .cast  form&gt; form  gif gif gif或svg Animantial  git或关键脚本的自动记录挂钩 比较调试的两个会话    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/debba_      &lt;a href =“ https://www.reddit.com/r/programming/comments/1mbiib6/i_built_built_redtty_a_c_c_tool_to_too_to_too_to_record_and_replay/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mbiib6/i_built_rewindtty_a_c_tool_to_record_and_replay/</guid>
      <pubDate>Mon, 28 Jul 2025 15:00:00 GMT</pubDate>
    </item>
    <item>
      <title>AI堆栈没有人谈论：数据获取为基础架构</title>
      <link>https://www.reddit.com/r/programming/comments/1mbgr3m/the_ai_stack_no_one_talks_about_data_acquisition/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/9millionrainydays_91       [link]     [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mbgr3m/the_ai_stack_no_one_talks_about_data_acquisition/</guid>
      <pubDate>Mon, 28 Jul 2025 13:51:57 GMT</pubDate>
    </item>
    <item>
      <title>为什么在开发中镜像生产可以帮助您避免昂贵的错误</title>
      <link>https://www.reddit.com/r/programming/comments/1mbgn9w/why_mirroring_production_in_dev_helps_you_avoid/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/majestic_wallaby7374      [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mbgn9w/why_mirroring_production_in_dev_helps_you_avoid/</guid>
      <pubDate>Mon, 28 Jul 2025 13:47:48 GMT</pubDate>
    </item>
    <item>
      <title>告别代码评论：无需人类</title>
      <link>https://www.reddit.com/r/programming/comments/1mbgh4o/say_goodbye_to_code_reviews_no_humans_necessary/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://medium.com/data-science-collection/say-goodbye-to-code-reviews-no-humans-noressary-e35d05f154ca?sk=eb406cb406cb406cb9fcaff313137bda37bda3da3da3da693be63be602a  &lt;a href =“ https://www.reddit.com/r/programming/comments/1mbgh4o/say_goodbye_to_code_code_reviews_no_humans_nexces/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mbgh4o/say_goodbye_to_code_reviews_no_humans_necessary/</guid>
      <pubDate>Mon, 28 Jul 2025 13:40:43 GMT</pubDate>
    </item>
    <item>
      <title>Angular面试问答：第29天</title>
      <link>https://www.reddit.com/r/programming/comments/1mbg8ri/angular_interview_qa_day_29/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/myssiriouseye8494     [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mbg8ri/angular_interview_qa_day_29/</guid>
      <pubDate>Mon, 28 Jul 2025 13:31:03 GMT</pubDate>
    </item>
    <item>
      <title>Node.js采访问答：第23天</title>
      <link>https://www.reddit.com/r/programming/comments/1mbg4y2/nodejs_interview_qa_day_23/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/myssiriouseye8494     [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mbg4y2/nodejs_interview_qa_day_23/</guid>
      <pubDate>Mon, 28 Jul 2025 13:26:38 GMT</pubDate>
    </item>
    <item>
      <title>真正的问</title>
      <link>https://www.reddit.com/r/programming/comments/1mbfq0k/the_real_ask/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/userziltoid      ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mbfq0k/the_real_ask/</guid>
      <pubDate>Mon, 28 Jul 2025 13:09:01 GMT</pubDate>
    </item>
    <item>
      <title>没有摩尔饼干</title>
      <link>https://www.reddit.com/r/programming/comments/1mbfo0j/no_moar_cookies/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/xadartt      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mbfo0j/no_moar_cookies/</guid>
      <pubDate>Mon, 28 Jul 2025 13:06:36 GMT</pubDate>
    </item>
    <item>
      <title>TCMALLOC的Temeraire：大型意见分配器</title>
      <link>https://www.reddit.com/r/programming/comments/1mbfnjy/tcmallocs_temeraire_a_hugepageaware_allocator/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/cewedwire     ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mbfnjy/tcmallocs_temeraire_a_hugepageaware_allocator/</guid>
      <pubDate>Mon, 28 Jul 2025 13:06:04 GMT</pubDate>
    </item>
    <item>
      <title>🚀我做了一个GPT，可以重写凌乱的代码注释（开发，这是给您的）</title>
      <link>https://www.reddit.com/r/programming/comments/1mbf74o/i_made_a_gpt_that_rewrites_messy_code_comments/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  您知道那些丑陋的，过时的代码注释，这些评论比它们帮助更多？ 我建立了一个gpt来解决这个问题。        repriter rewriter pro  pro    专业精神 保持您的代码完整 在Python，JS，Bash等上工作。会喜欢反馈！ 🧪尝试一下→ https://chatgpt.com/g/g/g-68876f1fa6e081918d2c70e442d816-comment-rewriter-pro   放弃您最糟糕的代码评论，我将向您展示它如何改进它。 👇  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/armard_ad_672     [link]    [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mbf74o/i_made_a_gpt_that_rewrites_messy_code_comments/</guid>
      <pubDate>Mon, 28 Jul 2025 12:45:58 GMT</pubDate>
    </item>
    <item>
      <title>在编码挑战中，AI上次可能会输给人类</title>
      <link>https://www.reddit.com/r/programming/comments/1mbeyb9/likely_the_last_time_ai_will_lose_to_humans_in_a/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在最近的一场编码比赛中，一个名叫Psyho的人类编码器在3天内仅10个小时的睡眠后就击败了Openai强大的AI模型。当人类最后一次击败AI驱动的国际象棋机器人（深蓝色/深思熟虑）时，Psyho可能是Garry Kasparov的感觉，可能是最后一个在编码时击败AI的人。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/logical-studio-729       32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mbeyb9/likely_the_last_time_ai_will_lose_to_humans_in_a/</guid>
      <pubDate>Mon, 28 Jul 2025 12:34:14 GMT</pubDate>
    </item>
    <item>
      <title>使用Reddit的基于文本的RPG</title>
      <link>https://www.reddit.com/r/programming/comments/1mbeb9y/text_based_rpg_using_reddit/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我参加了 boot.dev  2025 Hackathon，并为此写了此基本RPG！它使用Praw API从Reddit检索信息以供游戏中使用。您可以将您的Reddit帐户连接到游戏中，以将业力用作统计数据并与其他用户抗衡。它仍然非常未完成，但是制作很有趣！  github link     &lt;！ -  sc_on-&gt; sc_on-&gt;＆＃32;提交由＆＃32; /u/u/consentement_pirate168      ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mbeb9y/text_based_rpg_using_reddit/</guid>
      <pubDate>Mon, 28 Jul 2025 12:03:16 GMT</pubDate>
    </item>
    <item>
      <title>vi.mock是脚步：为什么vi.spyon应该是您的默认值</title>
      <link>https://www.reddit.com/r/programming/comments/1mbe4a2/vimock_is_a_footgun_why_vispyon_should_be_your/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/bezomaxo   [link] ＆＃32;  &lt;a href =“ https://www.reddit.com/r/programming/comments/1mbe4a2/vimock_is_is_a_footgun_footgun_why_vispyon_vispyon_should_be_your/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mbe4a2/vimock_is_a_footgun_why_vispyon_should_be_your/</guid>
      <pubDate>Mon, 28 Jul 2025 11:53:38 GMT</pubDate>
    </item>
    <item>
      <title>粉丝以1个图和186个单词</title>
      <link>https://www.reddit.com/r/programming/comments/1mbdzmk/fanin_in_1_diagram_and_186_words/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/stmoreau   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mbdzmk/fanin_in_1_diagram_and_186_words/</guid>
      <pubDate>Mon, 28 Jul 2025 11:46:56 GMT</pubDate>
    </item>
    <item>
      <title>轻量级文件扫描仪</title>
      <link>https://www.reddit.com/r/programming/comments/1mbdl5d/lightweight_file_scanner/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   **标题：** show＆amp; Tell: Pompelmi — Node.js middleware to scan file uploads (TypeScript, local, optional YARA) I’ve been tinkering on **Pompelmi**, a small TypeScript library that scans **uploaded files** in Node.js apps **locally** (no cloud calls) and can optionally use **YARA** rules. **What it **    - 标记上传为**清洁/可疑/恶意**    - 真实的哑剧嗅探（魔术字节） + **扩展允许且允许且允许 -     -  **  -  ** max size ** max size ** limits and ** zip ** zip ** zip-zip-zip-zip-zip-bombome y y y y-p&gt; y y y-p&gt; p&gt; p&gt;      可插入；今天没有手动系统安装）   - 今天的适配器：** express/koa/next.js（应用程序路由器）**  - 更多计划的  ** tiny示例（express）**  有关快速适配器的确切导入路径，请参见README： 从&#39;pompelmi/express&#39;  const app = express = express（）  const upload = multer（Multer（） upload.single(&#39;file&#39;), pompelmi({ allow: [&#39;jpg&#39;, &#39;png&#39;, &#39;pdf&#39;], maxSize: &#39;10mb&#39;, // Optional YARA rules: // yara: { rules: [/* ... */] }  }）， （req，res）=＆gt; }） 在  api人体工程学（中间软件与较低级别），dx，错误报告  perf consel/edge Case/edge Case/edge Case（大文件，深度zips） 中，您喜欢下一个js框架，您会喜欢PISTIPAL，remix，remix pp a，pp a p p&gt; href =“ https://github.com/pompelmi/pompelmi”&gt; https://github.com/pompelmi/pompelmi/pompelmi    公开：我是作者。现在（alpha），我很想反馈＆amp; prs。  pgsql  复制  edit    ----      **可选固定的第一个注释（复制/粘贴为您的最高答复）：**     扫描？**隐私 +延迟。文件永远不会离开您的应用；没有外部API调用。   -  **我需要yara吗？**可选。您可以从基本检查（MIME，大小，ZIP）开始，并在需要更深入的检测时添加Yara规则。   -  **为什么不clamav？ Pompelmi的目的是用于JS应用程序的DX。   -  ** zip安全？对更严格的政策的想法开放。   -  **路线图？提交由＆＃32; /u/u/extension-count-2412      [commist]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mbdl5d/lightweight_file_scanner/</guid>
      <pubDate>Mon, 28 Jul 2025 11:25:23 GMT</pubDate>
    </item>
    </channel>
</rss>