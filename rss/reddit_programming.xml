<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Fri, 29 Aug 2025 18:21:37 GMT</lastBuildDate>
    <item>
      <title>我一直在研究编码日记，以组织解决问题，实践和修订（myleetspace.com）</title>
      <link>https://www.reddit.com/r/programming/comments/1n3euz9/ive_been_working_on_a_coding_journal_to_organize/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好！我一直在构建 myleetspace ，一个简单的编码日记期，您可以记录您的编码问题和解决方案。 关键功能到目前为止：       log log log log a Reprect and titles，li&gt; li&gt;        一个个人仪表板，可视化您的编码进度和一致性。 “以后再访问”选项，因为您想回到。如果您有机会，请在桌面上尝试以最佳体验。 这是与我的室友一起作为个人工具开始的，我们很好奇它也能帮助其他开发人员。 ，请提前感谢您的输入，您的输入确实可以帮助下一版本！提交由＆＃32; /u/u/atlan007      &lt;a href =“ https://www.reddit.com/r/programming/comments/1n3euz9/ive_been_working_oon_a_a_coding_journal_to_organize/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n3euz9/ive_been_working_on_a_coding_journal_to_organize/</guid>
      <pubDate>Fri, 29 Aug 2025 18:12:51 GMT</pubDate>
    </item>
    <item>
      <title>AI对卷曲项目的攻击-Daniel Stenberg</title>
      <link>https://www.reddit.com/r/programming/comments/1n3brtd/ai_slop_attacks_on_the_curl_project_daniel/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/mastx3       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n3brtd/ai_slop_attacks_on_the_curl_project_daniel/</guid>
      <pubDate>Fri, 29 Aug 2025 16:16:09 GMT</pubDate>
    </item>
    <item>
      <title>Grok的第一个氛围编码代理具有很高的“不诚实速度”</title>
      <link>https://www.reddit.com/r/programming/comments/1n3bl8q/groks_first_vibecoding_agent_has_a_high/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/hot_transportation87     [link]    32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n3bl8q/groks_first_vibecoding_agent_has_a_high/</guid>
      <pubDate>Fri, 29 Aug 2025 16:09:11 GMT</pubDate>
    </item>
    <item>
      <title>现代化服务虚拟化时要寻找什么</title>
      <link>https://www.reddit.com/r/programming/comments/1n3bcqp/what_to_look_for_when_modernizing_service/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/misoverwriting2919      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n3bcqp/what_to_look_for_when_modernizing_service/</guid>
      <pubDate>Fri, 29 Aug 2025 16:00:19 GMT</pubDate>
    </item>
    <item>
      <title>PGD​​OG添加了对Rust插件的支持</title>
      <link>https://www.reddit.com/r/programming/comments/1n3b8ck/pgdog_adds_support_for_rust_plugins/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/levkk1       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n3b8ck/pgdog_adds_support_for_rust_plugins/</guid>
      <pubDate>Fri, 29 Aug 2025 15:55:42 GMT</pubDate>
    </item>
    <item>
      <title>即将到来的工程悬崖</title>
      <link>https://www.reddit.com/r/programming/comments/1n3ag1c/the_coming_engineering_cliff/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://generativeai.pub/the-coming-engineering-cliff-5f961c432c56？   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n3ag1c/the_coming_engineering_cliff/</guid>
      <pubDate>Fri, 29 Aug 2025 15:25:47 GMT</pubDate>
    </item>
    <item>
      <title>自我修复系统：建筑模式</title>
      <link>https://www.reddit.com/r/programming/comments/1n39yxo/selfhealing_systems_architectural_patterns/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  每个自我修复系统都在连续循环中起作用的三个核心原理上运行： 检测：系统的神经系统 现代的自我治疗依赖于多层健康信号，而不是简单的PING检查。 Netflix的微服务不仅是监控CPU和内存 - 它们跟踪业务指标，例如建议精度和用户参与率。   断路器集成：当服务的错误率超过50％时，断路器断路器会自动隔离它，同时隔离它，同时恢复机制。这可以防止恢复过程中的级联反应。 A sudden 300% increase in database query time triggers healing before users notice slowness. Decision: The Healing Brain The decision engine determines the appropriate response based on failure type, system state, and historical success rates of different recovery strategies. Recovery Strategy Selection: Memory leaks trigger instance replacement, while network issues trigger retry with exponential backoff.数据库连接耗尽触发连接池缩放。  风险评估：采取行动之前，系统会评估潜在的影响。在高峰时段重新启动关键服务可能会造成比原始问题更大的损害。 动作：康复手 恢复动作的恢复动作范围从轻柔的调整到积极的干预措施，始终优先考虑系统稳定性，而不是完美的恢复。   优美的降级：而不是完全失败，完全失败，系统降低功能。当CDN节点失败而不是显示错误页面时，YouTube提供较低质量的视频。  渐进恢复：康复会逐渐发生。一个实例一次重新启动，然后进行健康验证，然后再进行下一个实例。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/fefres_ear_10       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n39yxo/selfhealing_systems_architectural_patterns/</guid>
      <pubDate>Fri, 29 Aug 2025 15:07:44 GMT</pubDate>
    </item>
    <item>
      <title>请求停止Google对Android开发人员的攻击</title>
      <link>https://www.reddit.com/r/programming/comments/1n38vz6/petition_to_stop_googles_attack_on_android_devs/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  签署请愿书！ 🫵✊🤝  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/clippy-windows95       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n38vz6/petition_to_stop_googles_attack_on_android_devs/</guid>
      <pubDate>Fri, 29 Aug 2025 14:25:53 GMT</pubDate>
    </item>
    <item>
      <title>Instacart在PostgreSQL上合并搜索基础架构，逐步淘汰Elasticsearch</title>
      <link>https://www.reddit.com/r/programming/comments/1n38n66/instacart_consolidates_search_infrastructure_on/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/rgancarz      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n38n66/instacart_consolidates_search_infrastructure_on/</guid>
      <pubDate>Fri, 29 Aug 2025 14:16:15 GMT</pubDate>
    </item>
    <item>
      <title>生锈的承诺</title>
      <link>https://www.reddit.com/r/programming/comments/1n355fd/the_promise_of_rust/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/use-monad     link link”&gt;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n355fd/the_promise_of_rust/</guid>
      <pubDate>Fri, 29 Aug 2025 11:43:47 GMT</pubDate>
    </item>
    <item>
      <title>LLM和代理应用程序的安全剧本</title>
      <link>https://www.reddit.com/r/programming/comments/1n32pp1/the_security_playbook_for_llm_agentic_apps/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿，我又一次👋 我最近花了太多时间看着Genai如何将Genai螺栓固定在应用程序中……而且总是困扰着我的一件事是：是：我们实际上是在填充我们的手指，或者只是在填充我们的手指，或者是prock for Anger for Anger？ （2025），其中一些确实使我感到震惊。它不仅是“迅速注射”：  攻击者可以迫使您的模型进入失控的计算（又称“模型dos”）， 中毒的训练数据将数据潜入您的系统中， 团队盲目地盲目地相信模型输出，没有守卫。与团队扫描/共享  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/skenklok86     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n32pp1/the_security_playbook_for_llm_agentic_apps/</guid>
      <pubDate>Fri, 29 Aug 2025 09:26:50 GMT</pubDate>
    </item>
    <item>
      <title>我如何意外构建了Claude代码的实时AI执行系统</title>
      <link>https://www.reddit.com/r/programming/comments/1n319ig/how_i_accidentally_built_a_realtime_ai/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/standard_excuse7988      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n319ig/how_i_accidentally_built_a_realtime_ai/</guid>
      <pubDate>Fri, 29 Aug 2025 07:52:43 GMT</pubDate>
    </item>
    <item>
      <title>再次使行为状态！</title>
      <link>https://www.reddit.com/r/programming/comments/1n31139/make_behaviour_state_again/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  （...） 这意味着当我们谈论配置与数据不同时，我们会失去许多效率。事实是，无论我们试图将两者分开多少，配置都是数据。 （通常）设计良好的高可用性系统经历的所有主要停电都是因为我们整个行业几乎都错过了这个真理。  不相信我吗？考虑一下这些系统旨在承受任何单个计算机主机甚至数据中心的损失的事实。因此，硬件失效（本身）不应导致停电（除非完美协调）。因此，即使最初是由某些硬件问题（例如失败的主机或发电机）引起的某种中断，整体系统也被设计（可能经过测试）来生存此类问题，但它未能做到这一点。这些更改是配置变换，它们会出乎意料，即时地“推出”。 如果我们的系统在其数据和配置中共享了一个全局时间表，并且数据和配置都与执行环境（即，虚拟化完美地）分开生活（即完美地），另一个系统可能会在一边征用一份超过一份。实际上 - 在这种情况下 - 任何数量的计算机都可以为这些系统提供任何数量的服务，因此，故障只能在计算机遭受故障时直接与客户直接与他们进行交流。  （...）  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/andras_gerlits       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n31139/make_behaviour_state_again/</guid>
      <pubDate>Fri, 29 Aug 2025 07:37:13 GMT</pubDate>
    </item>
    <item>
      <title>使用git作为AI代码助手的存储层</title>
      <link>https://www.reddit.com/r/programming/comments/1n30oo9/using_git_as_a_memory_layer_for_ai_code_assistants/</link>
      <description><![CDATA[Hey everyone, I&#39;ve been exploring an interesting pattern: using git as a queryable memory for AI coding assistants. The problem: AI assistants like Claude have no memory between sessions and every debugging session means re-explaining your entire codebase burning lot of tokens. My approach:自动命令每个文件保存到平行的本地隐藏的git存储库中，然后通过mcp。通过mcp。 将git操作暴露到AI中。 ，而不是喂给我整个代码库的claude，它现在直接在此隐藏的仓库上运行git命令（其中包含我的CodeBase的完整演变）。它确切地知道我看到的不同情况下要运行的命令。您！ Alessandro   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/utake-emplionment-592       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n30oo9/using_git_as_a_memory_layer_for_ai_code_assistants/</guid>
      <pubDate>Fri, 29 Aug 2025 07:14:27 GMT</pubDate>
    </item>
    <item>
      <title>欧盟的开源困境也是如此：很多人都看到好处，很少有贡献</title>
      <link>https://www.reddit.com/r/programming/comments/1n2xsd1/open_source_dilemma_in_the_eu_too_many_see/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/donutloop      &lt;a href =“ https://www.reddit.com/r/programming/comments/1n2xsd1/open_source_dilemma_in_eu_eu_too_too_too_many_see/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n2xsd1/open_source_dilemma_in_the_eu_too_many_see/</guid>
      <pubDate>Fri, 29 Aug 2025 04:20:00 GMT</pubDate>
    </item>
    </channel>
</rss>