<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Thu, 28 Aug 2025 15:17:38 GMT</lastBuildDate>
    <item>
      <title>我建立了一些阻止我过度思考创业想法的东西</title>
      <link>https://www.reddit.com/r/programming/comments/1n2erow/i_built_something_that_stopped_me_from/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  几个月前，我达到了我在笔记应用程序中有10个以上的想法，但无法承诺的一点。有些人感到太小了。有些人感到不可能。，大多数时候，我什么都不做，因为我一无所获，因为我只是在何时瘫痪了，因为我会瘫痪吗？ small tool for myself. The goal was simple: → Ask the right questions about an idea → Get quick feedback on whether it’s worth pursuing → Stop wasting months chasing dead ends It wasn’t meant to be anything big at first, just my own system. But after testing它在一些想法上，我意识到它实际上为我节省了数小时的研究和过度思考。&lt; /p&gt; ，所以我决定将其放在网上，以防其他人也想使用它。不要试图用力付出任何努力，只是认为它可能会帮助某人粘在同一个循环中。 href =“ http://startup-solve.lovable.app”&gt;启动solve    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/dayApprehense7197      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n2erow/i_built_something_that_stopped_me_from/</guid>
      <pubDate>Thu, 28 Aug 2025 15:05:53 GMT</pubDate>
    </item>
    <item>
      <title>关于40年资深人士的氛围编码的想法</title>
      <link>https://www.reddit.com/r/programming/comments/1n2cmqo/thoughts_on_vibe_coding_from_a_40year_veteran/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我一直在编码 40年（从80年代开始使用8位组装），最近决定正确测试此“ VIBE编码”事物。我花了2周的时间完全通过与AI Assistants的对话（Claude 4，Gemini 2.5pro，GPT -4）来开发一个Python项目  - 没有直接代码写作，只有英语说明。  我在本文中记录了整个体验 - 所有300多个交流。我分享了我遇到的令人印象深刻的能力和微妙的陷阱的特定示例，以及对这对开发人员意味着什么的反思（包括心理和情感观点）。我与AI共同开发的测试源代码是在github上可用可获得最大的透明度。 上下文中，我在AI中拥有博士学位，我目前在AI团队中担任AI团队，但我从事这个大型组织的研究，但我从事这个范围，但我从事这项工作，但我曾经是AI的研究，但我曾经是AI的练习。一个。 结果既不能取代我们”。 “这也不只是炒作。叙事，但更细微的东西。最让我震惊的是，VC如何改变编程中不确定性的处理。编码不是在处理僵化的形式语言时居住在程序员头上的所有模糊，而是在人与机器之间共享歧义 链接。 href =“ https://marcobendeti.substack.com/p/vibe-coding-as-a-coding-veteran”&gt; https://marcobendetti.substack.com/p/p/vibe-coding-as-as-a-as-a-a-a-a-a-a-a-a-coding-coding-coding-veteran-coding-veteran  href =“ https://github.com/mabene/vibe”&gt; https://github.com/mabene/vibe     edimpor（ href=&quot;https://medium.com/gitconnected/vibe-coding-as-a-coding-veteran-cd370fe2be50&quot;&gt;https://medium.com/gitconnected/vibe-coding-as-a-coding-veteran-cd370fe2be50   ＆＃32;提交由＆＃32; /u/u/u/helicoptermountain92     [link]  ＆＃32;  &lt;a href =“ https://www.reddit.com/r/programming/comments/1n2cmqo/thoughts_on_vibe_coding_from_a_40year_veteran/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n2cmqo/thoughts_on_vibe_coding_from_a_40year_veteran/</guid>
      <pubDate>Thu, 28 Aug 2025 13:44:50 GMT</pubDate>
    </item>
    <item>
      <title>Ruby中的冷冻弦危险吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1n2cd41/frozen_strings_in_ruby_are_dangerous/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/mehdifarsi       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n2cd41/frozen_strings_in_ruby_are_dangerous/</guid>
      <pubDate>Thu, 28 Aug 2025 13:33:37 GMT</pubDate>
    </item>
    <item>
      <title>为什么我们对中间管理人员感到不满</title>
      <link>https://www.reddit.com/r/programming/comments/1n2b7d9/why_we_resent_middle_managers/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/oupanut     [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n2b7d9/why_we_resent_middle_managers/</guid>
      <pubDate>Thu, 28 Aug 2025 12:43:02 GMT</pubDate>
    </item>
    <item>
      <title>与应用程序成为百万富翁的原始数学</title>
      <link>https://www.reddit.com/r/programming/comments/1n2b1v5/the_raw_math_of_becoming_a_millionaire_with_apps/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/derjanni     &lt;a href =“ https://www.reddit.com/r/programming/comments/1n2b1v5/1n2b1v5/the_raw_math_of_becoming_a_millioneaire_with_with_with_apps/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n2b1v5/the_raw_math_of_becoming_a_millionaire_with_apps/</guid>
      <pubDate>Thu, 28 Aug 2025 12:35:55 GMT</pubDate>
    </item>
    <item>
      <title>现实世界中的Java•Victor Graz，Jeanne Boyarsky和Barry Burd</title>
      <link>https://www.reddit.com/r/programming/comments/1n2b048/realworld_java_victor_grazi_jeanne_boyarsky_barry/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/goto-con      &lt;a href =“ https://www.reddit.com/r/programming/comments/1n2b048/realworld_java_java_victor_grazi_jeanne_boyarsky_boyarsky_barry/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n2b048/realworld_java_victor_grazi_jeanne_boyarsky_barry/</guid>
      <pubDate>Thu, 28 Aug 2025 12:33:44 GMT</pubDate>
    </item>
    <item>
      <title>小组借款：零成本的内存安全性，限制更少</title>
      <link>https://www.reddit.com/r/programming/comments/1n2ay1p/group_borrowing_zerocost_memory_safety_with_fewer/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/verdagon      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n2ay1p/group_borrowing_zerocost_memory_safety_with_fewer/</guid>
      <pubDate>Thu, 28 Aug 2025 12:30:59 GMT</pubDate>
    </item>
    <item>
      <title>您希望您之前学到的一个编程概念是什么？</title>
      <link>https://www.reddit.com/r/programming/comments/1n2amrg/whats_the_one_programming_concept_you_wish_you/</link>
      <description><![CDATA[I’ve been coding for a while now, and something I’ve realized is that there are always concepts you wish you understood earlier—whether it’s clean code practices, debugging tricks, algorithms, or even version control. For me, it was understanding time complexity.一旦我对大o进行了适当的抓地力，我的整个问题解决方法都改变了。 好奇地知道 - 一个概念，提示或习惯是您希望有人告诉您何时开始的概念，提示或习惯？提交由＆＃32; /u/u/u/asleepchildhood6085       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n2amrg/whats_the_one_programming_concept_you_wish_you/</guid>
      <pubDate>Thu, 28 Aug 2025 12:16:33 GMT</pubDate>
    </item>
    <item>
      <title>我对从未为我的多动症工作的计时器感到厌倦，以至于我决定尝试自己制作。</title>
      <link>https://www.reddit.com/r/programming/comments/1n2a76r/i_got_so_fed_up_with_timers_that_never_worked_for/</link>
      <description><![CDATA[I’ve tested so many focus tools, most of them beep too loudly, buzz annoyingly, or drag me back into my phone (which just makes things worse). So, I’ve been working on a calmer alternative: Reminder Rock™ - a small, screen-free, pebble-shaped timer that glows gently and vibrates softly when time’s 向上。您实际上可以握在手中的东西，而不会感觉像是另一个分散注意力的小工具。 ，但是在进一步发展之前，我希望每天都在处理这个问题的人的意见。我整理了一项超级短2分钟的调查，以了解最让您沮丧的计时器和重点工具，以及这个想法是否真的会有所帮助。&lt; /p&gt; 👉&lt; /p&gt;  thist thert in the First 100响应以赢得第一个提醒岩石之一。调查链接： https://reminderrock.carrd.co/    非常感谢您的想法，您会花点时间分享您的想法。提交由＆＃32; /u/u/u/bearlyEnternateed     &lt;a href =“ https://www.reddit.com/r/programming/comments/1n2a76r/1n2a76r/i_got_so_so_so_fed_up_with_with_timers_that_that_never_never_worked_worked_for/”]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n2a76r/i_got_so_fed_up_with_timers_that_never_worked_for/</guid>
      <pubDate>Thu, 28 Aug 2025 11:55:43 GMT</pubDate>
    </item>
    <item>
      <title>Memcp：2分钟内300m行 - 开源压缩SQL引擎</title>
      <link>https://www.reddit.com/r/programming/comments/1n29vs2/memcp_300m_rows_in_2_minutes_open_source/</link>
      <description><![CDATA[Hey folks, I’d like to share an Open Source project we’ve been working on: – an in-memory SQL engine that compresses data heavily and runs aggregations extremely fast. Here’s a benchmark from a real test:  300,000,000 rows (raw data: 33 GB JSON数据性能轨迹）  压缩至1.3 GB RAM      sum +组， cook  QUERY在〜2分钟 进行比较：mysql将花费小时/天；在优化之前，MEMCP在〜20分钟  👉Memcp是开源的 - 目的是围绕绩效，功能和集成发展一个强大的社区。👉对于公司来说，有可选的商业支持（绩效调整，建筑咨询等）。数据，您知道等待查询的痛苦。  MEMCP提供了一种轻巧，压缩的替代方案，可替代传统的RDBMS和重型大数据堆栈。  我很想听听您的想法，想法，当然 - 贡献者 - 非常欢迎您！文档： memcp.org      向您提问： 您在哪里使用MEMCP  -  BI，BI，BI，IOT，IOT，IOT，IOT，IOT，EOT，IOT，EOT，IOT，IOT，IOT，IOT，IOT，研究，研究，…？？提交由＆＃32; /u/u/yjskura       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n29vs2/memcp_300m_rows_in_2_minutes_open_source/</guid>
      <pubDate>Thu, 28 Aug 2025 11:39:38 GMT</pubDate>
    </item>
    <item>
      <title>第2部分：用于流程的API和DSL（LLM编排，YAML优先）</title>
      <link>https://www.reddit.com/r/programming/comments/1n29gfp/part_2_api_dsl_for_flowrun_llm_orchestration/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我正在为以实时格式录制的流程设计的第二部分   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/tistory_wing_9573     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n29gfp/part_2_api_dsl_for_flowrun_llm_orchestration/</guid>
      <pubDate>Thu, 28 Aug 2025 11:17:34 GMT</pubDate>
    </item>
    <item>
      <title>更简单的Java使用面向对象的编程构建工具</title>
      <link>https://www.reddit.com/r/programming/comments/1n2978j/simpler_java_build_tools_with_objectoriented/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/lihaoyi      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n2978j/simpler_java_build_tools_with_objectoriented/</guid>
      <pubDate>Thu, 28 Aug 2025 11:03:57 GMT</pubDate>
    </item>
    <item>
      <title>Chebyshev Kolmogorov Arnold网络在非线性功能上击败MLP</title>
      <link>https://www.reddit.com/r/programming/comments/1n28wq6/chebyshev_kolmogorov_arnold_networks_beat_mlps_on/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/databaebee     &lt;a href =“ https://www.reddit.com/r/programming/comments/1n28wq6/chebyshev_kolmogorov_arnold_networks_beats_mlps_mlps_mlps_on/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n28wq6/chebyshev_kolmogorov_arnold_networks_beat_mlps_on/</guid>
      <pubDate>Thu, 28 Aug 2025 10:47:37 GMT</pubDate>
    </item>
    <item>
      <title>侧面项目展示</title>
      <link>https://www.reddit.com/r/programming/comments/1n27mnh/side_project_showcase/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我在过去的3周中一直从事一个附带项目。它是一个leetcode式平台，但它不再是算法难题，而是专注于您采用Linux和bash技能的现实世界中的SDE场景。 这些问题是由开发人员在日常工作中所面临的问题启发而来的，这些问题实际上是在日常工作中面临的启发。  很想听听您的想法和反馈！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/disastrous_ad1309        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n27mnh/side_project_showcase/</guid>
      <pubDate>Thu, 28 Aug 2025 09:30:31 GMT</pubDate>
    </item>
    <item>
      <title>Java中的工厂方法设计模式简单类比</title>
      <link>https://www.reddit.com/r/programming/comments/1n24sjf/factory_method_design_pattern_in_java_by_simple/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  想象您是经理，想为每个新项目雇用其他类型的开发人员：A 后端开发人员 api项目，a 前端开发人员 ui项目和一个  移动开发人员的启用 apps Projection&gt;               。您告诉他们“我需要一个后端项目的开发人员”，而不必担心他们如何找到候选人。 该机构的过程（工厂方法）是GetDeveloper（）。您，客户，不要直接调用新的后端Dev（）。您依靠该机构的工厂方法根据您的需求提供正确的开发人员。  专业机构（子类）可能具有不同的招聘池或流程，但它们都为您提供与标准职位描述相匹配的开发人员。这是工厂设计模式的完整细节，使用Java 21 。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;  /u/erdsingh24   [link]  &lt;a href =“ https://www.reddit.com/r/programming/comments/1n24sjf/factory_method_design_pattern_in_in_in_java_java_by_simple/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n24sjf/factory_method_design_pattern_in_java_by_simple/</guid>
      <pubDate>Thu, 28 Aug 2025 06:25:32 GMT</pubDate>
    </item>
    </channel>
</rss>