<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Mon, 18 Aug 2025 01:22:52 GMT</lastBuildDate>
    <item>
      <title>记录代码很无聊...。但是不一定是</title>
      <link>https://www.reddit.com/r/programming/comments/1mt6zy1/documenting_code_is_boring_but_it_doesnt_have_to/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  本文让我思考了我们行业中的基本悖论 - 我们都迫切需要良好的文档，但我们大多数人都讨厌创建它。该文章谈到了通过更好的设计和结构使文档“减少无聊”，但是我对基本问题更加好奇：写文档的痛苦实际上值得解决，还是大多数开发人员只是接受它是必要的邪恶？以我的经验，大约有三个营地：1。受害者 - 撰写文档，因为他们必须恨它2。您是：•通过乏味的乏味，因为您知道这很重要吗？ •使用任何工具/自动化来减轻痛苦？ •只是……除非绝对强迫，否则不这样做？我特别感兴趣的是人们认为这是一个值得通过更好的工具解决的问题，还是只是我们需要接受的开发的固有部分。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/ok-ok-ad7050     splass &lt;56fba&gt;  ＆＃32;   [注释]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mt6zy1/documenting_code_is_boring_but_it_doesnt_have_to/</guid>
      <pubDate>Mon, 18 Aug 2025 00:12:49 GMT</pubDate>
    </item>
    <item>
      <title>掌握比特币 - 非对称加密，钥匙和钱包</title>
      <link>https://www.reddit.com/r/programming/comments/1mt6ytu/mastering_bitcoin_asymmetric_cryptography_keys/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/professionaljoke863     ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mt6ytu/mastering_bitcoin_asymmetric_cryptography_keys/</guid>
      <pubDate>Mon, 18 Aug 2025 00:11:23 GMT</pubDate>
    </item>
    <item>
      <title>自定义LISP REPL</title>
      <link>https://www.reddit.com/r/programming/comments/1mt5886/customizing_lisp_repls/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/aartaka      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mt5886/customizing_lisp_repls/</guid>
      <pubDate>Sun, 17 Aug 2025 22:53:16 GMT</pubDate>
    </item>
    <item>
      <title>固定靴子，TPM和反陈词发动机</title>
      <link>https://www.reddit.com/r/programming/comments/1mt05nb/secure_boot_tpm_and_anticheat_engines/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/tapo      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mt05nb/secure_boot_tpm_and_anticheat_engines/</guid>
      <pubDate>Sun, 17 Aug 2025 19:28:52 GMT</pubDate>
    </item>
    <item>
      <title>你可以构建东西</title>
      <link>https://www.reddit.com/r/programming/comments/1msxjqq/you_can_just_build_things/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/rozenmd      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1msxjqq/you_can_just_build_things/</guid>
      <pubDate>Sun, 17 Aug 2025 17:50:13 GMT</pubDate>
    </item>
    <item>
      <title>AI辅助软件工程生产率的现实</title>
      <link>https://www.reddit.com/r/programming/comments/1msxjl1/the_reality_of_aiassisted_software_engineering/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/valatw     [link link link link]&gt; [link]&gt; [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1msxjl1/the_reality_of_aiassisted_software_engineering/</guid>
      <pubDate>Sun, 17 Aug 2025 17:50:03 GMT</pubDate>
    </item>
    <item>
      <title>Quantoniumos：单一共振傅里叶变换 + 48轮Feistel（开放研究，可再现测试）</title>
      <link>https://www.reddit.com/r/programming/comments/1msx1zx/quantoniumos_unitary_resonance_fourier_transform/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  上下文：经典的DFT管道不是共鸣，而加密中的大多数扩散设计都与信号物理学分离。该仓库探索了一个单一的共振傅立叶变换（RFT）和增强的48轮Feistel引擎，重点是 *可重复的 *测量值（ENV锁，脚本，JSON输出）。  implights     •rft操作员带有unit-modulus specter spectra + spectra + intogulus spectra + intogulus spectra + basks sasks sasks→ψ -  6ψ†x”≤1e-12）。 •密码：feistel（48），带有AES S-box，mixColumns类似的扩散，arx;域分离的HKDF时间表。 •包装器：盐ctr + hkdf split（enc/mac） + hmac tag（encrypt-then-mac）。 •可重复性：脚本将指标保存到JSON； artifacts archived with DOIs. Numbers (current build) • Unitarity: machine precision on tested ensembles (≤ 1e−12). • Diffusion: message-avalanche ≈ 0.438, key-avalanche ≈ 0.527, key sensitivity ≈ 0.495. • Perf: engine-only ≈小型缓冲区上的9.2 Mb/s（批量时更高）。 在本地运行  1）克隆：git clone  CD Quantoniumos   2）Python env + deps;构建pybind11 C ++扩展名（readme中的一个命令）。  3）测试：   -  python test_unitarity.py-py-n 4096  -  trials 10000-out test_unitarity.junitarity.json   - 结果/test_v2_compread.json   paper/dois（用于归档） •ZENODO（版本，v0.2.0）：10.5281/Zenodo.168904445 |概念：10.5281/Zenodo.16890444  我要寻找的内容（讨论提示） •密码库人：批评Feistel F功能（S-box/MDS/ARX）和域-Sep Speched;用σ≤0.02的味精 - 瓦尔兰奇推动味精的想法。 •信号/num-lin-alg folks：对单位性条件（单位模式频谱 +蒙版正交性）和快速率的想法。建议更好的种子/锁紧files/ci。 范围注意：这是**研究代码**（尚无形式的IND-CPA/CCA降低；侧通道姿势取决于Impl）。请作为仪器测试台，而不是生产加密。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/realeaspect2373       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1msx1zx/quantoniumos_unitary_resonance_fourier_transform/</guid>
      <pubDate>Sun, 17 Aug 2025 17:31:41 GMT</pubDate>
    </item>
    <item>
      <title>春季启动 - 用于显示响应代码和自定义错误代码的服务类示例</title>
      <link>https://www.reddit.com/r/programming/comments/1mswuo9/spring_boot_service_class_example_for_displaying/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/lazy-transition8236     [link]    ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mswuo9/spring_boot_service_class_example_for_displaying/</guid>
      <pubDate>Sun, 17 Aug 2025 17:24:00 GMT</pubDate>
    </item>
    <item>
      <title>MP4分析仪 -  CLI和GUI检查MP4文件</title>
      <link>https://www.reddit.com/r/programming/comments/1mswnqs/mp4_analyzer_cli_gui_for_inspecting_mp4_files/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  对于想要学习MP4容器格式的任何人，我最近构建了 mp4analyzer&gt; mp4analyzer ，用于检查MP4文件结构的Python工具。随附CLI和基于QT的GUI。发表于 pypi 易于安装（ pip install install install install install install intertim mp4analyzer ）。    -  cli：mp4 box box hierArchy，parser pars pars pars pars pars pars pars pars pars 逐帧视频分析和时间轴可视化。包括人均详细信息：类型（I/P/B），字节大小，时间戳和演示文稿与解码顺序。需要FFMPEG进行框架解码。从发行。。 也许这对于任何想了解MP4内部的人都可能有用。让我知道你们所有人的想法。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/hoveliasmmary192       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mswnqs/mp4_analyzer_cli_gui_for_inspecting_mp4_files/</guid>
      <pubDate>Sun, 17 Aug 2025 17:16:36 GMT</pubDate>
    </item>
    <item>
      <title>Java并发历史记录中的6个里程碑 -  Java线程的演变：从线程到虚拟线程和结构性并发</title>
      <link>https://www.reddit.com/r/programming/comments/1msvwan/6_milestones_in_java_concurrency_history_the/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/zarinfam      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1msvwan/6_milestones_in_java_concurrency_history_the/</guid>
      <pubDate>Sun, 17 Aug 2025 16:47:12 GMT</pubDate>
    </item>
    <item>
      <title>让我们做游戏吧！ 306：有限战斗环境</title>
      <link>https://www.reddit.com/r/programming/comments/1msvu9k/lets_make_a_game_306_finite_combat_environments/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/apeloverage      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1msvu9k/lets_make_a_game_306_finite_combat_environments/</guid>
      <pubDate>Sun, 17 Aug 2025 16:44:58 GMT</pubDate>
    </item>
    <item>
      <title>AWS BedRock代理教程：购物与航班演示</title>
      <link>https://www.reddit.com/r/programming/comments/1msvhsd/aws_bedrock_agent_tutorial_shopping_flights_demo/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大多数“ AI代理”帖子都是手动的。许多理论，没有太多的代码。 所以我决定使用AWS BedRock代理实际构建一个。具体来说，我整理了一个两种代理系统，其中： 一个代理从apis  中获取数据，然后在存储 之前对其进行验证并验证它，然后我遇到有趣的挑战： ： 如何构建代理人的工作量          时，我写了完整的演练并出版了一个仓库，以便您自己尝试一下 - 好奇别人的想法：今天的生产有意义吗？   &lt;！ -  sc_on- sc_on-&gt;＆＃32;提交由＆＃32; /u/u/skenklok     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1msvhsd/aws_bedrock_agent_tutorial_shopping_flights_demo/</guid>
      <pubDate>Sun, 17 Aug 2025 16:31:24 GMT</pubDate>
    </item>
    <item>
      <title>MS-DOS开发资源</title>
      <link>https://www.reddit.com/r/programming/comments/1msuz6g/msdos_development_resources/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/mariuz      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1msuz6g/msdos_development_resources/</guid>
      <pubDate>Sun, 17 Aug 2025 16:11:32 GMT</pubDate>
    </item>
    <item>
      <title>假技术公司骗局：这是我及时抓住它的方式</title>
      <link>https://www.reddit.com/r/programming/comments/1msuv2b/a_fake_tech_company_scam_heres_how_i_caught_it_in/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/u/gregorojstersek      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1msuv2b/a_fake_tech_company_scam_heres_how_i_caught_it_in/</guid>
      <pubDate>Sun, 17 Aug 2025 16:06:59 GMT</pubDate>
    </item>
    <item>
      <title>Andrea Griffini：C ++元编程很烂</title>
      <link>https://www.reddit.com/r/programming/comments/1msuso1/andrea_griffini_c_metaprogramming_sucks/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/segv       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1msuso1/andrea_griffini_c_metaprogramming_sucks/</guid>
      <pubDate>Sun, 17 Aug 2025 16:04:27 GMT</pubDate>
    </item>
    </channel>
</rss>