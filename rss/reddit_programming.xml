<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sun, 17 Aug 2025 12:32:10 GMT</lastBuildDate>
    <item>
      <title>爱</title>
      <link>https://www.reddit.com/r/programming/comments/1msp3t7/love/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/dunguyen1244   href =“ https://youtube.com/shorts/z4wcd_705ng?si = tyo0cusgbzae6_vu”&gt; [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1msp3t7/love/</guid>
      <pubDate>Sun, 17 Aug 2025 12:03:19 GMT</pubDate>
    </item>
    <item>
      <title>引入关键令牌搜索（PTS）：针对LLM培训中的关键决策点</title>
      <link>https://www.reddit.com/r/programming/comments/1msoetv/introducing_pivotal_token_search_pts_targeting/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/asankhs       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1msoetv/introducing_pivotal_token_search_pts_targeting/</guid>
      <pubDate>Sun, 17 Aug 2025 11:26:15 GMT</pubDate>
    </item>
    <item>
      <title>我制作了自己的程序来编码文本，并想看看它对不知道其工作原理的人的安全性。</title>
      <link>https://www.reddit.com/r/programming/comments/1msnbzr/i_made_my_own_program_to_encode_text_and_want_to/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  此代码使用了我以前从未见过的某些技术，甚至并不是要成为加密技术，我的代码可以采用秘密短语并将其转换为此格式并将其转换回它。我可以制作任何人想要的示例数据，但我会从此开始。  你好，这是我的编码！   转换为太难表2260222222137033333333333351222222222222603137035122222222222222221370333333333351222222222260331370370351 222260221370333512222222137033333333333333333333137025122222222222222222222222226033333333137051   我可以提供任何人需要的样本，只需告诉我诸如&#39;将其转换为您的格式，“示例”示例“&#39;&#39;&#39;&#39;&#39;&#39;&#39; 我的编码对任何ASCII字符都可以使用，甚至不可打印的内容，我的示例都不会使用不可打印的字符。您只需要知道它的编码方式，如果您弄清楚它，无论如何您都可以始终获得原始文本。 也链接了我在github上托管的一些示例。他们的格式是： [ [ string， encode（string）]， [另一个set]  [另一个set] ] ] ] &lt; /p&gt; &lt; /p&gt; &lt; /div&gt; &lt;！ -  sc_on-&gt; sc_on-&gt; 32;提交由＆＃32; /u/u/goldie323-     [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1msnbzr/i_made_my_own_program_to_encode_text_and_want_to/</guid>
      <pubDate>Sun, 17 Aug 2025 10:23:57 GMT</pubDate>
    </item>
    <item>
      <title>使用Python自动化无聊的东西 -  Quora自动化示例</title>
      <link>https://www.reddit.com/r/programming/comments/1msn7zm/automating_the_boring_stuff_with_python_quora/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/lazy-transition8236      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1msn7zm/automating_the_boring_stuff_with_python_quora/</guid>
      <pubDate>Sun, 17 Aug 2025 10:17:08 GMT</pubDate>
    </item>
    <item>
      <title>2选择的力量背后的直觉负载平衡</title>
      <link>https://www.reddit.com/r/programming/comments/1msmq7v/intuition_behind_power_of_2_choices_load_balancing/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/amandeepspdhr       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1msmq7v/intuition_behind_power_of_2_choices_load_balancing/</guid>
      <pubDate>Sun, 17 Aug 2025 09:46:09 GMT</pubDate>
    </item>
    <item>
      <title>API Live Sync＃4：Openai Fetcher</title>
      <link>https://www.reddit.com/r/programming/comments/1msmgqq/api_live_sync_4_openai_fetcher/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在我们以前的文章中，我们用体系结构，数据结构和核心服务层为基础奠定了基础。现在是时候解决实时API同步最具挑战性的部分之一：实际上从开发服务器中获取那些OpenAPI规格。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/evilhighlord      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1msmgqq/api_live_sync_4_openai_fetcher/</guid>
      <pubDate>Sun, 17 Aug 2025 09:29:10 GMT</pubDate>
    </item>
    <item>
      <title>VibeCoders的代码调试器</title>
      <link>https://www.reddit.com/r/programming/comments/1mski9j/a_code_debugger_for_vibecoders/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   ai生成的代码，带有许多错误，数小时的调试，尝试的副词，codeium，Aceium，所有这些辩论者和AI伴侣，但它们只是生成另一个代码，而不是错误的证明。  因此找到了这个，“ bugripper”运行的测试环在每个卢比上都用衬里验证，直到它正确为止。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/skarr_29       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mski9j/a_code_debugger_for_vibecoders/</guid>
      <pubDate>Sun, 17 Aug 2025 07:24:59 GMT</pubDate>
    </item>
    <item>
      <title>及时工程与规格工程。像大型技术的高级工程师一样与AI进行编码</title>
      <link>https://www.reddit.com/r/programming/comments/1msk0u6/prompt_engineering_vs_spec_engineering_coding/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/utantailizeyourcareer       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1msk0u6/prompt_engineering_vs_spec_engineering_coding/</guid>
      <pubDate>Sun, 17 Aug 2025 06:55:38 GMT</pubDate>
    </item>
    <item>
      <title>在Kubernetes之前学习Linux</title>
      <link>https://www.reddit.com/r/programming/comments/1msjtp6/learn_linux_before_kubernetes/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/lazy-transition8236      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1msjtp6/learn_linux_before_kubernetes/</guid>
      <pubDate>Sun, 17 Aug 2025 06:43:42 GMT</pubDate>
    </item>
    <item>
      <title>月鱼：A〜2000 Elo Python国际象棋引擎</title>
      <link>https://www.reddit.com/r/programming/comments/1msic8l/moonfish_a_2000_elo_python_chess_engine/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  月鱼是我几年前在Python开发的国际象棋引擎，以了解引擎在引擎盖下的工作方式。该代码偏爱简单性和可读性而不是性能优化。 引擎实施：   negamax  基于层的平行化：在特定的搜索深度（L1P，L2P算法）分布工作攻击者） 无效修剪 带有锥度评估的香蒜酱评估功能  uci协议 与Lichess Bot Platform   Web Api    使用CereBellum作为开放书籍 href =“ https://pypi.org/project/moonfish/”&gt;通过PYPI 分布，您可以从自定义的Python代码访问引擎readme    bratko-kopec测试套件 自定义测试套件以确保基本功能。不确定它测试了多少ELO，但是如果这些测试通过它，您的自定义引擎搜索实现可能不会超越。如果确实失败了，则您的搜索算法_likely_有问题 您可以控制引擎通过CLI参数的行为，```andfish -help` -help`以检查所有选项&#39;&#39;的性能。  它击败了 stockfish&gt; stockfish lvl 5〜2000 elo href =“ https://lichess.org/forum/general-chess-discussion/what-are-the-------------------------------------- levels--4-4-5-6-7-7-and-8#8”&gt; stockfish lvl 6〜2300 elo  elo 。 elo  上述是在MacBook M1 Pro上运行时，这将根据传递给引擎的硬件和参数而有所不同。 未实施的时间控制 - 深水搜索将按比例更长的    ，以帮助塑造&lt;&lt;&lt;月球的资源和灵感来塑造月球鱼，   href =“ https://github.com/luccabb/moonfish？提交由＆＃32; /u/u/luccabz       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1msic8l/moonfish_a_2000_elo_python_chess_engine/</guid>
      <pubDate>Sun, 17 Aug 2025 05:18:09 GMT</pubDate>
    </item>
    <item>
      <title>用代理编码的瞬时网站的案例</title>
      <link>https://www.reddit.com/r/programming/comments/1msbcjn/a_case_for_fleeting_websites_with_agentic_coding/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   ai并非全部厄运＆amp;忧郁 - 它也可以真正带来欢乐！ 如果没有代理编码，我永远也不会找到时间开发我制作的这个愚蠢的小粉丝页面！实际上，这使某些人感到高兴 - 这是多么伟大的＆lt; 3  肯定最终只有几百个人检查了一下，但这值得我付出的努力。 我很高兴再次将代理编码用于其他临时网站！   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/avataw       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1msbcjn/a_case_for_fleeting_websites_with_agentic_coding/</guid>
      <pubDate>Sat, 16 Aug 2025 23:27:42 GMT</pubDate>
    </item>
    <item>
      <title>Dosember Game Jam  -  MS-DOS编码活动以12月庆祝OS结束</title>
      <link>https://www.reddit.com/r/programming/comments/1ms9wab/dosember_game_jam_msdos_coding_event_ending_with/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/r_retrohacking_mod2        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ms9wab/dosember_game_jam_msdos_coding_event_ending_with/</guid>
      <pubDate>Sat, 16 Aug 2025 22:28:45 GMT</pubDate>
    </item>
    <item>
      <title>超越布尔人</title>
      <link>https://www.reddit.com/r/programming/comments/1ms7jwx/beyond_booleans/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/gaearon      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ms7jwx/beyond_booleans/</guid>
      <pubDate>Sat, 16 Aug 2025 20:58:30 GMT</pubDate>
    </item>
    <item>
      <title>苹果的新处理器跟踪仪器令人难以置信</title>
      <link>https://www.reddit.com/r/programming/comments/1ms6pjn/apples_new_processor_trace_instrument_is/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/victor_wynne      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ms6pjn/apples_new_processor_trace_instrument_is/</guid>
      <pubDate>Sat, 16 Aug 2025 20:26:51 GMT</pubDate>
    </item>
    <item>
      <title>新的搜索算法比二进制（SIBS）快1.4倍</title>
      <link>https://www.reddit.com/r/programming/comments/1ms4pqr/new_search_algorithm_14x_faster_than_binary_sibs/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  使用多臂匪徒开发了随机间隔二进制搜索 - 在25/25个测试用例中，迭代减少了，最多可达1000万个元素。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/usming-falcon6276       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ms4pqr/new_search_algorithm_14x_faster_than_binary_sibs/</guid>
      <pubDate>Sat, 16 Aug 2025 19:13:01 GMT</pubDate>
    </item>
    </channel>
</rss>