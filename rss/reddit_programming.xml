<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Wed, 13 Aug 2025 09:20:22 GMT</lastBuildDate>
    <item>
      <title>通过电子邮件迅速向副副校园工作室注射：抢salesforce</title>
      <link>https://www.reddit.com/r/programming/comments/1moylne/promptinject_copilot_studio_via_email_grab/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/grauenwolf      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1moylne/promptinject_copilot_studio_via_email_grab/</guid>
      <pubDate>Wed, 13 Aug 2025 08:14:21 GMT</pubDate>
    </item>
    <item>
      <title>首席执行官辞职后，GitHub折叠成微软 - 曾经独立编程网站现在是“ Coreai”团队的一部分</title>
      <link>https://www.reddit.com/r/programming/comments/1mox7e5/github_folds_into_microsoft_following_ceo/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/centrist-81545   href =“ https://www.tomshardware.com/software/programming/github-folds-into-microsoft-following-following-ceo-ceo-ceignation-ince-once-once-ince-ince-independent-programprogming-site-now-part-part-part-part-part-part-port-of-coreai-team-team-team”&gt; [link]&gt; [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mox7e5/github_folds_into_microsoft_following_ceo/</guid>
      <pubDate>Wed, 13 Aug 2025 06:44:57 GMT</pubDate>
    </item>
    <item>
      <title>克劳德编码技巧。必须看！</title>
      <link>https://www.reddit.com/r/programming/comments/1mox5gn/claude_coding_tips_must_see/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/dsilver343      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mox5gn/claude_coding_tips_must_see/</guid>
      <pubDate>Wed, 13 Aug 2025 06:41:32 GMT</pubDate>
    </item>
    <item>
      <title>使用GitHub链接或CDN链接来获取JSON文件更好吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1mowpvc/is_it_better_to_use_github_link_or_cdn_link_to/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;    https://cdn.jsdelivr.net/gh/jadenzaleski/bibletranslations@master/akjv/akjv_bible.json    或   https://raw.githubusercontent.com/jadenzaleski/bibletranslations/refs/heads/master/master/akjv/akjv_bible.json   哪个最好获取  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/federal-daikon-412      [link]  &lt;a href =“ https://www.reddit.com/r/programming/comments/1mowpvc/is_it_it_it_it_better_to_to_use_github_github_link_link_or_cdn_link_link_to/”]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mowpvc/is_it_better_to_use_github_link_or_cdn_link_to/</guid>
      <pubDate>Wed, 13 Aug 2025 06:15:18 GMT</pubDate>
    </item>
    <item>
      <title>德国：没有开源的没有数字主权。</title>
      <link>https://www.reddit.com/r/programming/comments/1mov6tp/germany_no_digital_sovereignty_without_open/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/donutloop     [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mov6tp/germany_no_digital_sovereignty_without_open/</guid>
      <pubDate>Wed, 13 Aug 2025 04:46:31 GMT</pubDate>
    </item>
    <item>
      <title>我花了几个星期了解Netflix的推荐系统 - 这是我学到的（矩阵分解分解 +工作代码）</title>
      <link>https://www.reddit.com/r/programming/comments/1moue5r/i_spent_weeks_understanding_netflixs/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  作为一个对Netflix似乎如何看待我的想法的人，我深深地了解了他们的建议算法。我发现的是令人着迷的 - 这不是魔术，而是矩阵分解。 我写了这种全面的崩溃，因为大多数解释要么假设您在数学上拥有博士学位，要么过分简化，以至于没有用。我试图达到最佳位置 - 技术足够有用，很简单，可以真正理解。  github repo： https://github.com/codeverseproo/demo/demo/demo-codes/tree/tree/master/master/master/netflix/netflix/netflix 改变一切的Netflix奖 矩阵分解如何实际工作（带有视觉示例） 您可以运行python实施 生产工程挑战     会喜欢这个社区的反馈 - 我得到了技术详细信息吗？您会添加或更改？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/uliansessfun7051       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1moue5r/i_spent_weeks_understanding_netflixs/</guid>
      <pubDate>Wed, 13 Aug 2025 04:02:52 GMT</pubDate>
    </item>
    <item>
      <title>API实时同步＃2：实时数据结构和类型</title>
      <link>https://www.reddit.com/r/programming/comments/1mos7l3/api_live_sync_2_live_source_data_structures_and/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://creative-labs.hashnode.dev/api-live-sync-2-live-source-source-data-sonstructures-and-types”&gt; [link]   ＆＃32;  &lt;a href =“ https://www.reddit.com/r/programming/comments/1mos7l3/api_live_sync_2_live_source_source_data_sonstructures_and//]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mos7l3/api_live_sync_2_live_source_data_structures_and/</guid>
      <pubDate>Wed, 13 Aug 2025 02:15:33 GMT</pubDate>
    </item>
    <item>
      <title>请停止询问有关Python的Singleton</title>
      <link>https://www.reddit.com/r/programming/comments/1morutq/please_stop_asking_about_singleton_in_python/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/stackoverflooooooow     [link]      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1morutq/please_stop_asking_about_singleton_in_python/</guid>
      <pubDate>Wed, 13 Aug 2025 01:58:31 GMT</pubDate>
    </item>
    <item>
      <title>将音频添加到您的Ebitengine游戏（教程）</title>
      <link>https://www.reddit.com/r/programming/comments/1moqqpw/adding_audio_to_your_ebitengine_game_tutorial/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/tslocum      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1moqqpw/adding_audio_to_your_ebitengine_game_tutorial/</guid>
      <pubDate>Wed, 13 Aug 2025 01:06:52 GMT</pubDate>
    </item>
    <item>
      <title>什么是可引导容器？ Podman，容器化和边缘用例| IBM技术</title>
      <link>https://www.reddit.com/r/programming/comments/1monm1i/what_are_bootable_containers_podman/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/ibev       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1monm1i/what_are_bootable_containers_podman/</guid>
      <pubDate>Tue, 12 Aug 2025 22:49:41 GMT</pubDate>
    </item>
    <item>
      <title>修复CLI错误处理：深入研究Keyshade的Websocket通信错误</title>
      <link>https://www.reddit.com/r/programming/comments/1mojn9k/fixing_cli_error_handling_a_deep_dive_into/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://www.linkedin.com/pulse/fixing-cli-error andling-deep-dive-keyshades-keyshades-bug-johnny-santamaria-au5yc”&gt; [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mojn9k/fixing_cli_error_handling_a_deep_dive_into/</guid>
      <pubDate>Tue, 12 Aug 2025 20:15:14 GMT</pubDate>
    </item>
    <item>
      <title>内存映射的寄存器工具</title>
      <link>https://www.reddit.com/r/programming/comments/1moiodd/memory_mapped_register_tool_in_rust/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/andrewofc      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1moiodd/memory_mapped_register_tool_in_rust/</guid>
      <pubDate>Tue, 12 Aug 2025 19:39:11 GMT</pubDate>
    </item>
    <item>
      <title>Tensorflow.js打字Quatting Attack：针对AI/ML开发人员的恶意软件包</title>
      <link>https://www.reddit.com/r/programming/comments/1moie0j/tensorflowjs_typosquatting_attack_malicious/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/n1ghtcod3r      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1moie0j/tensorflowjs_typosquatting_attack_malicious/</guid>
      <pubDate>Tue, 12 Aug 2025 19:28:27 GMT</pubDate>
    </item>
    <item>
      <title>编码代理摊牌：VSCODE FORKS VS. IDE扩展与CLI代理|锻造代码</title>
      <link>https://www.reddit.com/r/programming/comments/1moh1no/coding_agents_showdown_vscode_forks_vs_ide/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   AI编码空间已分为三种明确的方法。我一直在数月内和速度，准确性和上下文问题上使用它们，将AI编码助手交换为几个月。我对它们的测试越多，我就越意识到空间已分为三种不同的方法。   vscode forks （例如，Cursor，windsurf）         建立AI-First编辑  extensions (e.g, Copilot, Cline)  Keep using your current IDE Minimal setup Limited by plugin frameworks, which can cap context and automation  CLI agents (e.g, ForgeCode, Claude Code, Gemini CLI)  Run as standalone tools in your terminal Work with any editor and chain into existing CLI workflows Steeper learning curve for non-terminal users  Disclaimer: I’m building ForgeCode and work extensively with CLI agents, but I’ve done my best to keep this comparison fair.  ＆＃32;提交由＆＃32; /u/u/u/u/west-chocaly2977       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1moh1no/coding_agents_showdown_vscode_forks_vs_ide/</guid>
      <pubDate>Tue, 12 Aug 2025 18:39:24 GMT</pubDate>
    </item>
    <item>
      <title>每个开发人员都应该知道的MCP漏洞</title>
      <link>https://www.reddit.com/r/programming/comments/1moek8r/mcp_vulnerabilities_every_developer_should_know/</link>
      <description><![CDATA[]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1moek8r/mcp_vulnerabilities_every_developer_should_know/</guid>
      <pubDate>Tue, 12 Aug 2025 17:09:17 GMT</pubDate>
    </item>
    </channel>
</rss>