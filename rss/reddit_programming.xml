<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Mon, 29 Sep 2025 03:36:21 GMT</lastBuildDate>
    <item>
      <title>测试驱动的开发：坏例子</title>
      <link>https://www.reddit.com/r/programming/comments/1nt7jso/test_driven_development_bad_example/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  看哪，我最长的文章，其中我回顾了肯特·贝克（Kent Beck）的2003年书，《测试驱动的开发：以身作用。这很糟糕，但已经很长时间了。 享受！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/the_axolot      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nt7jso/test_driven_development_bad_example/</guid>
      <pubDate>Mon, 29 Sep 2025 03:17:38 GMT</pubDate>
    </item>
    <item>
      <title>用Sonic Pi / YT@codewithcypert编程Cyber​​punk Soundscape</title>
      <link>https://www.reddit.com/r/programming/comments/1nt73tn/programming_a_cyberpunk_soundscape_with_sonic_pi/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/captainsketchy       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nt73tn/programming_a_cyberpunk_soundscape_with_sonic_pi/</guid>
      <pubDate>Mon, 29 Sep 2025 02:54:27 GMT</pubDate>
    </item>
    <item>
      <title>我使用 @Copilot构建了终端图形引擎 - 通过sixel在Windows终端渲染的SVG</title>
      <link>https://www.reddit.com/r/programming/comments/1nt1q09/i_built_a_terminal_graphics_engine_using/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我没有编写一行代码。 Over the course of a few hours, I collaborated with u/copilot to build PwrSvg, a PowerShell module that renders SVG graphics directly in Windows Terminal using Sixel. It supports:   svg-to-png通过skiAsharp  终端显示的六层编码 完整的CI/CD管道，单位测试和公共出版物 -   用零文件I/o   以下是一个样本：   ＆quod&gt;＆quot&gt;＆lt; svg width =&#39;100&#39;height =&#39;100&#39;＆gt; ＆lt; circle cx = &#39;50&#39;cy = &#39;50&#39;r = &#39;40&#39;填充=&#39;＃ff6b6b&#39;stroke =&#39;＃333&#39;stroke-witth =&#39;3&#39;/＆gt; ＆lt;/svg＆gt;＆quot; | out-consolesvg   此项目是自主发展的概念证明 - 每个公关，每个提交，每个集成都是由。 repo： github.com/calvo-software/pwrsvg    提交由＆＃32; /u/u/u/oscarcalvo74      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nt1q09/i_built_a_terminal_graphics_engine_using/</guid>
      <pubDate>Sun, 28 Sep 2025 22:32:53 GMT</pubDate>
    </item>
    <item>
      <title>Salesforce的Tableau是否应该获得“可视化层次数据”的专利？</title>
      <link>https://www.reddit.com/r/programming/comments/1nt1574/should_salesforces_tableau_be_granted_a_patent_on/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/newworkkarma       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nt1574/should_salesforces_tableau_be_granted_a_patent_on/</guid>
      <pubDate>Sun, 28 Sep 2025 22:07:43 GMT</pubDate>
    </item>
    <item>
      <title>[JS/TS]对于那些以前制作了反应性库的人，如何处理阵列排序的和解。</title>
      <link>https://www.reddit.com/r/programming/comments/1nszt1m/jsts_for_those_who_made_a_reactive_library_before/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我正在做一个小的反应性库（无vdom，直接操纵，完全是“机械”，“因为它将用于以后用来用于发电机，但仍然可以用手，但仍然足够符合人体工程学，但仍足够手工写入娱乐和学习目的，以获取娱乐性和学习目的，以便以后的反应性工作，现在是一个反应器和生成器的工程。我到了一个我认为它运行良好的点，并且在预期时具有层次结构和清理，我为控制（何时又是何时何时）进行了2个小助手，但是，到目前为止，每个人都不关心订购，我不确定它是否能够更改订单tbh，至少现在不正确。 DOM且不太通用，我以一种可以重复使用节点并使用DOM重新排序的方式进行的每个工作。  obs：如果您尝试将另一个项目添加到具有相同键的数组中，则有一个错误，它不会添加相同的键，因为它已经认为该组件已经存在。提交由＆＃32; /u/u/gustavo_fenilli     [link]   ＆＃32;  &lt;a href =“ https://www.reddit.com/r/programming/comments/1nszt1m/jsts_for_those_those_who_made_a_rea_reactive_library_before/”]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nszt1m/jsts_for_those_who_made_a_reactive_library_before/</guid>
      <pubDate>Sun, 28 Sep 2025 21:11:37 GMT</pubDate>
    </item>
    <item>
      <title>保持代码和文档同步的最简单方法</title>
      <link>https://www.reddit.com/r/programming/comments/1nsysen/the_easiest_way_to_keep_code_and_docs_synced/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  关于编码和文档的一个问题是使您的文档保持最新状态，没有开发人员喜欢文档。甚至更糟糕的是，知道成千上万的文档中的哪些部分以及哪些部分更新。 我们即将推出Drift AI。 With every push to your main branch, we retrieve relevant documents, highlight and suggest edits to outdated parts, and tag the right engineer to approve the edits. No new platforms, we directly integrate with Confluence and everything is done in Confluence. You can grab your early access spot if you find this useful for you or your team.   提交由＆＃32; /u/u/u/khalidd877      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nsysen/the_easiest_way_to_keep_code_and_docs_synced/</guid>
      <pubDate>Sun, 28 Sep 2025 20:30:15 GMT</pubDate>
    </item>
    <item>
      <title>刚刚从一个巨大的NX Monorepo中添加了120多个未使用的NPM DEP</title>
      <link>https://www.reddit.com/r/programming/comments/1nsymn6/just_nuked_120_unused_npm_deps_from_a_huge_nx/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  刚刚使用knip从一个巨大的NX monorepo中核定了120多个未使用的npm dep。剃了整整一分钟的纱线安装。 写下了整个过程，包括如何避免误报。如果您有NPM膨胀，这是给您的  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/beautch_spot5404     [link]   ＆＃32;  &lt;a href =“ https://www.reddit.com/r/programming/comments/1nsymn6/just_nuked_120_unused_npm_depm_deps_from_a_a_huge_nx/”]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nsymn6/just_nuked_120_unused_npm_deps_from_a_huge_nx/</guid>
      <pubDate>Sun, 28 Sep 2025 20:23:52 GMT</pubDate>
    </item>
    <item>
      <title>如何在赋予他人权力的同时保持相关性</title>
      <link>https://www.reddit.com/r/programming/comments/1nsxker/how_to_stay_relevant_as_an_engineering_leader/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/u/gregorojstersek      ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nsxker/how_to_stay_relevant_as_an_engineering_leader/</guid>
      <pubDate>Sun, 28 Sep 2025 19:41:32 GMT</pubDate>
    </item>
    <item>
      <title>公司应该停止痴迷于AI工具，而是这样做</title>
      <link>https://www.reddit.com/r/programming/comments/1nsxk7q/companies_should_stop_obsessing_over_ai_tools_and/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/gregorojstersek      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nsxk7q/companies_should_stop_obsessing_over_ai_tools_and/</guid>
      <pubDate>Sun, 28 Sep 2025 19:41:19 GMT</pubDate>
    </item>
    <item>
      <title>我作为程序员的早年：1997-2002</title>
      <link>https://www.reddit.com/r/programming/comments/1nsx4o8/my_early_years_as_a_programmer_19972002/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我是即将是20年的软件行业退伍军人。这是一系列博客文章的一部分，我在90年代后期从少年开始分享我的Tech旅程。提交由＆＃32; /u/u/jkndrkn      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nsx4o8/my_early_years_as_a_programmer_19972002/</guid>
      <pubDate>Sun, 28 Sep 2025 19:24:10 GMT</pubDate>
    </item>
    <item>
      <title>[OC]从分析flink应用程序中学到的教训</title>
      <link>https://www.reddit.com/r/programming/comments/1nsws5x/oc_lessons_learned_from_profiling_flink_apps/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/prat0318    &gt; ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nsws5x/oc_lessons_learned_from_profiling_flink_apps/</guid>
      <pubDate>Sun, 28 Sep 2025 19:10:22 GMT</pubDate>
    </item>
    <item>
      <title>我将多年的编程及其变成了讽刺的“词典”  -  AMA（独立发表，9月30日，在这里，直到10月5日）</title>
      <link>https://www.reddit.com/r/programming/comments/1nsuqdw/i_turned_years_of_programming_it_absurdities_into/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿 r/programming ， 在技术领域十年后把他们变成了长本书的讽刺。 Think of it as a dictionary of survival for anyone who’s ever sat through a sprint planning that felt like group therapy, or watched a manager rename “bugs” into “undocumented features.” The book officially launches September 30th, and I went the full self-publishing route (handled everything myself except for layout/graphics, which I outsourced to a DTP专家）。 我将整个星期在这里回答，直到10月5日（如果需要时更长）。很高兴聊天：  编程文化荒谬的荒谬性，将其纳入书中 将其翻译成讽刺的感觉 独立出版物作为开发者side Quest  ，或者只是您最喜欢的“ wtf mist”，“ wtf armim and emploype”  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/uetibal-field-501      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nsuqdw/i_turned_years_of_programming_it_absurdities_into/</guid>
      <pubDate>Sun, 28 Sep 2025 17:50:24 GMT</pubDate>
    </item>
    <item>
      <title>为什么Python是最佳的初学者编程语言？</title>
      <link>https://www.reddit.com/r/programming/comments/1nsun8r/why_python_is_the_best_programming_language_to/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我想写有关Python，ML和DL的博客文章，这是我的第一篇博客文章。你们认为我应该长期做吗？也感谢一些支持！！他  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/usection-ad2549     [link]    32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nsun8r/why_python_is_the_best_programming_language_to/</guid>
      <pubDate>Sun, 28 Sep 2025 17:46:52 GMT</pubDate>
    </item>
    <item>
      <title>蜘蛛侠：电影游戏解剖项目 - 简介</title>
      <link>https://www.reddit.com/r/programming/comments/1nsu9jn/spiderman_the_movie_game_dissection_project/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/krystalgamer   [link]  &lt;a href =“ https://www.reddit.com/r/programming/comments/1nsu9jn/spiderman_the_movie_game_game_game_dissection_project/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nsu9jn/spiderman_the_movie_game_dissection_project/</guid>
      <pubDate>Sun, 28 Sep 2025 17:31:56 GMT</pubDate>
    </item>
    <item>
      <title>我应该如何进行编程？</title>
      <link>https://www.reddit.com/r/programming/comments/1nst9ah/how_should_i_get_into_programming/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我在过去的〜4  -  5年中一直在用刮擦编码，但是我真的很想尝试搭扣，像Unity或Ue之类的完整游戏中制作一个完整的游戏。我应该怎么做？我去年为Python上了一个编码课，所以我有点了解基础知识，但我真的很想尝试一下。有任何提示？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/no/no-subject-619       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nst9ah/how_should_i_get_into_programming/</guid>
      <pubDate>Sun, 28 Sep 2025 16:51:53 GMT</pubDate>
    </item>
    </channel>
</rss>