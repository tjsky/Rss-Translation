<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Tue, 22 Jul 2025 15:19:57 GMT</lastBuildDate>
    <item>
      <title>在克劳德代码上花费900美元。现在我花了90美元。这就是方法。</title>
      <link>https://www.reddit.com/r/programming/comments/1m6gs3g/was_spending_900month_on_claude_code_now_i_spend/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;     tl; dr ：构建一个免费的开放式代理代理，使Claude代码使用任何AI模型。保持最佳的编码接口，将您的成本削减90％。 问题 像你们中的许多人一样，我爱上了克劳德代码。它是最佳的编码代理 - 工具调用，上下文理解，一切都起作用。 ，但最低$ 200？在紧缩时间达到每日限制？看着我的账单每天达到30美元？  解决方案：ccproxy   i构建 ccproxy“&gt; ccproxy”   - 一个轻量级的代理，是Claude Code之间的轻量级专业版。它实时翻译API，因此Claude Code认为它正在与人类交谈，但实际上是在使用您想要的任何型号。 它的工作方式 您终端中的一行： bash Export anthropic_base_base_base_base_url = http = http：// localhost：3456 现在 gemini 2.5 Flash ：带有1M令牌上下文的自由层 -   Kimi K2 ：与Claude Sonnet相同的性能 - 成本为1/100，成本 -   qwen3 235b ：完全免费，击败了gpt -4在benchmarks benchmarks -benchmarks -benchmarks -prach marks -prach marks -prach marks -prach marks -prown well&gt; strort ：通过OpenRouter  我现在的日常工作流程       task  型号             调试  kimi k2   $ 0.15/m tokens        architection   claude  claude  claude     $ 15/m tokens        Qwen3 FREE   Code reviews DeepSeek V3 ~$0.20/M tokens   Same Claude Code interface.  它是免费的和开源的 ，因为工具不应支付付费。每个开发人员都应获得负担得起的AI帮助。    github ： href =“ https://ccproxy.orchestre.dev”&gt; https://ccproxy.orchestre.dev      快速启动：https://ccproxy.orchestre.dev/guide/quick-start  Questions I&#39;ll Probably Get Q: Does this break Claude Code? A: Nope. Claude代码的工作原理完全相同。 ccproxy只是翻译了API调用。   q：工具调用呢？  a：完全支持兼容模型（OpenAi，gemini等）   q：实际上是90％更便宜的？我将80％的任务路由到免费/廉价型号，请保留需要它的20％的Claude。   Q：为什么不直接直接使用其他型号？  a：因为克劳德代码的界面是无与伦比的。这为您提供了两全其美的最佳状态。 您将切换到免费的车型哪些昂贵的AI任务？很想听听您的用例！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/mose-exercise788       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m6gs3g/was_spending_900month_on_claude_code_now_i_spend/</guid>
      <pubDate>Tue, 22 Jul 2025 15:14:43 GMT</pubDate>
    </item>
    <item>
      <title>反向代理深度潜水：为什么HTTP在边缘解析比看起来更难</title>
      <link>https://www.reddit.com/r/programming/comments/1m6gqnq/reverse_proxy_deep_dive_why_http_parsing_at_the/</link>
      <description><![CDATA[I previously shared a version of this post on Reddit linking to Medium, but since then I’ve migrated the content to my personal blog and updated it with more detailed insights. This is Part 2 of my deep dive series on reverse proxies, focusing on the complexities of HTTP parsing at the edge.该文章解释了为什么处理HTTP请求和响应的原因不像看起来那样简单，尤其是在处理安全性，性能和兼容性时。 我涵盖了诸如畸形请求，标题操纵，用户代理Quirks，Geo-IP操作，GEO-IP操作，以及在流量中流量流量   系统或代理设计，我认为您会发现这很有用。 在此处查看：https://startwithawhy.com/reverseproxy/2025/07/20/ReverseProxy-Deep-Dive-Part2.html I would love to聆听任何反馈，问题或您自己的经历！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/miggyishu     [link]   ＆＃32;  &lt;a href =“ https://www.reddit.com/r/programming/comments/1m6gqnq/reverse_proxy_deep_deep_deep_dive_http_http_parsing_at_tp_parsing_at_at_at_th_the/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m6gqnq/reverse_proxy_deep_dive_why_http_parsing_at_the/</guid>
      <pubDate>Tue, 22 Jul 2025 15:13:10 GMT</pubDate>
    </item>
    <item>
      <title>Golang项目结构模板</title>
      <link>https://www.reddit.com/r/programming/comments/1m6ffjn/golang_project_structure_template/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我总是发现自己在启动GO项目时创建了相同的文件夹 -   Handlers ， services ， models 等等。。我遵循的整体布局。没有代码，只是结构作为参考。 没什么特别的，但它可以节省我的时间。也许对他人有用：  https://github.com/gnomedevreact/mrn      href =“ https://github.com/gnomedevreact/mrn-design”&gt; https://github.com/gnomedevreact/mrn-design    很高兴听到想法或建议。提交由＆＃32; /u/u/u/imiminary_drawer7827       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m6ffjn/golang_project_structure_template/</guid>
      <pubDate>Tue, 22 Jul 2025 14:22:51 GMT</pubDate>
    </item>
    <item>
      <title>用widget_driver在扑来中清洁可测试的小部件</title>
      <link>https://www.reddit.com/r/programming/comments/1m6eulx/clean_and_testable_widgets_with_widget_driver_in/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/consenent-jicama932      [link]       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m6eulx/clean_and_testable_widgets_with_widget_driver_in/</guid>
      <pubDate>Tue, 22 Jul 2025 13:59:46 GMT</pubDate>
    </item>
    <item>
      <title>嵌入：微型设备的安全代码沙箱</title>
      <link>https://www.reddit.com/r/programming/comments/1m6ejh3/embive_a_secure_code_sandbox_for_tiny_devices/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/congolomera      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m6ejh3/embive_a_secure_code_sandbox_for_tiny_devices/</guid>
      <pubDate>Tue, 22 Jul 2025 13:46:52 GMT</pubDate>
    </item>
    <item>
      <title>通过PG_STAT_STATEMENTS快速查找慢速邮政查询</title>
      <link>https://www.reddit.com/r/programming/comments/1m6e0ga/finding_slow_postgres_queries_fast_with_pg_stat/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;    https://medium.com/@rohansodha10/pg-stat-statement-auto-explain-finding-slow-ceries-fast-fast-fast-123c6db5552df?sk=e601803389f570995cef570995cef5cef5fc5fc5fc5fc07e8d30dd0ddddddddddd      &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/questary_depth_2491       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m6e0ga/finding_slow_postgres_queries_fast_with_pg_stat/</guid>
      <pubDate>Tue, 22 Jul 2025 13:24:29 GMT</pubDate>
    </item>
    <item>
      <title>拉的静态分析。迈向规律性的又一步</title>
      <link>https://www.reddit.com/r/programming/comments/1m6d05e/static_analysis_for_pull_requests_another_step/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/xaneris47      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m6d05e/static_analysis_for_pull_requests_another_step/</guid>
      <pubDate>Tue, 22 Jul 2025 12:40:02 GMT</pubDate>
    </item>
    <item>
      <title>您的入职过程会吸引Soham吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1m6bash/would_your_onboarding_process_catch_a_soham/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/stmoreau   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m6bash/would_your_onboarding_process_catch_a_soham/</guid>
      <pubDate>Tue, 22 Jul 2025 11:14:31 GMT</pubDate>
    </item>
    <item>
      <title>[博客]学习编译器构造</title>
      <link>https://www.reddit.com/r/programming/comments/1m6aqek/blog_learning_compiler_construction/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   all！其中一个是编译器的构造，真正窥视了我的兴趣。真正有趣的学习是真正有趣的，这是自从我开始学习以来我学习的一些最有趣的东西。  从中，我想开始在课程继续写博客上关于我的经验和学习。感觉就像我会在这里与其他人分享，而不是像以前那样感兴趣。 欢迎任何反馈或响应！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/danwastheman      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m6aqek/blog_learning_compiler_construction/</guid>
      <pubDate>Tue, 22 Jul 2025 10:42:50 GMT</pubDate>
    </item>
    <item>
      <title>我们维护harfbuzz，镀铬，firefox，android等的文本塑造引擎 - 问我们任何东西（或告诉我们是什么困惑您）</title>
      <link>https://www.reddit.com/r/programming/comments/1m6a7xo/we_maintain_harfbuzz_the_text_shaping_engine_used/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   hi  r/programming ， 我们是 harfbuzz  ，浏览器，操作系统和应用程序使用的开源文本塑造引擎渲染所有文本，包括支持阿拉伯语，devanagari，devanagari，khmer，cjk等脚本。  harfbuzz以Harfbuzz而闻名，以 harfbuzz闻名。但这有时也被视为很难理解或与一起工作，尤其是如果您曾经：  试图将其集成到您自己的渲染堆栈 逐步通过debugger    在源头上打开的来源，并在这里进行了“等待，则在这里进行了什么？障碍 将其与其他塑料引擎进行了比较 试图将其移植到另一种编程语言 想知道为什么您需要这样的“巨大”依赖性    我们正在处理 开发者的faq和Design Notes  note  nose 为什么;在我们更加异常的设计决定的背后（是的，宏是有意的）。  ，我们问：    🧠🧠您最大的WTF时刻阅读或使用Harfbuzz是什么？更好吗？ 您是否遇到了表现或集成惊喜？ 您只有通过阅读来源而发现的功能？ 您希望该文件告诉您什么？ 您想知道该项目吗？文档。 事先感谢您的好奇心，故事或挫败感 - 我们正在听！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/behdadgram      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m6a7xo/we_maintain_harfbuzz_the_text_shaping_engine_used/</guid>
      <pubDate>Tue, 22 Jul 2025 10:12:16 GMT</pubDate>
    </item>
    <item>
      <title>基本大满贯</title>
      <link>https://www.reddit.com/r/programming/comments/1m6a4ux/basic_slam_with_lidar/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  由于汽车的限制而无法进行全部自动驾驶，但我认为我仍然会分享。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/mbird1258      [comment]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m6a4ux/basic_slam_with_lidar/</guid>
      <pubDate>Tue, 22 Jul 2025 10:06:59 GMT</pubDate>
    </item>
    <item>
      <title>是什么使SQL特别</title>
      <link>https://www.reddit.com/r/programming/comments/1m69ww6/what_makes_sql_special/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/zetter      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m69ww6/what_makes_sql_special/</guid>
      <pubDate>Tue, 22 Jul 2025 09:53:40 GMT</pubDate>
    </item>
    <item>
      <title>完整的Flexbox CSS指南</title>
      <link>https://www.reddit.com/r/programming/comments/1m68fi9/the_complete_flexbox_css_guide/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/professionwin216      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m68fi9/the_complete_flexbox_css_guide/</guid>
      <pubDate>Tue, 22 Jul 2025 08:16:57 GMT</pubDate>
    </item>
    <item>
      <title>网格9：开源9个字符坐标压缩，具有3米精度</title>
      <link>https://www.reddit.com/r/programming/comments/1m67y28/grid9_opensource_9character_coordinate/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好！我很高兴分享Grid9，这是我一直在处理的一个开源坐标压缩系统。  **什么是grid9？**   grid9仅将GPS坐标压成9个字符，同时保持3米精度在全球范围内保持均匀的3米精度 - 与What3 Words相同，但与53％的3％shorter。 ** 9个字符代码**：`q7kh2bbyf`而不是`40.7128，-74.0060`     -  ** 3米精度**：足够准确地适合自动驾驶汽车和Precision农业    -  **人类 -  **人类 -  **人类 -  **人类 -  ** p p p p&gt; p p p&gt; p p&gt; **高性能**：6多个操作/第二次   -  **否依赖关系**：纯坐标数学，无需外部服务   -  **用于非商业用途**：MIT风格的个人项目的MIT风格许可    **我为什么构建了我为此构建的：传统的LAT/LON对于带宽受限的系统来说太冗长了，而What3words虽然出色，但使用了19个以上的字符。 Grid9仅以9个字符的形式达到相同的精度。  **技术方法：**   grid9使用统一的坐标量化 - 在度空间中的直接纬度和经度量化。这种简单的方法实现了一致的全球精度，而无需复杂的预测。结果完全符合45位（9×5位基本32个字符）。  **示例：**  `  东京：35.6762，139.6503→paymz39t7   href =“ https://github.com/pedrof69/grid9”&gt; https://github.com/pedrof69/grid9      demo： https://pedrof69.github.io/grid9/       nuget：`dotnet添加包grid9` href =“ mailto：grid9@ukdataservices.co.uk”&gt; grid9@ukdataservices.co.uk ]（mailto： grid9@ukdataservices.co.uk  grid9@ukdataservices.co.uk ）该代码已经准备好进行全面测试，我正在积极维护它。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/od-ods-bambition-1135       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m67y28/grid9_opensource_9character_coordinate/</guid>
      <pubDate>Tue, 22 Jul 2025 07:45:29 GMT</pubDate>
    </item>
    <item>
      <title>测试新的编码语言</title>
      <link>https://www.reddit.com/r/programming/comments/1m67ple/testing_a_new_coding_language/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我的朋友制作了一种新的编码语言，但我很忙RN，我无法测试它。有人想测试这种新语言吗？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/beecurrent263      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m67ple/testing_a_new_coding_language/</guid>
      <pubDate>Tue, 22 Jul 2025 07:30:03 GMT</pubDate>
    </item>
    </channel>
</rss>