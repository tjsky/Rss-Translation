<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Wed, 06 Aug 2025 21:16:12 GMT</lastBuildDate>
    <item>
      <title>开发人员，而不是运营商：回应托马斯·多尔克（Thomas Dohmke）的“拥抱AI或出去”立场</title>
      <link>https://www.reddit.com/r/programming/comments/1mjeoym/developers_not_operators_in_response_to_thomas/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/victor_wynne      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mjeoym/developers_not_operators_in_response_to_thomas/</guid>
      <pubDate>Wed, 06 Aug 2025 19:48:58 GMT</pubDate>
    </item>
    <item>
      <title>引入Wassette：针对AI代理的基于WebAssembly的工具</title>
      <link>https://www.reddit.com/r/programming/comments/1mjdnpy/introducing_wassette_webassemblybased_tools_for/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/yoshuawuyts1      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mjdnpy/introducing_wassette_webassemblybased_tools_for/</guid>
      <pubDate>Wed, 06 Aug 2025 19:09:15 GMT</pubDate>
    </item>
    <item>
      <title>Java到底是什么</title>
      <link>https://www.reddit.com/r/programming/comments/1mjdju7/what_the_hell_is_getopaque_in_java/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://mlangc.github.io/java/concurrency/2025/08/03/what-the-hell-is-is-get-opaque.html”&gt; [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mjdju7/what_the_hell_is_getopaque_in_java/</guid>
      <pubDate>Wed, 06 Aug 2025 19:05:12 GMT</pubDate>
    </item>
    <item>
      <title>我制作了一个在Photoshop中运行的视频游戏</title>
      <link>https://www.reddit.com/r/programming/comments/1mjanmx/i_made_a_video_game_that_runs_in_photoshop/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/vortexile       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mjanmx/i_made_a_video_game_that_runs_in_photoshop/</guid>
      <pubDate>Wed, 06 Aug 2025 17:16:45 GMT</pubDate>
    </item>
    <item>
      <title>Git Worktree的简短指南</title>
      <link>https://www.reddit.com/r/programming/comments/1mja3ty/a_short_guide_on_git_worktree/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  刚刚写了一份有关 git git worktree 的简短指南 - 一种与多个分支一起工作的整洁方法      完美。 完美使用它以及如何开始。超级实用。 在这里查看： https://medium.com/stackademic/one-git-repo-many-working-copies-meet-git-worktree-0bb650393248?sk=6d2e4e036443f12bc77d82dfb8084e04 会喜欢您的反馈或使用工作室时拿起的任何提示！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/sshetty03       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mja3ty/a_short_guide_on_git_worktree/</guid>
      <pubDate>Wed, 06 Aug 2025 16:56:35 GMT</pubDate>
    </item>
    <item>
      <title>第86天：灵活日志查询的GraphQl- Netflix的日志分析方法</title>
      <link>https://www.reddit.com/r/programming/comments/1mj8ecb/day_86_graphql_for_flexible_log_queries_the/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿，大家！ 我一直在处理这个很棒的254天系统设计系列，刚刚完成了第86天，在那里我构建了一个完整的GraphQl API用于日志处理。老实说，我没想到会在一次会议上学到很多东西。  我构建的内容：    GraphQl架构带有灵活的查询（不再有多个rest呼叫！查询  redis缓存层的性能 完整的Docker部署设置    时刻：来自REST API，我一直想知道为什么Netflix和Uber等公司将GraphQl进行分析仪表板。现在我明白了 - 能够编写一个这样的查询：  查询{logs（filters：{service：＆qay;改变游戏的性能。  最酷的部分：实时订阅。看着原木流直播到React仪表板上感觉就像魔术。这是实时消息传递的模式Slack使用。  最具挑战性的部分：正确地使数据编载器模式正确。易于意外地在GraphQL中创建N+1查询问题，但是一旦您了解批处理，它实际上比休息更有效。   教程逐步介绍从基本模式设计到生产部署的所有内容。包括用于Python后端（FastApi + Strawberry GraphQl）和FarmandEnd的工作代码。 对于任何对GraphQl感到好奇的人，但被复杂性吓倒了，这实际上比我预期的更平易近人。架构 - 首先方法使一切都非常清晰。 链接到完整教程：   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/uver_limit_247      ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mj8ecb/day_86_graphql_for_flexible_log_queries_the/</guid>
      <pubDate>Wed, 06 Aug 2025 15:52:34 GMT</pubDate>
    </item>
    <item>
      <title>🟩第39天：缩放节点。</title>
      <link>https://www.reddit.com/r/programming/comments/1mj84ju/day_39_scaling_nodejs_clustering_with_pm2_made/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/myssiriouseye8494     [link]        [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mj84ju/day_39_scaling_nodejs_clustering_with_pm2_made/</guid>
      <pubDate>Wed, 06 Aug 2025 15:42:32 GMT</pubDate>
    </item>
    <item>
      <title>“代理AI编码”中的“免费”：棘手的配额，供应商锁定，卡墙和其他警告</title>
      <link>https://www.reddit.com/r/programming/comments/1mj7rlh/the_free_in_agentic_ai_coding_tricky_quotas/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/imasl       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mj7rlh/the_free_in_agentic_ai_coding_tricky_quotas/</guid>
      <pubDate>Wed, 06 Aug 2025 15:29:05 GMT</pubDate>
    </item>
    <item>
      <title>我应用了诸如版本控制和调试之类的软件原理来主机酸面团，然后开源框架。</title>
      <link>https://www.reddit.com/r/programming/comments/1mj70vz/i_applied_software_principles_like_version/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/the_bread_code      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mj70vz/i_applied_software_principles_like_version/</guid>
      <pubDate>Wed, 06 Aug 2025 15:01:28 GMT</pubDate>
    </item>
    <item>
      <title>训练神经音频效果</title>
      <link>https://www.reddit.com/r/programming/comments/1mj6ck6/training_neural_audio_effects/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/wyager       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mj6ck6/training_neural_audio_effects/</guid>
      <pubDate>Wed, 06 Aug 2025 14:35:26 GMT</pubDate>
    </item>
    <item>
      <title>10X开发人员真的存在吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1mj6c04/do_10x_developers_really_exist/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在今年在布达佩斯举行的手工艺会议上，慈善专业专业（蜂窝CTO）说了一些真正坚持我的话： “您不需要10x工程师。在我自己的工作中 - 我不禁想知道这是如何与开发人员社区共鸣的。  您是否曾经与所谓的“ 10x开发人员”合作过，还是这只是不会死的浪漫神话？您是否认为团队可以真正充当一个凝聚力的单位，而无需依靠单个英雄承担负载？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/u/u/u/u/u/uperne-cookie-106      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mj6c04/do_10x_developers_really_exist/</guid>
      <pubDate>Wed, 06 Aug 2025 14:34:51 GMT</pubDate>
    </item>
    <item>
      <title>开发人员，重新发明 - 托马斯·多赫姆（Thomas Dohmke）</title>
      <link>https://www.reddit.com/r/programming/comments/1mj5urq/developers_reinvented_thomas_dohmke/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/thiststeve      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mj5urq/developers_reinvented_thomas_dohmke/</guid>
      <pubDate>Wed, 06 Aug 2025 14:15:56 GMT</pubDate>
    </item>
    <item>
      <title>共享图书馆在哪里</title>
      <link>https://www.reddit.com/r/programming/comments/1mj5idi/wheres_that_shared_library/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿，最近我一直在创建独立的Python应用程序。我一直在研究MACOS和Linux中的动态链接器的运作方式，特别是图书馆搜索的发生方式。 I had to go through a lot of references to get the whole picture, hopefully this would be yet another reference people use :) I also discuss the challenges in creating standalone directories for distributing python applications. The post builds from the common problem of failure in dynamic linking that I encountered from time to time in python Hope it&#39;s not too boring.感谢您！   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/narang_27      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mj5idi/wheres_that_shared_library/</guid>
      <pubDate>Wed, 06 Aug 2025 14:02:14 GMT</pubDate>
    </item>
    <item>
      <title>计算能力的傲慢</title>
      <link>https://www.reddit.com/r/programming/comments/1mj4x73/the_arrogance_of_compute_power/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/nalaginrut     link link&gt; link&gt; [link]&gt; [&gt; [3]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mj4x73/the_arrogance_of_compute_power/</guid>
      <pubDate>Wed, 06 Aug 2025 13:38:12 GMT</pubDate>
    </item>
    <item>
      <title>我们如何在没有检查点或延迟惩罚的情况下确切地建立交付</title>
      <link>https://www.reddit.com/r/programming/comments/1mj3fhp/how_we_built_exactlyonce_delivery_without/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/giladkl       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mj3fhp/how_we_built_exactlyonce_delivery_without/</guid>
      <pubDate>Wed, 06 Aug 2025 12:33:42 GMT</pubDate>
    </item>
    </channel>
</rss>