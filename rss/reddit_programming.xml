<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sun, 20 Jul 2025 06:26:14 GMT</lastBuildDate>
    <item>
      <title>GPU分析和优化简介</title>
      <link>https://www.reddit.com/r/programming/comments/1m4hl0p/an_introduction_to_gpu_profiling_and_optimization/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/daniel_kleinstein   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4hl0p/an_introduction_to_gpu_profiling_and_optimization/</guid>
      <pubDate>Sun, 20 Jul 2025 06:04:16 GMT</pubDate>
    </item>
    <item>
      <title>良好的软件工程师的每日7习惯</title>
      <link>https://www.reddit.com/r/programming/comments/1m4h0op/7_daily_habits_of_good_software_engineers/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/plakhlani   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4h0op/7_daily_habits_of_good_software_engineers/</guid>
      <pubDate>Sun, 20 Jul 2025 05:30:25 GMT</pubDate>
    </item>
    <item>
      <title>如何在本地运行Kubernetes微服务以进行快速开发</title>
      <link>https://www.reddit.com/r/programming/comments/1m4fuua/how_to_run_kubernetes_microservices_locally/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我的团队在kubernetes（aws eks）上运行的微服务软件中工作。我们有许多扩展名（存储库），当我们要部署一些新功能/bugfix时，我们将构建该服务的重新版本，将图像推向AWS ECR，然后将此新图像部署到EKS存储库中。 我们有4个不同的环境（INT，QA，QA，staging and staging and staging and staging and staging and staging and staging and staging and staging and staging and staging and staging and） +每个开发的特定名称空间。这使我们能够测试我们的更改，而不会弄乱他人的工作。 当我们编写代码时，我们无法在自己的计算机上运行整个系统。我们必须在AWS（INT环境）中将更改推向空间。这意味着我们没有立即反馈。如果我们甚至更改一个很小的事情，例如添加控制台。log，我们必须运行完整的部署过程。这会构建一个新版本，将其发送给AWS，然后在Kubernetes中进行更新。这需要大量时间，并使我们减慢了很多。 其他人通常如何发展微服务？有没有办法在我们自己的计算机上立即运行和测试我们的更改，或者类似的内容，因此我们可以看到它们在编码时是否起作用？ 有什么建议或想法真的有帮助！谢谢！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/key_courage_7513        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4fuua/how_to_run_kubernetes_microservices_locally/</guid>
      <pubDate>Sun, 20 Jul 2025 04:21:24 GMT</pubDate>
    </item>
    <item>
      <title>Pixel Art使用三js在JavaScript中的Voxel Art 3D</title>
      <link>https://www.reddit.com/r/programming/comments/1m4fo5l/pixel_art_to_voxel_art_3d_in_javascript_using/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   javaScript上的绘图和动画工具，使用了三个.js渲染。 尝试3D按钮！。 （当然是在绘制一些内容之后） 它是开源。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/programmerdyez       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4fo5l/pixel_art_to_voxel_art_3d_in_javascript_using/</guid>
      <pubDate>Sun, 20 Jul 2025 04:10:52 GMT</pubDate>
    </item>
    <item>
      <title>3D引擎渲染香草JavaScript。</title>
      <link>https://www.reddit.com/r/programming/comments/1m4f3r6/3d_engine_on_software_rendering_vanilla_javascript/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在Android上的SPCK编辑器上制作的，最终制作了一个小基准应用程序。 它是纯软件渲染，没有硬件。  android上的Android上可以在WebView上更好地工作，但是我需要为此做一个APK。 （SPCK编辑器在iPhone上运行良好） 在您的房屋屏幕上添加了网站（不是github One），它将运行得更好。 仍然有优化的空间，但它是一项正在进行的工作。 它是开源的。 2024：30fps 20.000-24.000 Tris -Iphone 15：30fps 100.000〜Tris -Iphone 16：30fps 140.000〜Tris  想知道Tris/sec吗？乘以三角形 - 计数*fps   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;  /u/ProgrammerDyez   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4f3r6/3d_engine_on_software_rendering_vanilla_javascript/</guid>
      <pubDate>Sun, 20 Jul 2025 03:39:09 GMT</pubDate>
    </item>
    <item>
      <title>在香草JavaScript上制作的3D引擎，在Canvas 2d中绘制的软件。</title>
      <link>https://www.reddit.com/r/programming/comments/1m4euy8/a_3d_engine_made_on_vanilla_javascript_software/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在Android上的SPCK编辑器上制作的，最终制作了一个小基准应用程序。  Android上的Android上的效果更好，但我需要为此做APK。 （SPCK编辑器运行良好） 在iPhone上添加了网站（不是github One），然后将其运行得更好。 这是在2D上下文中运行的手工3D引擎。 only CPU, 0% GPU. there&#39;s room for optimization still but it&#39;s a work in progress. it&#39;s open source. phones/results tested feel free to post your results  -moto g play 2024: 30fps 20.000-24.000 tris (programmed in this one) -iphone 15：30fps 100.000〜Tris -Iphone 16：30fps 140.000〜tris  想知道Tris/sec吗？乘以三角形 - 计数*fps   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;  /u/ProgrammerDyez   [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4euy8/a_3d_engine_made_on_vanilla_javascript_software/</guid>
      <pubDate>Sun, 20 Jul 2025 03:25:36 GMT</pubDate>
    </item>
    <item>
      <title>我正在根据外壳文件注释创建一个外壳预处理器</title>
      <link>https://www.reddit.com/r/programming/comments/1m4e178/im_creating_a_shell_preprocessor_based_on_shell/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  您好，Linux People，我是一个年轻的Linux爱好者，我一直在开发一种称为“ ShellMake”的工具在C中编写，您可以根据条件注释块编写，删除或替换，您可以访问环境变量，例如发行版，主机名，体系结构等，并基于此生成输出脚本（或多个）。概念上的想法是这样的...问题是：我不知道这对Sysadmins还是对Avid Shell用户的实际价值...我想提出建议；我应该继续该项目吗？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/kiammota       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4e178/im_creating_a_shell_preprocessor_based_on_shell/</guid>
      <pubDate>Sun, 20 Jul 2025 02:41:29 GMT</pubDate>
    </item>
    <item>
      <title>Xenity引擎 -  PSP，PlayStation 3，PS Vita和Modern Platforms的开源游戏引擎</title>
      <link>https://www.reddit.com/r/programming/comments/1m498bc/xenity_engine_opensource_game_engine_for_psp/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/r_retrohacking_mod2        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m498bc/xenity_engine_opensource_game_engine_for_psp/</guid>
      <pubDate>Sat, 19 Jul 2025 22:43:48 GMT</pubDate>
    </item>
    <item>
      <title>可测试Python代码的简易模式</title>
      <link>https://www.reddit.com/r/programming/comments/1m4740o/easy_patterns_for_testable_python_code/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  &#39;补丁是失败的迹象。 -Michael Python Library的创建者Michael Foord  “模拟夫妇您的测试与实施详细信息，并干扰了重构。” -Martin Fowler  本文分享了4个用于编写可测试代码的简单模式，因此您不必使用补丁程序和复杂模拟来尝试测试其他不可测试的代码。 （我删除了上一篇文章，因为文本有点误导）  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/gaeioran      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4740o/easy_patterns_for_testable_python_code/</guid>
      <pubDate>Sat, 19 Jul 2025 21:08:41 GMT</pubDate>
    </item>
    <item>
      <title>为什么我在2025年与AI代理商押注（尽管建造了）</title>
      <link>https://www.reddit.com/r/programming/comments/1m46lfb/why_im_betting_against_ai_agents_in_2025_despite/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ukanwat      &lt;a href =“ https://www.reddit.com/r/programming/comments/1m46lfb/1m46lfb/why_im_betting_against_ai_ai_aigents_in_iin_2025_depte/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m46lfb/why_im_betting_against_ai_agents_in_2025_despite/</guid>
      <pubDate>Sat, 19 Jul 2025 20:45:56 GMT</pubDate>
    </item>
    <item>
      <title>英特尔宣布，在开源十年后，它将关闭Clear Linux</title>
      <link>https://www.reddit.com/r/programming/comments/1m46fyd/intel_announces_its_shutting_down_clear_linux/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   此开源Linux发行版在X86_64硬件上提供了开箱即用的性能。 根据公告，它会立即有效，即没有更多的安全补丁等。因此，如果您依靠它，请依靠它，请务必依靠并寻找其他选择。   &#39;经过多年的创新和社区合作，我们将最终支持Clear Linux OS。立即有效，英特尔将不再为Clear Linux OS提供安全补丁，更新或维护，并且Clear Linux OS GITHUB存储库将在仅阅读模式下存档。因此，如果您目前使用Clear Linux OS，我们强烈建议您尽快计划迁移到另一个积极维护的Linux分发，以确保持续的安全性和稳定性。＆quort”    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/horovits       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m46fyd/intel_announces_its_shutting_down_clear_linux/</guid>
      <pubDate>Sat, 19 Jul 2025 20:39:14 GMT</pubDate>
    </item>
    <item>
      <title>使用VFS覆盖隐藏文件</title>
      <link>https://www.reddit.com/r/programming/comments/1m42laq/hide_files_using_vfs_overlay/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  好吧，我正在阅读有关“了解Linux内核”中的文件系统，并遇到了一个非常有趣的事实。如果我将文件系统覆盖在Linux中的现有目录上，则该目录的现有内容已隐藏，直到文件系统被卸载为止。我认为这非常酷，所以考虑了分享。  周末快乐，家伙🥂  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;  /u/pirate_husky   [link] ＆＃32;   [commist]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m42laq/hide_files_using_vfs_overlay/</guid>
      <pubDate>Sat, 19 Jul 2025 17:57:36 GMT</pubDate>
    </item>
    <item>
      <title>大师sql智能的方式 - 在您身边的AI</title>
      <link>https://www.reddit.com/r/programming/comments/1m404c5/master_sql_the_smart_way_with_ai_by_your_side/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://www.firebird-technologies.com/p/master-sql-the-smart-way-with-ai-”&gt; [link]  ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m404c5/master_sql_the_smart_way_with_ai_by_your_side/</guid>
      <pubDate>Sat, 19 Jul 2025 16:15:24 GMT</pubDate>
    </item>
    <item>
      <title>了解GO中的抽象工厂模式：实用指南</title>
      <link>https://www.reddit.com/r/programming/comments/1m3ye5f/understanding_the_abstract_factory_pattern_in_go/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  抽象工厂最终为我点击。这不仅是“设计模式绒毛”，而且当您需要交换整个相关组件（例如Windows vs Mac UI，AWS vs Azure SDK等）时，它非常方便。一个工厂交换，您的整个应用程序保持一致。没有if-else混乱。没有类型的泄漏。 当您的应用开始增长时，有助于保持一切清洁。我希望我早日使用它。 在这里检查一下： https://medium.com/design-bootcamp/understanding-the-abstract-factory-pattory-pattern-in-go-a-paractical-guide-d575fb58df90    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/priyankchheda15     [link]       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m3ye5f/understanding_the_abstract_factory_pattern_in_go/</guid>
      <pubDate>Sat, 19 Jul 2025 15:03:14 GMT</pubDate>
    </item>
    <item>
      <title>Brett Cannon在Python，人类...和包装</title>
      <link>https://www.reddit.com/r/programming/comments/1m3xkx2/brett_cannon_on_python_humans_and_packaging/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/alicedu06       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m3xkx2/brett_cannon_on_python_humans_and_packaging/</guid>
      <pubDate>Sat, 19 Jul 2025 14:28:27 GMT</pubDate>
    </item>
    </channel>
</rss>