<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Wed, 06 Aug 2025 09:27:57 GMT</lastBuildDate>
    <item>
      <title>将来，所有食物都会在微波炉中煮熟，如果您不能处理，那么您需要离开厨房</title>
      <link>https://www.reddit.com/r/programming/comments/1mizw9u/in_the_future_all_food_will_be_cooked_in_a/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/mareek    [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mizw9u/in_the_future_all_food_will_be_cooked_in_a/</guid>
      <pubDate>Wed, 06 Aug 2025 09:20:30 GMT</pubDate>
    </item>
    <item>
      <title>如何扩展代码评论</title>
      <link>https://www.reddit.com/r/programming/comments/1mizldr/how_to_scale_code_reviews/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/gypirable_belt_6684      [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mizldr/how_to_scale_code_reviews/</guid>
      <pubDate>Wed, 06 Aug 2025 09:01:06 GMT</pubDate>
    </item>
    <item>
      <title>这个声音AI框架的视觉设计师是快速原型制作的天赐之物</title>
      <link>https://www.reddit.com/r/programming/comments/1mizk5l/this_voice_ai_frameworks_visual_designer_is_a/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  好，devs。更改API键，挖掘三个配置文件。测试一个新工具，重构主循环。它使尝试想法变得巨大的琐事。 我正在寻找更好的工作流程，并偶然发现了这个项目， ten-framework 。对我而言，它的出色功能是 tman设计师。 它是一个基于图形的UI，您可以在其中视觉上绘制整个代理的逻辑。您可以拖放语音到文本，LLM，文本到语音和其他工具的组件，然后将它们连接在一起。需要将一项服务换成另一项服务吗？只需更换节点即可。想测试其他逻辑分支吗？  这完全将代理的流与基础代码分开，这对于快速实验是巨大的。您可以弄乱逻辑并即时测试不同的配置，而无需触摸核心应用程序代码。 如果您一直在推迟一个对话性AI侧项目，因为您害怕乏味的迭代循环，这可能是您一直在寻找的工具。这使得“这个想法甚至可以起作用？”阶段要快得多。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/electronic_mail7449       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mizk5l/this_voice_ai_frameworks_visual_designer_is_a/</guid>
      <pubDate>Wed, 06 Aug 2025 08:59:01 GMT</pubDate>
    </item>
    <item>
      <title>与LLM一起生活（2023-2025）</title>
      <link>https://www.reddit.com/r/programming/comments/1mizc2r/living_with_llms_2023_2025/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/us yourmagicisworking       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mizc2r/living_with_llms_2023_2025/</guid>
      <pubDate>Wed, 06 Aug 2025 08:44:06 GMT</pubDate>
    </item>
    <item>
      <title>设计AI应用程序：适用于新AI世界的分布式系统的原理</title>
      <link>https://www.reddit.com/r/programming/comments/1miyhl0/designing_ai_applications_principles_from/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/tistory_wing_9573     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1miyhl0/designing_ai_applications_principles_from/</guid>
      <pubDate>Wed, 06 Aug 2025 07:47:32 GMT</pubDate>
    </item>
    <item>
      <title>系统设计实践问题：用解释解决</title>
      <link>https://www.reddit.com/r/programming/comments/1mixeqa/system_design_practice_questions_solved_with/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  系统设计的基本知识即使在初级软件工程角色也可以在技术招聘过程中进行。与专注于算法和数据结构的编码访谈不同，系统设计访谈评估了候选人具有可扩展，高效和可维护的软件系统的能力。这是系统设计实践集。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/eRdsingh24      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mixeqa/system_design_practice_questions_solved_with/</guid>
      <pubDate>Wed, 06 Aug 2025 06:38:06 GMT</pubDate>
    </item>
    <item>
      <title>工作流引擎设计建议，告诉我您的想法</title>
      <link>https://www.reddit.com/r/programming/comments/1miwv6q/workflow_engine_design_proposal_tell_me_your/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  人类可读形式： https://github.com/event-driven-io/emmett/blob/rfc/001-workflowengine/src/rfc/rfc/001-workflow.md     &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/Adventurous-salt8514        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1miwv6q/workflow_engine_design_proposal_tell_me_your/</guid>
      <pubDate>Wed, 06 Aug 2025 06:05:11 GMT</pubDate>
    </item>
    <item>
      <title>AI vs技术债务：这是一场竞赛吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1mivn0m/ai_vs_technical_debt_is_this_a_race_to_the_bottom/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/Norah_AI   [link]  &lt;a href =“ https://www.reddit.com/r/programming/comments/1mivn0m/ai_vs_technical_debt_is_is_is_a_race_race_race_the_bottom/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mivn0m/ai_vs_technical_debt_is_this_a_race_to_the_bottom/</guid>
      <pubDate>Wed, 06 Aug 2025 04:53:45 GMT</pubDate>
    </item>
    <item>
      <title>与双子座和超级分析的实时跆拳道教练YOLO</title>
      <link>https://www.reddit.com/r/programming/comments/1miu84z/realtime_kickboxing_coaching_with_gemini_and/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/nash0x7e2      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1miu84z/realtime_kickboxing_coaching_with_gemini_and/</guid>
      <pubDate>Wed, 06 Aug 2025 03:37:40 GMT</pubDate>
    </item>
    <item>
      <title>构建了CleanSweep，这是一种免费的跨平台工具，可查找重复的文件和回收磁盘空间（开源，Python）</title>
      <link>https://www.reddit.com/r/programming/comments/1miu19d/built_cleansweep_a_free_crossplatform_tool_to/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好！我构建了 CleanSweep ，这是一种跨平台Python实用程序，可帮助您整理磁盘驱动器。它找到重复的文件，报告最大的空间猪，并按文件类型总结存储。没有云，没有跟踪 - 所有东西都在当地运行。我们正在添加感知图像哈希和GUI。欢迎反馈和贡献！提交由＆＃32; /u/u/u/ecletonic-salad9608       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1miu19d/built_cleansweep_a_free_crossplatform_tool_to/</guid>
      <pubDate>Wed, 06 Aug 2025 03:27:49 GMT</pubDate>
    </item>
    <item>
      <title>将文字添加到您的ebitengine游戏中</title>
      <link>https://www.reddit.com/r/programming/comments/1mit8cb/adding_text_to_your_ebitengine_game/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/tslocum      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mit8cb/adding_text_to_your_ebitengine_game/</guid>
      <pubDate>Wed, 06 Aug 2025 02:47:59 GMT</pubDate>
    </item>
    <item>
      <title>实习管理网站</title>
      <link>https://www.reddit.com/r/programming/comments/1mishni/internship_management_website/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  你好reddit。 这是我的第一个完整的堆栈项目，与我在大学的4位同学。 The project is a semester final work of the 1st year. This is a website where you can apply for internships, create, and manage them. I would be glad to hear your criticism and be useful for beginners Frontend: HTML, CSS and JavaScript Backend: Express.js, Node.js Database: Mysql &lt;!-- sc_on-&gt;＆＃32;提交由＆＃32; /u/u/crazyffester     [link]&gt; [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mishni/internship_management_website/</guid>
      <pubDate>Wed, 06 Aug 2025 02:12:35 GMT</pubDate>
    </item>
    <item>
      <title>Openai刚刚发布了自GPT-2以来的首个开源车型GPT-Oss。就像他们说的那样好吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1miqvkp/openai_just_released_gptoss_its_first_opensource/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/thereaiironman       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1miqvkp/openai_just_released_gptoss_its_first_opensource/</guid>
      <pubDate>Wed, 06 Aug 2025 00:56:48 GMT</pubDate>
    </item>
    <item>
      <title>开源和Openai的回报</title>
      <link>https://www.reddit.com/r/programming/comments/1mip8bn/open_source_and_openais_return/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/nalaginrut   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mip8bn/open_source_and_openais_return/</guid>
      <pubDate>Tue, 05 Aug 2025 23:43:03 GMT</pubDate>
    </item>
    <item>
      <title>封装不是Java的错（Python也需要它）</title>
      <link>https://www.reddit.com/r/programming/comments/1mip429/encapsulation_isnt_javas_fault_and_python_needs/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   python中的封装是经常被刷掉的主题之一，要么是不必要的样板，要么是从Java和C ++等静态类型的语言中进行的行李。在许多Python团队中，它被视为可选的，或更糟糕的是无关紧要。 ，但是这种随意的态度具有成本。 随着python在企业软件中扮演更大的角色，尤其是随着AI的兴起，尤其是随着AI的兴起，更多的团队正在建立更大，更复杂的系统。如果没有适当的封装，代码库的一部分的内部变化可能会泄漏出来并为其他所有人打破事情。很难理解代码界限，更难进行协作，并且很难在不踩到彼此的脚趾的情况下快速移动。 在这篇文章中，我们将讨论为什么封装在Python 中仍然很重要，为什么它变得越来越重要，为什么它会变得越来越重要，以及如何在这种情况下以这种方式构成这种态度，并且如何使您的语言和pophy          &lt;这不是“如何模仿python”的Java访问修饰符之一。帖子。我们的进展要深。  ----   do注意： 没有在语言级别上执行访问修饰符和根本没有访问修饰符的访问。     &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/last_difference9410     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mip429/encapsulation_isnt_javas_fault_and_python_needs/</guid>
      <pubDate>Tue, 05 Aug 2025 23:38:02 GMT</pubDate>
    </item>
    </channel>
</rss>