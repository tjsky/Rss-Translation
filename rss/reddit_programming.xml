<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Wed, 23 Apr 2025 12:33:15 GMT</lastBuildDate>
    <item>
      <title>VIBE编码| YouTube下载器</title>
      <link>https://www.reddit.com/r/programming/comments/1k5wt61/vibe_coding_youtube_downloader/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我是第一次学习发展的人。我使用Vibe编码制作了YouTube视频下载器。我也有些笨拙地添加了广告。 STOV App！ 请表示兴趣！谢谢。   https://www.stov.app.app     &lt;！ -  sc_on-&gt; &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/um/comentional_big_5466       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k5wt61/vibe_coding_youtube_downloader/</guid>
      <pubDate>Wed, 23 Apr 2025 11:30:14 GMT</pubDate>
    </item>
    <item>
      <title>MLIR汇编的GPU</title>
      <link>https://www.reddit.com/r/programming/comments/1k5vrqb/gpu_compilation_with_mlir/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  从上一篇文章中继续 - 本系列是将高级张量操作转换为使用MLIR的高效GPU-Cectable代码的综合指南。它深入研究了Linalg方言，展示了如何将诸如 linalg.generic，linalg.map 和 linalg.matmul 之类的操作用于定义张量计算。本文强调了优化技术，例如内核融合，该技术结合了多个操作以减少内存开销和循环瓷砖，从而增强了GPU体系结构上的高速缓存利用率和性能。通过详细的代码示例和转换管道，它说明了将张量操作降低到优化GPU代码的过程，这是对对MLIR和GPU编程感兴趣的开发人员的宝贵资源。   &lt;！ -  sc_on-&gt; &lt;！ - &gt;＆＃32;提交由＆＃32; /u/u/dtseng123      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k5vrqb/gpu_compilation_with_mlir/</guid>
      <pubDate>Wed, 23 Apr 2025 10:26:45 GMT</pubDate>
    </item>
    <item>
      <title>Cheerpj 4.0：浏览器的WebAssembly JVM，现在使用Java 11和JNI支持</title>
      <link>https://www.reddit.com/r/programming/comments/1k5vplf/cheerpj_40_webassembly_jvm_for_the_browser_now/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/alexp_lt      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k5vplf/cheerpj_40_webassembly_jvm_for_the_browser_now/</guid>
      <pubDate>Wed, 23 Apr 2025 10:22:49 GMT</pubDate>
    </item>
    <item>
      <title>如何建立功能失调的团队</title>
      <link>https://www.reddit.com/r/programming/comments/1k5vp1n/how_to_build_a_dysfunctional_team/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/catalyst_jw      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k5vp1n/how_to_build_a_dysfunctional_team/</guid>
      <pubDate>Wed, 23 Apr 2025 10:21:44 GMT</pubDate>
    </item>
    <item>
      <title>恶意NPM包裹冒充流行的Express Cookie Parser</title>
      <link>https://www.reddit.com/r/programming/comments/1k5vn3c/malicious_npm_package_impersonating_popular/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/N1ghtCod3r   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k5vn3c/malicious_npm_package_impersonating_popular/</guid>
      <pubDate>Wed, 23 Apr 2025 10:18:15 GMT</pubDate>
    </item>
    <item>
      <title>可维护代码库的原理</title>
      <link>https://www.reddit.com/r/programming/comments/1k5v9vm/principles_for_maintainable_codebases/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/_bloodyowl     ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k5v9vm/principles_for_maintainable_codebases/</guid>
      <pubDate>Wed, 23 Apr 2025 09:54:06 GMT</pubDate>
    </item>
    <item>
      <title>在膨胀 - 罗布·派克（Rob Pike）</title>
      <link>https://www.reddit.com/r/programming/comments/1k5uksw/on_bloat_rob_pike/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/valyala     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k5uksw/on_bloat_rob_pike/</guid>
      <pubDate>Wed, 23 Apr 2025 09:04:51 GMT</pubDate>
    </item>
    <item>
      <title>异步卓越：使用Kafka解锁可伸缩性-Devoxx Greece 2025</title>
      <link>https://www.reddit.com/r/programming/comments/1k5txpr/async_excellence_unlocking_scalability_with_kafka/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  查看四个关键模式，以提高可伸缩性和开发人员速度：     集成事件：减少预取用的延迟。        task queeue 延迟任务的规模调度。  迭代器：在块中管理长期运行的作业。    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/natan-sil      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k5txpr/async_excellence_unlocking_scalability_with_kafka/</guid>
      <pubDate>Wed, 23 Apr 2025 08:16:59 GMT</pubDate>
    </item>
    <item>
      <title>好像新的Openai模型在生成的文字中留下了隐形的水印</title>
      <link>https://www.reddit.com/r/programming/comments/1k5th7h/seems_like_new_openai_models_leave_invisible/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  似乎像新的Openai型号在生成的文本中留下无形的水印： https://rumidocs.com/newsroom/new-chatgpt-chatgpt-chatgpt-models-seem-to-seem-to-seem-to-leave-leave-lbrors brors brors brors brors brors问题： https://github.com/bytemastermind/mark-gpt      &lt;！提交由＆＃32; /u/u/ogi__       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k5th7h/seems_like_new_openai_models_leave_invisible/</guid>
      <pubDate>Wed, 23 Apr 2025 07:43:07 GMT</pubDate>
    </item>
    <item>
      <title>Java设计模式基于现实世界的采访问题实践测试MCQ</title>
      <link>https://www.reddit.com/r/programming/comments/1k5smuu/java_design_patterns_real_world_scenariobased/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/erdsingh24   [link] ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k5smuu/java_design_patterns_real_world_scenariobased/</guid>
      <pubDate>Wed, 23 Apr 2025 06:42:14 GMT</pubDate>
    </item>
    <item>
      <title>授权状态-2025</title>
      <link>https://www.reddit.com/r/programming/comments/1k5rtlu/the_state_of_authorization_2025/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/per_io      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k5rtlu/the_state_of_authorization_2025/</guid>
      <pubDate>Wed, 23 Apr 2025 05:46:57 GMT</pubDate>
    </item>
    <item>
      <title>解释：L1正则化如何执行特征选择？ |迈向数据科学</title>
      <link>https://www.reddit.com/r/programming/comments/1k5rfb5/explained_how_does_l1_regularization_perform/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我正在阅读有关正则化的信息，并发现了一条&#39;l1正则化执行功能选择&#39;和“正则化是嵌入式特征选择方法”。我不确定正则化与功能选择的关系如何，最终阅读了有关该主题的一些书籍/博客/论坛。 提示L1正则化力“一些”参数将变为零的资源之一，因此使这些功能对模型输出的影响无效。这种“自动”删除特征通过将其相应参数归为零来归类为嵌入式特征选择方法。一个问题持续存在：“ L1正则化如何确定哪些参数要零？”，换句话说，“ L1正则化如何知道哪些功能是多余的？”。 互联网上的大多数博客/视频都集中在&#39;此功能选择“如何发生”，讨论L1正则化的sparsition sparsity如何发生。我想更多地了解问题的“为什么”部分，这迫使我进行了一些更深入的分析。此博客中包含“为什么”部分的说明。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/shubham0204_dev    href =“ https://towardsdatascience.com/explaining-how-does-l1-regularization-perforn-feature-selection/”&gt; [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k5rfb5/explained_how_does_l1_regularization_perform/</guid>
      <pubDate>Wed, 23 Apr 2025 05:21:03 GMT</pubDate>
    </item>
    <item>
      <title>在C/C ++程序中利用不确定的行为进行优化：有关绩效影响的研究[PDF]</title>
      <link>https://www.reddit.com/r/programming/comments/1k5pt17/exploiting_undefined_behavior_in_cc_programs_for/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k5pt17/exploiting_undefined_behavior_in_cc_programs_for/</guid>
      <pubDate>Wed, 23 Apr 2025 03:43:27 GMT</pubDate>
    </item>
    <item>
      <title>为什么TCP需要3个握手</title>
      <link>https://www.reddit.com/r/programming/comments/1k5okeu/why_tcp_needs_3_handshakes/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/stackoverflooooooow     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k5okeu/why_tcp_needs_3_handshakes/</guid>
      <pubDate>Wed, 23 Apr 2025 02:36:27 GMT</pubDate>
    </item>
    <item>
      <title>第36天：您可以使用JavaScript的INTL API格式化日期，数字和货币吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1k5nrj1/day_36_can_you_format_dates_numbers_and/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/myssiriouseye8494     [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k5nrj1/day_36_can_you_format_dates_numbers_and/</guid>
      <pubDate>Wed, 23 Apr 2025 01:55:38 GMT</pubDate>
    </item>
    </channel>
</rss>