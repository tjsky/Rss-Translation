<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Wed, 10 Sep 2025 12:30:29 GMT</lastBuildDate>
    <item>
      <title>什么是模块化的整体，为什么您应该关心？ 🔥</title>
      <link>https://www.reddit.com/r/programming/comments/1nda6tp/what_is_a_modular_monolith_and_why_you_should_care/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/pepincho      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nda6tp/what_is_a_modular_monolith_and_why_you_should_care/</guid>
      <pubDate>Wed, 10 Sep 2025 10:09:58 GMT</pubDate>
    </item>
    <item>
      <title>使用Jmeter负载测试比较春季启动中的虚拟线程与平台线程</title>
      <link>https://www.reddit.com/r/programming/comments/1nd95t0/comparing_virtual_threads_vs_platform_threads_in/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我已经在 spring boot虚拟线程与平台线程进行jmeter load Testing上创建了一个视频课程。        link： https://youtu.be/LDgriPNWCjY Here I checked how Virtual Threads actually perform compared to Platform Threads in a real Spring Boot app in case of IO Based Operations . For the setup , I ran two instances of the same application:  First one - with Virtual Threads enabled Second one - Same application with the default Tomcat thread pool (Platform Threads) running on different port   Then I used JMeter to hit both application with increasing load (starting around 200 users/sec, then pushing up to 1000+）。我还捕获了并排的结果（例如图，吞吐量，响应时间）。  观察值：      平台线程，一旦tomcat在200个线程的范围左右逐渐越来越较大的范围 strong  当我运行更长的测试时，差异更加明显。   一个警告：这个好处确实显示出 i/o-o-heavy请求（我什至添加了A  thread.sleep.sleep.sleep ）。正如预期的那样，对于CPU繁重的东西，虚拟线程不会给予相同的优势。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/mrayandutta       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nd95t0/comparing_virtual_threads_vs_platform_threads_in/</guid>
      <pubDate>Wed, 10 Sep 2025 09:05:17 GMT</pubDate>
    </item>
    <item>
      <title>JEP 401：刚刚提交的价值类和对象（预览）！</title>
      <link>https://www.reddit.com/r/programming/comments/1nd8vob/jep_401_value_classes_and_objects_preview_has/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  它正在出现的JDK尚不清楚。但是，这是跨越的主要里程碑。另外，瓦尔哈拉（Valhalla）的新及早访问（大概与当前的JDK最新）也将很快上线。链接的帖子中的详细信息。 ，对于那些不熟悉的人， u/brian_goetz 是领导Project valhalla努力的人。因此，他在链接的帖子中发表的评论可以帮助您通过普通用户与公开JDK团队本身的官方单词在假设之间分开。  u/pron98 是另一个OpenJDK团队成员，在链接的帖子中发表评论。  &lt;！ -  sc_on- sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/java/comments/1nckdwr/jep_401_value_value_classes_and_objects_preview_has/”&gt; [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nd8vob/jep_401_value_classes_and_objects_preview_has/</guid>
      <pubDate>Wed, 10 Sep 2025 08:46:19 GMT</pubDate>
    </item>
    <item>
      <title>git注意：git最酷，最不受欢迎的功能</title>
      <link>https://www.reddit.com/r/programming/comments/1nd8nsi/git_notes_gits_coolest_most_unloved_feature/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  你知道...吗？如果这样做，您将其用于什么？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/esiy0676     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nd8nsi/git_notes_gits_coolest_most_unloved_feature/</guid>
      <pubDate>Wed, 10 Sep 2025 08:31:55 GMT</pubDate>
    </item>
    <item>
      <title>铲软件在哪里？为什么AI编码声明不加起来</title>
      <link>https://www.reddit.com/r/programming/comments/1nd88hz/wheres_the_shovelware_why_ai_coding_claims_dont/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我刚刚遇到了Mike Judge的这篇文章。我认为它还没有在这里共享。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/livid_sign9681     [link]   ＆＃32;   [注释]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nd88hz/wheres_the_shovelware_why_ai_coding_claims_dont/</guid>
      <pubDate>Wed, 10 Sep 2025 08:03:08 GMT</pubDate>
    </item>
    <item>
      <title>API测试在微服务中感觉到重复性。您如何处理？</title>
      <link>https://www.reddit.com/r/programming/comments/1nd7rc7/api_testing_feels_repetitive_across_microservices/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我最近一直在考虑微服务测试。突出的一件事是它的重复性。 Every service has APIs, and a big chunk of the testing is the same across them:  Negative inputs Boundary values Encoding quirks Those invisible Unicode characters that ruin your weekend  I ended up building a CLI tool called Dochia to help automate this shared layer of API testing.它读取您的OpenAPI规格并产生许多智能边缘有效载荷，然后产生有关破裂的报告。 开源回购：github.com/dochia-dev/dochia-cli  我很乐意在这里听到其他人在这里处理重复测试：  lizz fl lizz fl lizz you 套房？ 或只是希望客户永远不会发送怪异的有效载荷？  好奇地向社区学习，如果多奇亚对你们中的某些人有用，很高兴提交由＆＃32; /u/u/u/ludovicianul       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nd7rc7/api_testing_feels_repetitive_across_microservices/</guid>
      <pubDate>Wed, 10 Sep 2025 07:30:49 GMT</pubDate>
    </item>
    <item>
      <title>我进行了免费的VSC扩展程序来管理我的AI提示/规则文件</title>
      <link>https://www.reddit.com/r/programming/comments/1nd7pvk/i_made_a_free_vsc_extension_to_manage_my_ai/</link>
      <description><![CDATA[Hey folks, Anyone else feel like ever since you started using AI tools like Cursor and Copilot, your projects are getting cluttered with config files? My .cursor/rules folder was getting bloated, I had different .github/ configs scattered everywhere, and trying to find that我上个月写的一个完美的提示是一场噩梦。和切换机？忘了它。一场完整的灾难必须从头开始设置所有内容。 要解决此头痛，我建立了一个VS代码扩展名，称为规则管理器。   它将所有分散的AI规则文件（提示）变成一个单个，可同步，可搜索，可搜索和可重复使用的云库。  自动扫描您的项目：打开一个项目时，它会自动在诸如 .cursor/rules ， .github/code&gt;等文件夹中找到您的规则（它只是与您的VS代码设置同步，因此无需第三方帐户）。您还可以添加标签，例如 react ， python ，重构等。现在我自己的工作流程的一部分。我所有的最佳提示都可以保存并准备就绪，整个过程都非常顺利。 扩展名是免费的和开源的，我希望大家都可以尝试一下。反馈和问题受到欢迎！   github     &lt;！ -  sc_on- sc_on-&gt;＆＃32;提交由＆＃32; /u/u/worth-ant-4682       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nd7pvk/i_made_a_free_vsc_extension_to_manage_my_ai/</guid>
      <pubDate>Wed, 10 Sep 2025 07:28:10 GMT</pubDate>
    </item>
    <item>
      <title>流程系统设计：构建LLM编排平台</title>
      <link>https://www.reddit.com/r/programming/comments/1nd7hzt/flowrun_system_design_building_an_llm/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/history_wing_9573        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nd7hzt/flowrun_system_design_building_an_llm/</guid>
      <pubDate>Wed, 10 Sep 2025 07:13:30 GMT</pubDate>
    </item>
    <item>
      <title>现代算法的不合理效力</title>
      <link>https://www.reddit.com/r/programming/comments/1nd7bby/the_unreasonable_effectiveness_of_modern_sort/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/voultapher      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nd7bby/the_unreasonable_effectiveness_of_modern_sort/</guid>
      <pubDate>Wed, 10 Sep 2025 07:01:35 GMT</pubDate>
    </item>
    <item>
      <title>Perl编程语言再次上升</title>
      <link>https://www.reddit.com/r/programming/comments/1nd5p1w/perl_programming_language_rises_again/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  曾经是一种流行的编程语言，可以追溯到1987年，并且最近看到了语言普及的Tiobe索引的复兴。该语言在本月的TIOBE指数中排名第10，从一年前的27号上升。 Perl在其鼎盛时期排名高达第三。 每月TIOBE编程社区指数的评分基于与每种语言有关的全球工程师的数量。  2025年9月2025年9月，提交由＆＃32;态href =“ https://www.infoworld.com/article/4053221/perl-programming-language-rises-rises-rises-again-tiobe.html”&gt; [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nd5p1w/perl_programming_language_rises_again/</guid>
      <pubDate>Wed, 10 Sep 2025 05:21:17 GMT</pubDate>
    </item>
    <item>
      <title>AI代理只是炒作吗？大概？</title>
      <link>https://www.reddit.com/r/programming/comments/1nd24ej/are_ai_agents_just_hype_probably/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/helpful_geostic430       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nd24ej/are_ai_agents_just_hype_probably/</guid>
      <pubDate>Wed, 10 Sep 2025 02:12:56 GMT</pubDate>
    </item>
    <item>
      <title>我尝试在社交媒体应用程序中添加3D游戏（react + three.js）</title>
      <link>https://www.reddit.com/r/programming/comments/1ncyhoc/i_tried_adding_a_3d_game_inside_my_social_media/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大多数社交媒体应用程序看起来和感觉相同 - 馈送，喜欢和无尽的滚动。 So I thought: what if I added a 3D game directly inside the app I’m building? In my latest MadInfra Lab video, I show how I went from: • Half-finished real-time notifications 🚧 • → To experimenting with Three.js + React wrappers 🎮 • → To getting a simple 3D character walking around inside my app 👾 I even tried (and failed gloriously) to make it multiplayer with Websockets  - 想象Instagram与Roblox混合。混乱，但有趣的混乱。 如果您喜欢Web Dev，React或3D实验，您可能会喜欢我在此过程中读到的构建，挣扎和课程。   📺 href =“ https://youtu.be/3gcwwlsgbag？si = d8pi6acgguy23heo”&gt; https://youtu.be/3gcwwlsgbag?si = dpi6acgguy23heo  3D或游戏化了您自己的项目。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/madinfralab      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncyhoc/i_tried_adding_a_3d_game_inside_my_social_media/</guid>
      <pubDate>Tue, 09 Sep 2025 23:24:20 GMT</pubDate>
    </item>
    <item>
      <title>超越代码：使您高级软件工程师的教训</title>
      <link>https://www.reddit.com/r/programming/comments/1ncx9gw/beyond_the_code_lessons_that_make_you_senior/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/_zeynel      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncx9gw/beyond_the_code_lessons_that_make_you_senior/</guid>
      <pubDate>Tue, 09 Sep 2025 22:32:25 GMT</pubDate>
    </item>
    <item>
      <title>安静的影响力：工程中的尼马瓦西指南</title>
      <link>https://www.reddit.com/r/programming/comments/1nctrdx/quiet_influence_a_guide_to_nemawashi_in/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/matthodge      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nctrdx/quiet_influence_a_guide_to_nemawashi_in/</guid>
      <pubDate>Tue, 09 Sep 2025 20:13:37 GMT</pubDate>
    </item>
    <item>
      <title>设置CI/CD管道用于打字稿MonorePo</title>
      <link>https://www.reddit.com/r/programming/comments/1ncs4uk/setting_up_cicd_pipelines_for_typescript_monorepo/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/primeentbid2476       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncs4uk/setting_up_cicd_pipelines_for_typescript_monorepo/</guid>
      <pubDate>Tue, 09 Sep 2025 19:14:49 GMT</pubDate>
    </item>
    </channel>
</rss>