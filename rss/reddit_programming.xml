<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Tue, 02 Sep 2025 01:11:16 GMT</lastBuildDate>
    <item>
      <title>GameBuilder Basic（GB Basic） - 复古幻想控制台生成与游戏男孩兼容的ROM</title>
      <link>https://www.reddit.com/r/programming/comments/1n66370/gamebuilder_basic_gb_basic_retro_fantasy_console/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/r_retrohacking_mod2      &lt;a href =“ https://www.reddit.com/r/programming/comments/1n66370/gamebuilder_basic_gb_basic_retro_fantasy_console/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n66370/gamebuilder_basic_gb_basic_retro_fantasy_console/</guid>
      <pubDate>Tue, 02 Sep 2025 01:02:10 GMT</pubDate>
    </item>
    <item>
      <title>“ Vibe营销人员成为第一名的新营销角色”它只是不会停止</title>
      <link>https://www.reddit.com/r/programming/comments/1n620n5/vibe_marketer_becomes_1_new_marketing_role_it/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://jon4growth.substack.com/p/vibe-marketer-becomes-1-new-marketing?utm_source=tldrrarkarketing”&gt; [link]    ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n620n5/vibe_marketer_becomes_1_new_marketing_role_it/</guid>
      <pubDate>Mon, 01 Sep 2025 21:57:11 GMT</pubDate>
    </item>
    <item>
      <title>糟糕的AJ：兼容API的CLI工具，具有长期的语义回忆。</title>
      <link>https://www.reddit.com/r/programming/comments/1n5yyd3/awful_aj_a_cli_tool_for_openai_compatible_apis/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/sqli       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n5yyd3/awful_aj_a_cli_tool_for_openai_compatible_apis/</guid>
      <pubDate>Mon, 01 Sep 2025 19:55:54 GMT</pubDate>
    </item>
    <item>
      <title>尝试使用GPT-4O，Claude Sonnet 3.5和Invofox API（Python）解析发票。这是我发现的。</title>
      <link>https://www.reddit.com/r/programming/comments/1n5yf2b/tried_parsing_invoices_with_gpt4o_claude_sonnet/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我想看看用代码从PDF中提取结构化数据多么容易（或混乱）。 So over the last month, I tried a few approaches (using Postman &amp; Python) and thought I would share on what worked, what didn’t and what ended up being worth the effort. a) DIY Workflow with GPT-4o and Claude 3.5 Both OpenAI’s GPT-4o and Anthropic’s Claude models are surprisingly good at understanding invoice layouts (if you give them the right 迅速的）。但是有一些烦人的步骤：  您必须先在每个pdf上运行OCR（我使用 pdfplumber ） 那么，这都是关于及时工程的。我花了很多时间调整提示，只是为了使JSON保持一致。 Sometimes fields went missing or labels got weird. Both models respond fast for short docs, costs are similar (~$0.01 per normal invoice using 1-2k tokens) and outputs look clean most of the time.  b) Invofox API (specialized models) tuned for invoices.  You can upload the PDF straight away. OCR，页面拆分，文档分类都在幕后处理。 架构是自动从发票中的期望中自动提取的。 验证，错误处理，甚至“置信度得分”内置的“置信得分”。我还将Postman与Python代码一起使用。 完成代码： repo         href =“ https://www.invofox.com/en/post/document-parsing-usish-usis-gpt-4o-api-vs-claude-sonnet-sonnet-3-5-5-5-api-vs-invofox-api-api-with-with-code-shamples”&gt;在这里      这是 这是curi curi curi curi curi。如果您必须在附带项目中解析文档，您是否依靠GPT/Claude +提示或直接选择专门的API？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/anmolbaranwal      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n5yf2b/tried_parsing_invoices_with_gpt4o_claude_sonnet/</guid>
      <pubDate>Mon, 01 Sep 2025 19:34:57 GMT</pubDate>
    </item>
    <item>
      <title>关于对象创建的想法</title>
      <link>https://www.reddit.com/r/programming/comments/1n5vbg8/thoughts_on_object_creation/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/nfrankel      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n5vbg8/thoughts_on_object_creation/</guid>
      <pubDate>Mon, 01 Sep 2025 17:40:08 GMT</pubDate>
    </item>
    <item>
      <title>C3语言为0.7.5：语言调整和便利</title>
      <link>https://www.reddit.com/r/programming/comments/1n5u6qy/c3_language_at_075_language_tweaks_and/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  刚刚释放了C3 0.7.5！对于那些不熟悉的人，C3是一种系统编程语言，在“更好的c＆quot”中采用与Zig或Odin不同的方法。空间。 （使C3与众不同：进化而不是革命性的，试图保持接近C的同时修复其疼痛点。  此版本添加：   模块别名： alias io = module std :: io     compile time ternary： $ debug？ ＆quot“冗长” ：＆quot＆quot&#39;  带有可选参数的更好的宏系统  QOL改进的吨     github    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/nuoji     ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n5u6qy/c3_language_at_075_language_tweaks_and/</guid>
      <pubDate>Mon, 01 Sep 2025 16:59:19 GMT</pubDate>
    </item>
    <item>
      <title>AI聊天机器人与工作流与代理</title>
      <link>https://www.reddit.com/r/programming/comments/1n5sr4y/ai_chatbot_vs_workflow_vs_agent/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/mrjoelkemp    href =“ https://medium.com/ai-learnings/chatbot-vs-workflow-vs-agent-8264cc07c7a1”&gt; [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n5sr4y/ai_chatbot_vs_workflow_vs_agent/</guid>
      <pubDate>Mon, 01 Sep 2025 16:05:47 GMT</pubDate>
    </item>
    <item>
      <title>GO中的默认方法·Mcyoung</title>
      <link>https://www.reddit.com/r/programming/comments/1n5s0mb/default_methods_in_go_mcyoung/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/use-monad      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n5s0mb/default_methods_in_go_mcyoung/</guid>
      <pubDate>Mon, 01 Sep 2025 15:38:33 GMT</pubDate>
    </item>
    <item>
      <title>让我们做游戏吧！ 318：库存</title>
      <link>https://www.reddit.com/r/programming/comments/1n5rned/lets_make_a_game_318_inventory/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/apeloverage      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n5rned/lets_make_a_game_318_inventory/</guid>
      <pubDate>Mon, 01 Sep 2025 15:24:22 GMT</pubDate>
    </item>
    <item>
      <title>在并发GO应用程序中保存订单：比较三种方法</title>
      <link>https://www.reddit.com/r/programming/comments/1n5rezx/preserving_order_in_concurrent_go_apps_three/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/breweddoritos      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n5rezx/preserving_order_in_concurrent_go_apps_three/</guid>
      <pubDate>Mon, 01 Sep 2025 15:15:34 GMT</pubDate>
    </item>
    <item>
      <title>PG_CSV：Postgres的灵活CSV处理</title>
      <link>https://www.reddit.com/r/programming/comments/1n5pq7c/pg_csv_flexible_csv_processing_for_postgres/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/steve-chavez       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n5pq7c/pg_csv_flexible_csv_processing_for_postgres/</guid>
      <pubDate>Mon, 01 Sep 2025 14:10:24 GMT</pubDate>
    </item>
    <item>
      <title>你有氛围，你运行吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1n5p7rk/you_vibe_it_you_run_it/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/used_treat_602       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n5p7rk/you_vibe_it_you_run_it/</guid>
      <pubDate>Mon, 01 Sep 2025 13:49:42 GMT</pubDate>
    </item>
    <item>
      <title>SRE成熟的五个阶段：从混乱到卓越运营</title>
      <link>https://www.reddit.com/r/programming/comments/1n5ogrs/the_five_stages_of_sre_maturity_from_chaos_to/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/upeanut      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n5ogrs/the_five_stages_of_sre_maturity_from_chaos_to/</guid>
      <pubDate>Mon, 01 Sep 2025 13:17:52 GMT</pubDate>
    </item>
    <item>
      <title>NIM 2的评论：示例代码的好与坏</title>
      <link>https://www.reddit.com/r/programming/comments/1n5ofkq/a_review_of_nim_2_the_good_bad_with_example_code/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/alicedu06     &lt;a href =“ https://www.reddit.com/r/programming/comments/1n5ofkq/a_review_of_nim_2_the_good_good_bad_with_with_with_with_example_code/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n5ofkq/a_review_of_nim_2_the_good_bad_with_example_code/</guid>
      <pubDate>Mon, 01 Sep 2025 13:16:29 GMT</pubDate>
    </item>
    <item>
      <title>用于代理应用的系统工程</title>
      <link>https://www.reddit.com/r/programming/comments/1n5oesz/systems_engineering_for_agentic_applications/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好。我正在编写用于代理应用程序的书籍系统工程。我今天发表了第一章，涵盖了AI（LLM）基本面，代理和代理应用程序，以及一些探索AI API和简单代理的代码样本（没有框架，只有OpenAi API）  &lt;！ -  sc_on- sc_on-&gt;＆＃32;提交由＆＃32; /u/u/dtornow      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1n5oesz/systems_engineering_for_agentic_applications/</guid>
      <pubDate>Mon, 01 Sep 2025 13:15:36 GMT</pubDate>
    </item>
    </channel>
</rss>