<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sat, 27 Sep 2025 09:17:16 GMT</lastBuildDate>
    <item>
      <title>您认为在项目中始终未充分利用的现代语言功能是什么？</title>
      <link>https://www.reddit.com/r/programming/comments/1nrpi32/what_are_some_modern_language_features_you_feel/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我最近在C＃的背景下经常考虑这一点。我看到许多项目可以通过使用诸如模式匹配和 init 设置器之类的现代功能来大大简化，但是由于某种原因，它们不是许多开发人员的标准工具包的一部分。 对我来说，记录类型是一个巨大的类型。他们已经完全改变了我通过消除所有样板来处理不变的数据对象的方式。 您的主要语言中怎么办？您一直使用什么功能，但似乎被其他人忽略了？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/riturajpokhriyal       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nrpi32/what_are_some_modern_language_features_you_feel/</guid>
      <pubDate>Sat, 27 Sep 2025 07:58:46 GMT</pubDate>
    </item>
    <item>
      <title>我对自己的独立C ++ 2D游戏引擎进行物理，资产渲染和AABB碰撞检测的视频</title>
      <link>https://www.reddit.com/r/programming/comments/1nrojl7/video_in_which_i_go_over_physics_asset_rendering/</link>
      <description><![CDATA[This is a devlog that follows an update to a previous feature that I added to my game Galatic Inc. It involves its own gravity system, its own rendering system, as well it&#39;s own click detection and collision resolution. The following is a link to the github for the project:  https://github.com/natethegrappler    这是实际游戏的下载：    https://natethecoder.itch.ith.io/galatic-inc-inc      &lt;！ -  sc_on-提交由＆＃32; /u/u/uscmassStrike9439      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nrojl7/video_in_which_i_go_over_physics_asset_rendering/</guid>
      <pubDate>Sat, 27 Sep 2025 06:57:44 GMT</pubDate>
    </item>
    <item>
      <title>了解浮点数</title>
      <link>https://www.reddit.com/r/programming/comments/1nriyvn/understanding_floatingpoint_numbers/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/ductuctoryComments      ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nriyvn/understanding_floatingpoint_numbers/</guid>
      <pubDate>Sat, 27 Sep 2025 01:43:18 GMT</pubDate>
    </item>
    <item>
      <title>PGM索引</title>
      <link>https://www.reddit.com/r/programming/comments/1nres1z/the_pgmindex/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nres1z/the_pgmindex/</guid>
      <pubDate>Fri, 26 Sep 2025 22:22:55 GMT</pubDate>
    </item>
    <item>
      <title>迭代字符串和手动解码UTF-8</title>
      <link>https://www.reddit.com/r/programming/comments/1nrerjs/iterating_strings_and_manually_decoding_utf8/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nrerjs/iterating_strings_and_manually_decoding_utf8/</guid>
      <pubDate>Fri, 26 Sep 2025 22:22:19 GMT</pubDate>
    </item>
    <item>
      <title>Go Maps Deep Diev -O（1）表演，溢出和成长背后的秘密</title>
      <link>https://www.reddit.com/r/programming/comments/1nrerby/go_maps_deep_dive_the_secrets_behind_o1/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/ketralnis     [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nrerby/go_maps_deep_dive_the_secrets_behind_o1/</guid>
      <pubDate>Fri, 26 Sep 2025 22:22:03 GMT</pubDate>
    </item>
    <item>
      <title>飞行记录器中的1.25</title>
      <link>https://www.reddit.com/r/programming/comments/1nrepm8/flight_recorder_in_go_125/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis       [commist]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nrepm8/flight_recorder_in_go_125/</guid>
      <pubDate>Fri, 26 Sep 2025 22:19:52 GMT</pubDate>
    </item>
    <item>
      <title>[由reddit删除]</title>
      <link>https://www.reddit.com/r/programming/comments/1nrep5e/removed_by_reddit/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   [由于违反 content Policy Policy Policy Policy 。 ]   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/ketralnis       [commist]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nrep5e/removed_by_reddit/</guid>
      <pubDate>Fri, 26 Sep 2025 22:19:17 GMT</pubDate>
    </item>
    <item>
      <title>每秒都会将数十亿个字符串变成整数，而不会发生冲突</title>
      <link>https://www.reddit.com/r/programming/comments/1nreor8/turning_billions_of_strings_into_integers_every/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nreor8/turning_billions_of_strings_into_integers_every/</guid>
      <pubDate>Fri, 26 Sep 2025 22:18:48 GMT</pubDate>
    </item>
    <item>
      <title>将Fortran F-16模拟器转换为Unity3D</title>
      <link>https://www.reddit.com/r/programming/comments/1nreolg/translating_a_fortran_f16_simulator_to_unity3d/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nreolg/translating_a_fortran_f16_simulator_to_unity3d/</guid>
      <pubDate>Fri, 26 Sep 2025 22:18:36 GMT</pubDate>
    </item>
    <item>
      <title>让我们谈谈在Zig，c，rust和... Go中的对齐，尺寸和包装？</title>
      <link>https://www.reddit.com/r/programming/comments/1nrdhf2/lets_talk_about_alignment_sizing_and_packing_in/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/bluegoliath      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nrdhf2/lets_talk_about_alignment_sizing_and_packing_in/</guid>
      <pubDate>Fri, 26 Sep 2025 21:26:09 GMT</pubDate>
    </item>
    <item>
      <title>从完整的堆栈到完整的团队堆栈</title>
      <link>https://www.reddit.com/r/programming/comments/1nrd0os/from_full_stack_to_full_team_stack/</link>
      <description><![CDATA[]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nrd0os/from_full_stack_to_full_team_stack/</guid>
      <pubDate>Fri, 26 Sep 2025 21:06:10 GMT</pubDate>
    </item>
    <item>
      <title>Ruby Central执行RubyGems GitHub组织和代码存储库的敌对接管</title>
      <link>https://www.reddit.com/r/programming/comments/1nrbh25/ruby_central_executes_hostile_takeover_of_the/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ivosaurus       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nrbh25/ruby_central_executes_hostile_takeover_of_the/</guid>
      <pubDate>Fri, 26 Sep 2025 20:04:29 GMT</pubDate>
    </item>
    <item>
      <title>拨号准时搜索和100％召回</title>
      <link>https://www.reddit.com/r/programming/comments/1nra46w/dialaprecision_prime_search_with_100_recall/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;    摘要 这是一个 Recker-perfect  propeline  pipeline for Prime Number搜索，可以让您可以用两个旋钮拨打精度 scale-aware   Miller – Rabin 基础 K 。步骤1是一个高回调的预滤器（“ 紫色条纹”：数字 n 其中 n mod 6 是1或5）。步骤2添加了反螺旋（由小素数构建的车轮），其过滤强度随着数字 n 的测试而增长。步骤3运行了一条短链单侧测试（它们从不拒绝真正的素数），最后以几个MR基础结束。结果：回忆是设计为100％，精度跳到 97–99％，只有2-3 mr碱基，并且可以任意将接近100％的推动。  1。核心想法  超过3，每个质数都是 6k +/- 1 的形式。我们将其称为紫色条纹。 当数字是小素数的倍数时（例如5、7、11等）。 随着数字变大（大约 1/ln（n））时，将会出现该条带上的复合材料。为了保持高精度，车轮的滤波强度必须通过排除更多小素数的倍数来随着 n 的增加而增加。  这不是新数字理论；这是一种清洁的工程方法，将车轮筛和质数定理结合在一起，使您可以精确控制精确成本和计算成本之间的权衡。 更多地访问上述链接到中等。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/caprazli     [link]   ＆＃32;   [commist]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nra46w/dialaprecision_prime_search_with_100_recall/</guid>
      <pubDate>Fri, 26 Sep 2025 19:11:16 GMT</pubDate>
    </item>
    <item>
      <title>什么都不做的最有效方法[RPCS3]</title>
      <link>https://www.reddit.com/r/programming/comments/1nra28r/the_most_efficient_way_to_do_nothing_rpcs3/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/whatcookie_      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nra28r/the_most_efficient_way_to_do_nothing_rpcs3/</guid>
      <pubDate>Fri, 26 Sep 2025 19:09:16 GMT</pubDate>
    </item>
    </channel>
</rss>