<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Wed, 06 Aug 2025 06:29:22 GMT</lastBuildDate>
    <item>
      <title>工作流引擎设计建议，告诉我您的想法</title>
      <link>https://www.reddit.com/r/programming/comments/1miwv6q/workflow_engine_design_proposal_tell_me_your/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  人类可读形式： https://github.com/event-driven-io/emmett/blob/rfc/001-workflowengine/src/rfc/rfc/001-workflow.md     &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/Adventurous-salt8514        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1miwv6q/workflow_engine_design_proposal_tell_me_your/</guid>
      <pubDate>Wed, 06 Aug 2025 06:05:11 GMT</pubDate>
    </item>
    <item>
      <title>AI vs技术债务：这是一场竞赛吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1mivn0m/ai_vs_technical_debt_is_this_a_race_to_the_bottom/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/Norah_AI   [link]  &lt;a href =“ https://www.reddit.com/r/programming/comments/1mivn0m/ai_vs_technical_debt_is_is_is_a_race_race_race_the_bottom/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mivn0m/ai_vs_technical_debt_is_this_a_race_to_the_bottom/</guid>
      <pubDate>Wed, 06 Aug 2025 04:53:45 GMT</pubDate>
    </item>
    <item>
      <title>与双子座和超级分析的实时跆拳道教练YOLO</title>
      <link>https://www.reddit.com/r/programming/comments/1miu84z/realtime_kickboxing_coaching_with_gemini_and/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/nash0x7e2      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1miu84z/realtime_kickboxing_coaching_with_gemini_and/</guid>
      <pubDate>Wed, 06 Aug 2025 03:37:40 GMT</pubDate>
    </item>
    <item>
      <title>构建了CleanSweep，这是一种免费的跨平台工具，可查找重复的文件和回收磁盘空间（开源，Python）</title>
      <link>https://www.reddit.com/r/programming/comments/1miu19d/built_cleansweep_a_free_crossplatform_tool_to/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好！我构建了 CleanSweep ，这是一种跨平台Python实用程序，可帮助您整理磁盘驱动器。它找到重复的文件，报告最大的空间猪，并按文件类型总结存储。没有云，没有跟踪 - 所有东西都在当地运行。我们正在添加感知图像哈希和GUI。欢迎反馈和贡献！提交由＆＃32; /u/u/u/ecletonic-salad9608       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1miu19d/built_cleansweep_a_free_crossplatform_tool_to/</guid>
      <pubDate>Wed, 06 Aug 2025 03:27:49 GMT</pubDate>
    </item>
    <item>
      <title>将文字添加到您的ebitengine游戏中</title>
      <link>https://www.reddit.com/r/programming/comments/1mit8cb/adding_text_to_your_ebitengine_game/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/tslocum      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mit8cb/adding_text_to_your_ebitengine_game/</guid>
      <pubDate>Wed, 06 Aug 2025 02:47:59 GMT</pubDate>
    </item>
    <item>
      <title>实习管理网站</title>
      <link>https://www.reddit.com/r/programming/comments/1mishni/internship_management_website/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  你好reddit。 这是我的第一个完整的堆栈项目，与我在大学的4位同学。 The project is a semester final work of the 1st year. This is a website where you can apply for internships, create, and manage them. I would be glad to hear your criticism and be useful for beginners Frontend: HTML, CSS and JavaScript Backend: Express.js, Node.js Database: Mysql &lt;!-- sc_on-&gt;＆＃32;提交由＆＃32; /u/u/crazyffester     [link]&gt; [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mishni/internship_management_website/</guid>
      <pubDate>Wed, 06 Aug 2025 02:12:35 GMT</pubDate>
    </item>
    <item>
      <title>Openai刚刚发布了自GPT-2以来的首个开源车型GPT-Oss。就像他们说的那样好吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1miqvkp/openai_just_released_gptoss_its_first_opensource/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/thereaiironman       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1miqvkp/openai_just_released_gptoss_its_first_opensource/</guid>
      <pubDate>Wed, 06 Aug 2025 00:56:48 GMT</pubDate>
    </item>
    <item>
      <title>开源和Openai的回报</title>
      <link>https://www.reddit.com/r/programming/comments/1mip8bn/open_source_and_openais_return/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/nalaginrut   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mip8bn/open_source_and_openais_return/</guid>
      <pubDate>Tue, 05 Aug 2025 23:43:03 GMT</pubDate>
    </item>
    <item>
      <title>封装不是Java的错（Python也需要它）</title>
      <link>https://www.reddit.com/r/programming/comments/1mip429/encapsulation_isnt_javas_fault_and_python_needs/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   python中的封装是经常被刷掉的主题之一，要么是不必要的样板，要么是从Java和C ++等静态类型的语言中进行的行李。在许多Python团队中，它被视为可选的，或更糟糕的是无关紧要。 ，但是这种随意的态度具有成本。 随着python在企业软件中扮演更大的角色，尤其是随着AI的兴起，尤其是随着AI的兴起，更多的团队正在建立更大，更复杂的系统。如果没有适当的封装，代码库的一部分的内部变化可能会泄漏出来并为其他所有人打破事情。很难理解代码界限，更难进行协作，并且很难在不踩到彼此的脚趾的情况下快速移动。 在这篇文章中，我们将讨论为什么封装在Python 中仍然很重要，为什么它变得越来越重要，为什么它会变得越来越重要，以及如何在这种情况下以这种方式构成这种态度，并且如何使您的语言和pophy          &lt;这不是“如何模仿python”的Java访问修饰符之一。帖子。我们的进展要深。  ----   do注意： 没有在语言级别上执行访问修饰符和根本没有访问修饰符的访问。     &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/last_difference9410     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mip429/encapsulation_isnt_javas_fault_and_python_needs/</guid>
      <pubDate>Tue, 05 Aug 2025 23:38:02 GMT</pubDate>
    </item>
    <item>
      <title>故意违反开发人员经验的休息 - 案例研究</title>
      <link>https://www.reddit.com/r/programming/comments/1miogsp/deliberately_violating_rest_for_developer/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  构建API后，我决定了我年轻的自我会讨厌：使用get tects untuts untutate untut untate untate state。这就是原因。  上下文  我们正在构建 superdoc    API组件处理文档工具（例如DOCX到PDF等），没有完整的编辑器。技术挑战不是API本身，而是入职。 SDK或Craft Curl请求 第一次成功呼叫  每个步骤都会失去开发人员。漏斗是残酷的。  我们的解决方案     curl; api.superdoc.dev/v1/auth/registh/register？email = dev@company.com＆quot; ＃查看电子邮件6位代码curl“ api.superdoc.dev/v1/auth/verify？email = dev@company.com&amp; code = 435678＆quot; ＃将API键返回为纯文本  两个获取。没有JSON。没有验证标题。没有SDK。 Under 60 seconds to working API key. The Architectural Sins  GET /register creates an account - Violates REST, not idempotent Plain text responses - No content negotiation, no structure Sensitive data in URLs - Email and codes在查询字符串中    PONIFIFIAD   经过多年的“适当”之后API设计，我已经观察到：  开发人员在2-3分钟的Windows  第一次体验中评估API比功能 完美的休息更能确定采用率 如果没有人使用您的API  文档是设计失败    我们保持了实际的API休息。 Only onboarding breaks conventions. The Philosophy There&#39;s a difference between:  What&#39;s correct (REST principles) What&#39;s pragmatic (what actually works) What&#39;s valuable (what developers need)  We optimized for pragmatic value over正确性。  对社区的问题   何时违反确定的模式是合理的？ 您如何在建筑纯度与用户经验之间取得平衡？ 我们是为不良设计而意加现实的借口，还是确认现实或确认现实？您是否做出了类似的权衡？您的行在哪里？ （实施注意：限制限制，代码在15分钟内到期，从日志中过滤电子邮件，实际API使用适当的休息/json）   编辑：对那些询问的人， github repo    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/caiopizzol       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1miogsp/deliberately_violating_rest_for_developer/</guid>
      <pubDate>Tue, 05 Aug 2025 23:10:33 GMT</pubDate>
    </item>
    <item>
      <title>PHP：使用中间件而不是MVC -Laminas项目的好处</title>
      <link>https://www.reddit.com/r/programming/comments/1mioaa2/php_benefits_of_using_middleware_over_mvc_laminas/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/arhimedosin     [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mioaa2/php_benefits_of_using_middleware_over_mvc_laminas/</guid>
      <pubDate>Tue, 05 Aug 2025 23:02:56 GMT</pubDate>
    </item>
    <item>
      <title>我如何制作3D游戏</title>
      <link>https://www.reddit.com/r/programming/comments/1mil187/how_i_make_3d_games/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [commist]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mil187/how_i_make_3d_games/</guid>
      <pubDate>Tue, 05 Aug 2025 20:52:22 GMT</pubDate>
    </item>
    <item>
      <title>如何在GO中实现服务器量事件</title>
      <link>https://www.reddit.com/r/programming/comments/1mikws0/how_to_implement_serversent_events_in_go/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  您是否经常使用SSE？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/der_gopher      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mikws0/how_to_implement_serversent_events_in_go/</guid>
      <pubDate>Tue, 05 Aug 2025 20:47:44 GMT</pubDate>
    </item>
    <item>
      <title>只是不要</title>
      <link>https://www.reddit.com/r/programming/comments/1mikbdz/just_dont/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/aartaka      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mikbdz/just_dont/</guid>
      <pubDate>Tue, 05 Aug 2025 20:24:59 GMT</pubDate>
    </item>
    <item>
      <title>我们如何构建世界最快的VIN解码器</title>
      <link>https://www.reddit.com/r/programming/comments/1mijrc2/how_we_built_the_worlds_fastest_vin_decoder/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/cardogio       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mijrc2/how_we_built_the_worlds_fastest_vin_decoder/</guid>
      <pubDate>Tue, 05 Aug 2025 20:04:20 GMT</pubDate>
    </item>
    </channel>
</rss>