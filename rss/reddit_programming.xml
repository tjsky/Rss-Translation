<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Thu, 24 Apr 2025 15:18:03 GMT</lastBuildDate>
    <item>
      <title>主题：介绍AEthernet v0.1- ai -native Web的协议愿景</title>
      <link>https://www.reddit.com/r/programming/comments/1k6upag/subject_introducing_aethernet_v01_a_protocol/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我们正在构建 aethernet ，这是新协议堆栈（AEP）和内容格式（OML）的愿景（OML），专门为AI代理设计，用于在线交互，协作和理性。当前的网络是为人类（HTML/HTTP）构建的； AEthernet的目标是成为AI的语义，可操作的层。 简单的Python Cli创建/验证基本OML文件。 演示代理，读取OML的“网站”列出了它的方法，模拟了一个方法，并将其登录一个，并将其记录到文件（原始内存）。    ，我们相信超级早期，但我们相信对代理的网络需要快速生长。我们正在寻找有关核心概念，规格和潜在用例的反馈。这是否解决了您遇到的问题？缺少什么？ 查看如何运行演示的读数。很好奇听到您的想法！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/massive-ad-4974       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k6upag/subject_introducing_aethernet_v01_a_protocol/</guid>
      <pubDate>Thu, 24 Apr 2025 15:13:15 GMT</pubDate>
    </item>
    <item>
      <title>软件工程师的专业技能•Charles Humble＆Trisha Gee</title>
      <link>https://www.reddit.com/r/programming/comments/1k6unma/professional_skills_for_software_engineers/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/goto-con       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k6unma/professional_skills_for_software_engineers/</guid>
      <pubDate>Thu, 24 Apr 2025 15:11:16 GMT</pubDate>
    </item>
    <item>
      <title>沙盒MCP：启用LLMS可以安全地运行任何代码</title>
      <link>https://www.reddit.com/r/programming/comments/1k6uhjo/sandbox_mcp_enable_llms_to_run_any_code_safely/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/unungi_bass       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k6uhjo/sandbox_mcp_enable_llms_to_run_any_code_safely/</guid>
      <pubDate>Thu, 24 Apr 2025 15:04:09 GMT</pubDate>
    </item>
    <item>
      <title>如果我们可以从头开始重建Kafka怎么办？</title>
      <link>https://www.reddit.com/r/programming/comments/1k6u7my/what_if_we_could_rebuild_kafka_from_scratch/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/rmoff      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k6u7my/what_if_we_could_rebuild_kafka_from_scratch/</guid>
      <pubDate>Thu, 24 Apr 2025 14:53:18 GMT</pubDate>
    </item>
    <item>
      <title>VS代码AI |入门网页设计| HTML CSS和JavaScript</title>
      <link>https://www.reddit.com/r/programming/comments/1k6ttfc/vs_code_ai_getting_started_web_design_html_css/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/monsterboz     &lt;a href =“ https://www.reddit.com/r/programming/comments/1k6ttfc/vs_code_ai_ai_getting_starte_started_web_design_html_html_css/”]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k6ttfc/vs_code_ai_getting_started_web_design_html_css/</guid>
      <pubDate>Thu, 24 Apr 2025 14:36:54 GMT</pubDate>
    </item>
    <item>
      <title>我们如何使我们的光学角色识别（OCR）代码更加准确？</title>
      <link>https://www.reddit.com/r/programming/comments/1k6tn6x/how_we_made_our_optical_character_recognition_ocr/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ally_piccolo5736        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k6tn6x/how_we_made_our_optical_character_recognition_ocr/</guid>
      <pubDate>Thu, 24 Apr 2025 14:29:31 GMT</pubDate>
    </item>
    <item>
      <title>在10分钟内产生100万个PDF</title>
      <link>https://www.reddit.com/r/programming/comments/1k6tm1w/generating_1_million_pdfs_in_10_minutes/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/rkstgr      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k6tm1w/generating_1_million_pdfs_in_10_minutes/</guid>
      <pubDate>Thu, 24 Apr 2025 14:28:11 GMT</pubDate>
    </item>
    <item>
      <title>带有Springboot的SMTP（带有StartTLS）实现</title>
      <link>https://www.reddit.com/r/programming/comments/1k6snz2/smtp_with_starttls_implementation_with_springboot/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  ，所以我最近的任务是设置至少一个基本的SMTP继电器。我选择了Spring Boot，最终将Apache James包裹起来完成工作。 一路上，我意识到，代码的某些部分可以重新使用为非常有用的东西：轻巧 smtp honeypot 用于捕获未经许可或恶意的交通或恶意交通。发现它可能会帮助其他在同一空间工作的人。 代码可以在此处找到：  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/docaicdev       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k6snz2/smtp_with_starttls_implementation_with_springboot/</guid>
      <pubDate>Thu, 24 Apr 2025 13:48:29 GMT</pubDate>
    </item>
    <item>
      <title>深入分析 - 深入研究的分析类似物</title>
      <link>https://www.reddit.com/r/programming/comments/1k6siij/deep_analysis_the_analytics_analogue_to_deep/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://www.firebird-technologies.com/p/deep-analysis-the--analytics-analogue”&gt; [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k6siij/deep_analysis_the_analytics_analogue_to_deep/</guid>
      <pubDate>Thu, 24 Apr 2025 13:41:50 GMT</pubDate>
    </item>
    <item>
      <title>ESERDE：不要在第一个避免错误 - 主机上停止</title>
      <link>https://www.reddit.com/r/programming/comments/1k6qt3x/eserde_dont_stop_at_the_first_deserialization/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/pmz      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k6qt3x/eserde_dont_stop_at_the_first_deserialization/</guid>
      <pubDate>Thu, 24 Apr 2025 12:21:17 GMT</pubDate>
    </item>
    <item>
      <title>在800行代码中以Rust制造的网络框架，没有依赖关系</title>
      <link>https://www.reddit.com/r/programming/comments/1k6px9m/a_web_framework_made_in_rust_in_800_lines_of_code/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/liveduo      &lt;a href =“ https://www.reddit.com/r/programming/comments/1k6px9m/a_web_framework_made_in_in_in_in_in_800_800_lines_of_of_code/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k6px9m/a_web_framework_made_in_rust_in_800_lines_of_code/</guid>
      <pubDate>Thu, 24 Apr 2025 11:32:55 GMT</pubDate>
    </item>
    <item>
      <title>🚀用于管理游牧群集的新MCP工具</title>
      <link>https://www.reddit.com/r/programming/comments/1k6pkfx/new_mcp_tool_for_managing_nomad_clusters/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好， 我刚刚在github：mcp-nomad上发布了一个新项目。这是用GO编写的MCP（模型上下文协议）服务器，旨在与Hashicorp Nomad进行交互。它使您可以直接从与Claude等LLM兼容的接口轻松管理和监视游牧群集。 您可以在此处找到完整的存储库： https://github.com/kocierik/kocierik/kocierik/mcp-nomad      分配日志 重新启动作业 探索节点和群集指标   🚀如何尝试它： 您可以轻松地使用Docker或使用Claude将其与Claude集成的配置轻松地运行服务器，或者像claude一样集成了claude。仍处于早期阶段，因此欢迎任何反馈。如果您有兴趣做出贡献或有疑问，请随时接触！ 感谢您的关注，我希望您发现它有用！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/deaindworkerChoice68      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k6pkfx/new_mcp_tool_for_managing_nomad_clusters/</guid>
      <pubDate>Thu, 24 Apr 2025 11:12:38 GMT</pubDate>
    </item>
    <item>
      <title>GPU编程的新时代：NVIDIA终于在CUDA中增加了本地Python的支持</title>
      <link>https://www.reddit.com/r/programming/comments/1k6pgf2/a_new_era_for_gpu_programming_nvidia_finally_adds/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/9millionrainydays_91       &lt;a href =“ https://www.reddit.com/r/programming/comments/1k6pgf2/a_new_new_for_for_for_for_gpu_gpu_programming_nvidia_finally_adds/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k6pgf2/a_new_era_for_gpu_programming_nvidia_finally_adds/</guid>
      <pubDate>Thu, 24 Apr 2025 11:06:04 GMT</pubDate>
    </item>
    <item>
      <title>“为什么软件开发人员不断燃烧”</title>
      <link>https://www.reddit.com/r/programming/comments/1k6peto/why_software_devs_keep_burning_out_by/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/beepyjoop      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k6peto/why_software_devs_keep_burning_out_by/</guid>
      <pubDate>Thu, 24 Apr 2025 11:03:30 GMT</pubDate>
    </item>
    <item>
      <title>Fixie -AI驱动失败的构建分析仪，评论者和固定器</title>
      <link>https://www.reddit.com/r/programming/comments/1k6lu6u/fixie_ai_powered_failed_build_analyzer_commenter/</link>
      <description><![CDATA[I built a GitHub App called Fixie that automatically watches for failed CI builds, reads the logs, figures out why they broke (using GPT-4), and opens a pull request with a suggested fix.  Supports any public repo Uses regex + LLM to find the root cause Auto-generates patches Opens a PR or comments on existing ones No config, just install and let it work  Think of it like Dependabot—but instead of just bumping versions, it actually debugs your CI. Let me know what you think or if you想要在您的仓库上对其进行测试！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/dvnci1452       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k6lu6u/fixie_ai_powered_failed_build_analyzer_commenter/</guid>
      <pubDate>Thu, 24 Apr 2025 06:53:25 GMT</pubDate>
    </item>
    </channel>
</rss>