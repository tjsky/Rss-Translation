<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Mon, 12 May 2025 12:31:37 GMT</lastBuildDate>
    <item>
      <title>集中化HTTP错误处理</title>
      <link>https://www.reddit.com/r/programming/comments/1kkr9mb/centralize_http_error_handling_in_go/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/softwarecitadel      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkr9mb/centralize_http_error_handling_in_go/</guid>
      <pubDate>Mon, 12 May 2025 12:29:04 GMT</pubDate>
    </item>
    <item>
      <title>16年的CloudWatch和........邻里发生了变化吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1kkqtmb/16_years_of_cloudwatch_and_has_the_neighbourhood/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/elizobserves     [link]   ＆＃32;   [注释]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkqtmb/16_years_of_cloudwatch_and_has_the_neighbourhood/</guid>
      <pubDate>Mon, 12 May 2025 12:05:52 GMT</pubDate>
    </item>
    <item>
      <title>实现Graylog的根本简单替代方案</title>
      <link>https://www.reddit.com/r/programming/comments/1kkqnx9/implementing_a_radically_simple_alternative_to/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/rflurker       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkqnx9/implementing_a_radically_simple_alternative_to/</guid>
      <pubDate>Mon, 12 May 2025 11:58:06 GMT</pubDate>
    </item>
    <item>
      <title>GTA 6完全在X86组件中手工编码？</title>
      <link>https://www.reddit.com/r/programming/comments/1kkqj7d/gta_6_coded_entirely_in_x86_assembly_by_hand/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  您可能听说过即将推出的视频游戏《侠盗猎车手6》。有传言说，开发人员正在手工编码它，该线路是线条，for Line for Line。这样，他们就可以从控制台中获得最大值。这也是为什么他们要花13年才能完成的原因。这有多大的可能性？有可能吗？我本人不是程序员。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/stdlib_h     [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkqj7d/gta_6_coded_entirely_in_x86_assembly_by_hand/</guid>
      <pubDate>Mon, 12 May 2025 11:51:03 GMT</pubDate>
    </item>
    <item>
      <title>平台工程：演变还是重塑DevOps？</title>
      <link>https://www.reddit.com/r/programming/comments/1kkqbc2/platform_engineering_evolution_or_just_a/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/agbell      [commist]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkqbc2/platform_engineering_evolution_or_just_a/</guid>
      <pubDate>Mon, 12 May 2025 11:38:54 GMT</pubDate>
    </item>
    <item>
      <title>Astronoby v0.7.0</title>
      <link>https://www.reddit.com/r/programming/comments/1kkpdaj/astronoby_v070/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/rhannequin      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkpdaj/astronoby_v070/</guid>
      <pubDate>Mon, 12 May 2025 10:43:32 GMT</pubDate>
    </item>
    <item>
      <title>Tanstack查询RFC：统一的命令查询方法</title>
      <link>https://www.reddit.com/r/programming/comments/1kkobvz/tanstack_query_rfc_unified_imperative_query/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/um commination-plum-5970       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkobvz/tanstack_query_rfc_unified_imperative_query/</guid>
      <pubDate>Mon, 12 May 2025 09:35:42 GMT</pubDate>
    </item>
    <item>
      <title>光标如何索引代码库（使用默克尔树）</title>
      <link>https://www.reddit.com/r/programming/comments/1kkmjr4/how_cursor_indexes_codebases_using_merkle_trees/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/rtzon      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkmjr4/how_cursor_indexes_codebases_using_merkle_trees/</guid>
      <pubDate>Mon, 12 May 2025 07:25:12 GMT</pubDate>
    </item>
    <item>
      <title>为什么构建软件框架</title>
      <link>https://www.reddit.com/r/programming/comments/1kkj5vb/why_build_software_frameworks/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/n1ghtcod3r      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkj5vb/why_build_software_frameworks/</guid>
      <pubDate>Mon, 12 May 2025 03:47:02 GMT</pubDate>
    </item>
    <item>
      <title>📦比较静态二进制尺寸和“ Hello，World！”的记忆。使用❄️NIX +薄片跨语言的程序。</title>
      <link>https://www.reddit.com/r/programming/comments/1kkivkq/comparing_static_binary_sizes_memory_of_hello/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/rezigned      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkivkq/comparing_static_binary_sizes_memory_of_hello/</guid>
      <pubDate>Mon, 12 May 2025 03:30:41 GMT</pubDate>
    </item>
    <item>
      <title>libcello-一个现代化C的很酷的项目</title>
      <link>https://www.reddit.com/r/programming/comments/1kkhxcp/libcello_a_cool_project_to_modernize_c/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  不是我的。我一直想对此做些事情，但是它从未与个人或专业匹配。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/esdraelon      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkhxcp/libcello_a_cool_project_to_modernize_c/</guid>
      <pubDate>Mon, 12 May 2025 02:37:33 GMT</pubDate>
    </item>
    <item>
      <title>Rust Devs认为我们是绝望的。让我们证明它们是错误的（使用C ++内存泄漏）！</title>
      <link>https://www.reddit.com/r/programming/comments/1kkhgtq/rust_devs_think_were_hopeless_lets_prove_them/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://www.babaei.net/blog/rust-devs-think-we-we-are-are-hopeless-rebless-lesles-prove-them-withem-with-with-with-with-with-with-cpp-memory-leaks/#a-_crtdump-mememoryleaks-dump-mememoryleaks-1-  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkhgtq/rust_devs_think_were_hopeless_lets_prove_them/</guid>
      <pubDate>Mon, 12 May 2025 02:12:16 GMT</pubDate>
    </item>
    <item>
      <title>第40天：您在JavaScript中使用`json.stringify（）吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1kkha8d/day_40_are_you_underusing_jsonstringify_in/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/myssiriouseye8494     [link]        [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkha8d/day_40_are_you_underusing_jsonstringify_in/</guid>
      <pubDate>Mon, 12 May 2025 02:02:25 GMT</pubDate>
    </item>
    <item>
      <title>S4F3-C0D3S：恢复代码管理器</title>
      <link>https://www.reddit.com/r/programming/comments/1kkfy14/s4f3c0d3s_recovery_codes_manager/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;     s4f3-c0d3s 是一个安全的，加密的，离线的，无云的，免费的，免费的，开放式的恢复代码（2FA）管理器，没有订阅，没有数据收集，没有数据收集，交叉平台，和Port-Platform和Port-P&gt;       s4f3-c0d3s 是源于对储存恢复代码（2FA）的真实和个人需求诞生的。很多时候，我们最终将这些敏感的信息保存在记事本，屏幕截图，照片或未受保护的文件中，这使我们的数字安全处于风险状态。  尽管密码 bite  strong&gt; strong&gt; strong&gt; strong&gt; strong&gt; strong  “不要将所有鸡蛋都放在一个篮子里； 提醒我们，将不同类型的敏感数据（例如2FA恢复代码）分开很重要。使用 S4F3-C0D3S ，您可以将此信息存储在专用的加密保险库中，从而降低了一次损害多个安全层的风险。     &lt;！ -  sc_on-&gt;＆&gt; 32;提交由＆＃32; /u/u/fajremvp      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkfy14/s4f3c0d3s_recovery_codes_manager/</guid>
      <pubDate>Mon, 12 May 2025 00:50:02 GMT</pubDate>
    </item>
    <item>
      <title>从工程师到领导角色成长时的7个常见错误</title>
      <link>https://www.reddit.com/r/programming/comments/1kkao8a/7_common_mistakes_when_growing_from_engineer_to_a/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/gregorojstersek      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1kkao8a/7_common_mistakes_when_growing_from_engineer_to_a/</guid>
      <pubDate>Sun, 11 May 2025 20:35:06 GMT</pubDate>
    </item>
    </channel>
</rss>