<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Tue, 14 Oct 2025 21:18:14 GMT</lastBuildDate>
    <item>
      <title>干净的承诺如何让公关审查变得更容易</title>
      <link>https://www.reddit.com/r/programming/comments/1o6rbo1/how_clean_commits_make_pr_reviews_easier/</link>
      <description><![CDATA[众所周知，审查拉取请求非常耗时，而且非常重要。因此，加快审核速度并实现更高质量的审核应该成为所有开发人员的一项关键技能。然而，我发现绝大多数 PR 对审阅者非常不友好。 在 我写的这篇文章 一些 git 命令可以帮助您制作更容易审查的 PR。经过一些练习，最终会相当快地执行，您的整个团队都会感谢您。   由   提交/u/fogeyman   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o6rbo1/how_clean_commits_make_pr_reviews_easier/</guid>
      <pubDate>Tue, 14 Oct 2025 20:48:38 GMT</pubDate>
    </item>
    <item>
      <title>Cap'n Web：用于浏览器和 Web 服务器的新 RPC 系统</title>
      <link>https://www.reddit.com/r/programming/comments/1o6qg6y/capn_web_a_new_rpc_system_for_browsers_and_web/</link>
      <description><![CDATA[ 由   提交 /u/Happy_Junket_9540   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o6qg6y/capn_web_a_new_rpc_system_for_browsers_and_web/</guid>
      <pubDate>Tue, 14 Oct 2025 20:16:14 GMT</pubDate>
    </item>
    <item>
      <title>掌握 SQL 触发器：嵌套、递归和实际用例</title>
      <link>https://www.reddit.com/r/programming/comments/1o6q3gm/mastering_sql_triggers_nested_recursive_realworld/</link>
      <description><![CDATA[触发器始终是一个永远不会过时的有趣话题，您认为有没有任何新的 AI 🤖 工具可以使嵌套触发器变得更容易？    由   提交/u/KeyCandy4665   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o6q3gm/mastering_sql_triggers_nested_recursive_realworld/</guid>
      <pubDate>Tue, 14 Oct 2025 20:02:50 GMT</pubDate>
    </item>
    <item>
      <title>谈论安全问题</title>
      <link>https://www.reddit.com/r/programming/comments/1o6ouir/yapping_about_security/</link>
      <description><![CDATA[如果我们有不可利用的安全缓解措施，Rust 真的会在未来比 C 或 C++ 带来任何重大好处吗？不久前，缓冲区溢出就足以让你实现 RCE，但现在在大多数现代系统上这实际上是不可能的。现在想象一下 40 年后。 想象一个硬件开发人员专注于为漏洞利用类提供更好的物理缓解措施的世界。物理缓解措施比软件解决方案更快，并且使大多数漏洞利用类别几乎不可能实现。 因此，也许我们应该更多地专注于创建为开发人员提供更好的开发工具的语言，就像我听说过的 Jai 或 Go 一样。  无论如何，你会做什么🤔？   由   提交/u/Exciting-Raisin3611   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o6ouir/yapping_about_security/</guid>
      <pubDate>Tue, 14 Oct 2025 19:16:36 GMT</pubDate>
    </item>
    <item>
      <title>PHP（带有 JIT）与 Python 3.14 - 我运行了 1000 万次循环测试！</title>
      <link>https://www.reddit.com/r/programming/comments/1o6o2i4/php_with_jit_vs_python_314_i_ran_a_10_million/</link>
      <description><![CDATA[我想知道 PHP 8.2（带 JIT）与 Python 3.14 的原始性能相比如何 - 因此我编写了一个快速基准测试来看看哪个循环更快。 测试代码： PHP： $start = microtime(true); $总和= 0； for ($i = 0; $i &lt; 10000000; $i++) { $sum += $i; $end = microtime(true); $持续时间= $结束 - $开始； echo &quot;结果: $sum\n&quot;; echo“所用时间：” 。回合（$持续时间，4）。 ”秒\n”;  Python: 导入时间 start = time.time() sum_value = 0 for i in range(10000000): sum_value += i end = time.time()uration = end - start print(f&quot;结果: {sum_value}&quot;) print(f&quot;所用时间: {duration:.4f} 秒”)  结果： PHP 8.2（启用 JIT）：~0.13 秒 Python 3.14：~1.22 秒 在纯计算周期中，这比 PHP 快 3-4 倍！ 令人惊讶的是，有多少人仍然认为 PHP“慢”。 当然， 这只是一个微基准 - 当您使用 NumPy、Pandas 或 AI 工作负载时，Python 仍然取得了巨大成功，而 PHP 在 Web 后端和 API 密集型系统中占据主导地位。   由   提交/u/No_Bar1628  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o6o2i4/php_with_jit_vs_python_314_i_ran_a_10_million/</guid>
      <pubDate>Tue, 14 Oct 2025 18:47:25 GMT</pubDate>
    </item>
    <item>
      <title>调试缩小的 JavaScript 是不可能的。以下是我们如何通过 Sentry 和 Vite 轻松实现这一点</title>
      <link>https://www.reddit.com/r/programming/comments/1o6ntmf/debugging_minified_javascript_is_impossible_heres/</link>
      <description><![CDATA[ 由   提交/u/kostakos14  [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o6ntmf/debugging_minified_javascript_is_impossible_heres/</guid>
      <pubDate>Tue, 14 Oct 2025 18:37:46 GMT</pubDate>
    </item>
    <item>
      <title>机器人正在执行我们的分析 JavaScript |恢复老式的访问日志记录</title>
      <link>https://www.reddit.com/r/programming/comments/1o6nh2n/bots_are_executing_our_analytics_javascript_bring/</link>
      <description><![CDATA[ 由   提交/u/kixxauth   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o6nh2n/bots_are_executing_our_analytics_javascript_bring/</guid>
      <pubDate>Tue, 14 Oct 2025 18:24:33 GMT</pubDate>
    </item>
    <item>
      <title>通过函数式和面向对象编程实现更简单的构建工具，Scala Workshop 2025</title>
      <link>https://www.reddit.com/r/programming/comments/1o6n8lv/simpler_build_tools_with_functional_and_object/</link>
      <description><![CDATA[ 由   提交/u/lihaoyi  [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o6n8lv/simpler_build_tools_with_functional_and_object/</guid>
      <pubDate>Tue, 14 Oct 2025 18:15:54 GMT</pubDate>
    </item>
    <item>
      <title>为什么你的老板不担心人工智能——“你就不能把它关掉吗？”</title>
      <link>https://www.reddit.com/r/programming/comments/1o6n17u/why_your_boss_isnt_worried_about_ai_cant_you_just/</link>
      <description><![CDATA[ 由   提交 /u/Beyarkay   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o6n17u/why_your_boss_isnt_worried_about_ai_cant_you_just/</guid>
      <pubDate>Tue, 14 Oct 2025 18:08:24 GMT</pubDate>
    </item>
    <item>
      <title>反思前 6 个月的重写（文本编辑器）</title>
      <link>https://www.reddit.com/r/programming/comments/1o6m0jc/reflecting_on_the_first_6_months_of_a_rewrite/</link>
      <description><![CDATA[ 由   提交 /u/levodelellis   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o6m0jc/reflecting_on_the_first_6_months_of_a_rewrite/</guid>
      <pubDate>Tue, 14 Oct 2025 17:32:20 GMT</pubDate>
    </item>
    <item>
      <title>氚|关于 Rust 故障的想法</title>
      <link>https://www.reddit.com/r/programming/comments/1o6kzd0/tritium_ideas_on_glitching_in_rust/</link>
      <description><![CDATA[ 由   提交/u/urandomd  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o6kzd0/tritium_ideas_on_glitching_in_rust/</guid>
      <pubDate>Tue, 14 Oct 2025 16:54:55 GMT</pubDate>
    </item>
    <item>
      <title>Go 响应式编程简介</title>
      <link>https://www.reddit.com/r/programming/comments/1o6ieoy/introducing_reactive_programming_for_go/</link>
      <description><![CDATA[开始编写声明式管道： observable := ro.Pipe( ro.RangeWithInterval(0, 10, 1*time.Second), ro.Filter(func(x int) bool { return x%2 == 0 }), ro.Map(func(x int) string { return fmt.Sprintf(“偶数-%d”, x) }), )    由   提交/u/samuelberthe  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o6ieoy/introducing_reactive_programming_for_go/</guid>
      <pubDate>Tue, 14 Oct 2025 15:20:21 GMT</pubDate>
    </item>
    <item>
      <title>到 2025 年底，reCAPTCHA 迁移到 Google Cloud：您需要做什么</title>
      <link>https://www.reddit.com/r/programming/comments/1o6gkyj/recaptcha_migration_to_google_cloud_by_the_end_of/</link>
      <description><![CDATA[ 由   提交/u/ribtoks  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o6gkyj/recaptcha_migration_to_google_cloud_by_the_end_of/</guid>
      <pubDate>Tue, 14 Oct 2025 14:10:52 GMT</pubDate>
    </item>
    <item>
      <title>🎙️ Nat​​han Ladd：不懈的改进和忽视的代价</title>
      <link>https://www.reddit.com/r/programming/comments/1o6eviy/nathan_ladd_relentless_improvement_and_the_cost/</link>
      <description><![CDATA[ 由   提交 /u/robbyrussell   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o6eviy/nathan_ladd_relentless_improvement_and_the_cost/</guid>
      <pubDate>Tue, 14 Oct 2025 13:01:33 GMT</pubDate>
    </item>
    <item>
      <title>如何利用人工智能工具提高管理影响力</title>
      <link>https://www.reddit.com/r/programming/comments/1o6erxo/how_to_boost_your_management_impact_with_ai_tools/</link>
      <description><![CDATA[ 由   提交/u/HDev-   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o6erxo/how_to_boost_your_management_impact_with_ai_tools/</guid>
      <pubDate>Tue, 14 Oct 2025 12:57:25 GMT</pubDate>
    </item>
    </channel>
</rss>