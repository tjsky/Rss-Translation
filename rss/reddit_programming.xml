<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Fri, 19 Sep 2025 15:18:15 GMT</lastBuildDate>
    <item>
      <title>与角度的微观前端：实用的多repo指南</title>
      <link>https://www.reddit.com/r/programming/comments/1nl6d73/micro_frontends_with_angular_practical_multirepo/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我最近写了一个博客，分解了我在没有webpack的情况下使用本机联盟在没有webpack的情况下构建微观前端的。它涵盖了设置，共享服务和实际示例。会喜欢来自角度社区的反馈！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/iammidhul      ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nl6d73/micro_frontends_with_angular_practical_multirepo/</guid>
      <pubDate>Fri, 19 Sep 2025 15:17:28 GMT</pubDate>
    </item>
    <item>
      <title>LLMS为什么设计平庸的建筑？</title>
      <link>https://www.reddit.com/r/programming/comments/1nl5rna/why_do_llms_design_mediocre_architecture/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ashvar       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nl5rna/why_do_llms_design_mediocre_architecture/</guid>
      <pubDate>Fri, 19 Sep 2025 14:54:58 GMT</pubDate>
    </item>
    <item>
      <title>通过Github雇用</title>
      <link>https://www.reddit.com/r/programming/comments/1nl4ba0/hired_through_github/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/garethx       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nl4ba0/hired_through_github/</guid>
      <pubDate>Fri, 19 Sep 2025 13:58:03 GMT</pubDate>
    </item>
    <item>
      <title>Meta CTO解释了其令人尴尬的智能眼镜演示失败的原因</title>
      <link>https://www.reddit.com/r/programming/comments/1nl421b/meta_cto_explains_the_cause_of_its_embarrassing/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/garethx      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nl421b/meta_cto_explains_the_cause_of_its_embarrassing/</guid>
      <pubDate>Fri, 19 Sep 2025 13:47:36 GMT</pubDate>
    </item>
    <item>
      <title>编程量子计算机（代数逻辑）要求您“忘记”古典编程（布尔逻辑）</title>
      <link>https://www.reddit.com/r/programming/comments/1nl3b8e/programming_quantum_computers_algebraic_logic/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿， 我只为这个社区获得了游戏。我想与您分享最新的 Quantum Odyssey 更新（我是Creator，Ama ..），我们自从上次帖子以来就完成了游戏状态，以总结游戏状态。谢谢大家都很好地收到了这款游戏，您的所有反馈都帮助了今天。这个项目的成长是因为这个社区存在。 简而言之，这是一种可视化和播放的交互式方式，可以在“量子逻辑”中使用所有可以完成的Hilbert空间。几乎所有量子算法都可以内置和可视化。我创建的学习模块涵盖了所有内容，该工具的目的是通过将视觉逻辑连接到术语和一般线性代数内容来使每个人学习量子。 游戏在平滑学习曲线并确保完全自由错误和自由崩溃方面经历了很多改进。不久前，它曾经被标记为那里最困难的益智游戏之一，希望情况不再如此。 （即。数学，物理或编程所需。只是您的大脑，好奇心以及驱动器的动力，优化和解锁塑造现实的逻辑。  它使用新颖的数学到视觉框架将所有量子方程变成交互式难题。您的电路已经准备就绪，可以清晰地映射到真实操作。该方法是量子奥德赛的原始方法，并为真正的初学者和专业人士而设计。 您将通过play      布尔逻辑  -  bits，littor（nand，or or or or or or or or of，xor和…）和古典arithmetic（添加剂）。了解这些如何结合起来建造任何经典的东西。您将学会将其移植到量子计算机上。  量子逻辑  -  Qubits，它们背后的数学（线性代数，SU（2），复数数字），所有图灵完全盖茨（超越Clifford set），并使张量进化系统。自由地组合或创建自己的大门，以构建您可以想象使用的任何东西。  量子现象  - 在x，y，z bases中存储和检索信息； superposition (pure and mixed states), interference, entanglement, the no-cloning rule, reversibility, and how the measurement basis changes what you see. Core Quantum Tricks – phase kickback, amplitude amplification, storing information in phase and retrieving it through interference, build custom gates and tensors, and define any entanglement scenario. （控制逻辑与其他门分开处理。）  著名的量子算法  - 探索Deutsch – Jozsa，Grover的搜索，量子傅立叶变换，Bernstein -Vazirani，更多。请参阅Action 中的量子算法 - 而不仅仅是编写/阅读方程，而是Make＆amp;观看算法逐步展开，以使它们变得清晰，视觉和难忘。 Quantum Odyssey旨在成长为一个完整的通用量子计算学习平台。如果通用量子计算机可以做到这一点，我们的目标是将其带入游戏中，因此您的量子旅程永远不会结束。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/tastumodysseygame      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nl3b8e/programming_quantum_computers_algebraic_logic/</guid>
      <pubDate>Fri, 19 Sep 2025 13:16:41 GMT</pubDate>
    </item>
    <item>
      <title>建立LLM可发现的数据市场的经验教训</title>
      <link>https://www.reddit.com/r/programming/comments/1nl1g9p/lessons_from_building_an_llmdiscoverable_data/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我们一直在研究 opendatabay ，我想分享一些工程课程我们已经学会了构建它。这不是促销 - 更多地了解技术挑战：   通过AI搜索匹配  而不是关键字搜索，我们构建了语义匹配层。挑战：处理截然不同的数据集模式和描述。 我们尝试了[X方法与Y方法]，这是相关性评分最有效的方法。        等。 这需要结构元数据，以便LLM可以解析/使用它，而无需膨胀存储或放慢检索。      简化数据提供商的入职      大多数数据市场市场很复杂；我们将登机降低到3个步骤。 挑战：验证数据质量而不手动审查。       很想听到这个社区的消息：   您将如何对待语义数据集搜索有所不同？将其扩展到数百万数据集的“最难部分”？   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/u/winter-lake-589       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nl1g9p/lessons_from_building_an_llmdiscoverable_data/</guid>
      <pubDate>Fri, 19 Sep 2025 11:52:35 GMT</pubDate>
    </item>
    <item>
      <title>在AI时代，功能编程仍然很重要吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1nl0wzw/does_functional_programming_still_matter_in_the/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  说实话：我们仍然需要功能编程吗？ ，AI生成了我们一半的样板，建议类型，甚至为我们编写单调，也许不可能和类型的安全性不再重要。也许FP正是我们需要防止AI驱动的代码成为不可读的混乱所需要的。 一些开发人员说功能编程是在这个新世界构建可靠系统的唯一方法。其他人则认为这是过去的一件事，也是AI即将推翻的象牙塔。 那么您会有什么呢？ FP是否比以往任何时候都更有意义，还是在AI副驾驶时代变得过时了？ （P.S。我们将在今年10月在Cádiz的 Lambda World 2025进行辩论，如果您喜欢这些问题，值得一看。）提交由＆＃32; /u/u/um comentional_gold138       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nl0wzw/does_functional_programming_still_matter_in_the/</guid>
      <pubDate>Fri, 19 Sep 2025 11:24:48 GMT</pubDate>
    </item>
    <item>
      <title>阅读我的新文章，上面有关“ Meta的新AI眼镜”</title>
      <link>https://www.reddit.com/r/programming/comments/1nkyttx/read_my_new_article_on_metas_new_ai_glasses/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/wann_be_cool     [link]    ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nkyttx/read_my_new_article_on_metas_new_ai_glasses/</guid>
      <pubDate>Fri, 19 Sep 2025 09:22:59 GMT</pubDate>
    </item>
    <item>
      <title>一个新的实验：在C ++中使Protobuf减少疼痛（灵感来自旧的“为什么Protobuf如此笨拙？”线程）</title>
      <link>https://www.reddit.com/r/programming/comments/1nkymku/a_new_experiment_making_protobuf_in_c_less/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ushib-plastic-5285       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nkymku/a_new_experiment_making_protobuf_in_c_less/</guid>
      <pubDate>Fri, 19 Sep 2025 09:09:28 GMT</pubDate>
    </item>
    <item>
      <title>本地第二，事件驱动的网络应用程序</title>
      <link>https://www.reddit.com/r/programming/comments/1nky67v/localsecond_eventdriven_webapps/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在没有连接性的情况下，后端在后端上进行事件 - 并在前端积累了客户端事件：探索替代替代替代替代局部局部 - 局部局部 - 可能是不实用的），以及传统的客户 -  clastion-clister-server（可能永远不会/u/u/u/adamw1pl      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nky67v/localsecond_eventdriven_webapps/</guid>
      <pubDate>Fri, 19 Sep 2025 08:40:05 GMT</pubDate>
    </item>
    <item>
      <title>厌倦了打开一百万个应用程序只是将文本从一台设备复制到另一种设备？</title>
      <link>https://www.reddit.com/r/programming/comments/1nkx1ww/tired_of_opening_a_million_app_just_to_copy_text/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  不要使用限量点击  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/minement_dimension1496        [注释]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nkx1ww/tired_of_opening_a_million_app_just_to_copy_text/</guid>
      <pubDate>Fri, 19 Sep 2025 07:26:37 GMT</pubDate>
    </item>
    <item>
      <title>人们仍然用手写代码吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1nkpkpb/do_people_still_write_code_by_hands/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  你们是否在没有AI的情况下写代码？如果是这样，为什么？   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/unigingalweb7799     [link]       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nkpkpb/do_people_still_write_code_by_hands/</guid>
      <pubDate>Fri, 19 Sep 2025 00:51:16 GMT</pubDate>
    </item>
    <item>
      <title>Java后端开发人员访谈：完整的问题清单</title>
      <link>https://www.reddit.com/r/programming/comments/1nkpk4d/java_backend_developer_interview_the_complete/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  第1回合：core java＆amp;春季基础  java基础知识  您如何从命令行中编译和运行Java程序？ 解释Java平台独立性背后的原理。 打破公共静态void main（string [] args）方法。每个关键字（public，static，void）的目的是什么？   oop概念  抽象类和接口之间的关键差异是什么？ 接口可以实现类别的界面吗？为什么或为什么不呢？   Spring Core＆amp;注释  解释控制反转（IOC）和依赖注入（di）的概念。 在春季创建bean的不同注释是什么（例如，@component，@servone，@service，@service，@service，@service， @repository，@repository，@controller，@controller，@controller， @controller）？ 如果春季找到两个相同参考类型的豆会发生什么？它如何解决这种歧义？ 解释bean分辨率的 @primary和@qualifier注释之间的区别。 您如何处理Spring中的循环依赖问题？     spring aop aop aop（面向面向面向面向的编程）    是什么？解释其核心概念：方面，尖端，建议。  @befor， @after和@around Advices做什么？   春季交易    @transactactional Antotation in @transactation notation @transactation   什么是什么？ 春季实用  您如何在春季应用程序中从另一个服务中调用一项服务？    回合1：sql＆amp; java流  sql查询  写一个SQL查询，以列出由城市和性别分组的员工数量。 写一个sql查询，以查找雇员名称，以查找具有第二大薪水的雇员名称，从&#39;Bangalore&#39;bangalore&#39;&#39;&#39;位置。 Java流，找到来自班加罗尔第二大工资的员工（模仿Java中的SQL Logic）。 使用Java流编写一个程序，以计数给定字符串中每个字符的频率。    第2季：高级Java＆amp＆amp＆amp;微服务  Java Collections＆amp;比较  您如何比较Java中的自定义对象？使用了对象类的哪些方法？ 解释可比较和比较器界面之间的差异。  春季交易（深水潜水）  解释春季的交易传播。您可以姓名并描述其不同类型（例如，需要，需要_new）？阵列。   Spring MVC＆amp; Layers  Name some commonly used annotations at the Controller layer in Spring (e.g., @RestController, @RequestMapping, @GetMapping). Name some commonly used annotations at the Service layer.  Microservices Architecture  How do microservices communicate with each other? （例如，同步休息/http vs.异步消息传递） 什么是apache kafka，它在微服务生态系统中的作用是什么？ 为apache kafka kafka kafka kafka生产者写一个基本模板。它可以工作吗？它与kafka有何不同？   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/ajit_45288     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nkpk4d/java_backend_developer_interview_the_complete/</guid>
      <pubDate>Fri, 19 Sep 2025 00:50:31 GMT</pubDate>
    </item>
    <item>
      <title>尼克斯转向委员会回顾</title>
      <link>https://www.reddit.com/r/programming/comments/1nkmzm4/nix_steering_committee_retrospective/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nkmzm4/nix_steering_committee_retrospective/</guid>
      <pubDate>Thu, 18 Sep 2025 22:52:57 GMT</pubDate>
    </item>
    <item>
      <title>应用程序脚本引擎现在具有打字稿支持</title>
      <link>https://www.reddit.com/r/programming/comments/1nkmpi2/apps_script_engine_now_has_typescript_support/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/congolomera     [link]    ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nkmpi2/apps_script_engine_now_has_typescript_support/</guid>
      <pubDate>Thu, 18 Sep 2025 22:40:49 GMT</pubDate>
    </item>
    </channel>
</rss>