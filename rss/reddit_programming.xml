<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sat, 02 Aug 2025 12:32:44 GMT</lastBuildDate>
    <item>
      <title>PatchWorkos：一个从严格遵守我一直在工作的“一切都是文件”理念的非划痕的OS。</title>
      <link>https://www.reddit.com/r/programming/comments/1mfoxwc/patchworkos_a_fromscratch_nonposix_os_strictly/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  拼布基于来自UNIX，PLAN9和DOS在内的许多不同地方的想法。严格遵守“一切都是文件”启发是受Plan9的启发，同时从其某些怪异的选择中散发出来，例如PatchWork支持硬链接，Plan9没有。 所有内容包括管道，插座，共享存储器，共享内存以及更多通过文件系统/dev&gt;/dev /code&gt;/proc 和/net net /net/local/seqpacket 文件来创建本地套接字。插座是在读书中详细讨论的。 拼布的一个独特功能是其文件标志系统，它旨在为外壳提供更多的功能（检查读书文件以获取示例），并更好地将顾虑分开与内核分开，例如，诸如prective foremers the poserive oferement oferement oferement oferement oferement oferement forem posentive forement of            和无滴答的内核，SMP，恒定时间调度，恒定时间虚拟内存管理等。   readme  有更多的详细信息，筛选，示例，示例和一些简单的指导。很想听听您的想法，建议或回答问题！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/kn_9296      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mfoxwc/patchworkos_a_fromscratch_nonposix_os_strictly/</guid>
      <pubDate>Sat, 02 Aug 2025 12:07:13 GMT</pubDate>
    </item>
    <item>
      <title>压缩冰岛名称的变形模式为3.27 kb trie</title>
      <link>https://www.reddit.com/r/programming/comments/1mfoh6z/compressing_icelandic_name_declension_patterns/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/xlex97     [link&gt; link&gt; [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mfoh6z/compressing_icelandic_name_declension_patterns/</guid>
      <pubDate>Sat, 02 Aug 2025 11:41:50 GMT</pubDate>
    </item>
    <item>
      <title>第2天：编程语言的基础知识</title>
      <link>https://www.reddit.com/r/programming/comments/1mfnm8g/day_2_basics_of_programming_language/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/coderjags      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mfnm8g/day_2_basics_of_programming_language/</guid>
      <pubDate>Sat, 02 Aug 2025 10:51:06 GMT</pubDate>
    </item>
    <item>
      <title>作为氛围编码时代的工程师蓬勃发展</title>
      <link>https://www.reddit.com/r/programming/comments/1mfnk76/thriving_as_an_engineer_in_the_era_of_vibe_coding/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/thegrey_m      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mfnk76/thriving_as_an_engineer_in_the_era_of_vibe_coding/</guid>
      <pubDate>Sat, 02 Aug 2025 10:47:24 GMT</pubDate>
    </item>
    <item>
      <title>[p]从刮擦中实施了研究论文“记住变压器”，并在建筑和定制培训管道中进行了其他修改。</title>
      <link>https://www.reddit.com/r/programming/comments/1mfmxas/p_implemented_the_research_paper_memorizing/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/underable-ad3290     [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mfmxas/p_implemented_the_research_paper_memorizing/</guid>
      <pubDate>Sat, 02 Aug 2025 10:05:58 GMT</pubDate>
    </item>
    <item>
      <title>SEED7：我计划使用数十年的编程语言</title>
      <link>https://www.reddit.com/r/programming/comments/1mfldk0/seed7_a_programming_language_i_plan_to_work_on/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  种子7基于我的文凭和博士论文中有关可扩展的编程语言的想法（1984和1986）。 1989年，开发始于口译员，并于2005年作为开源发行。从那时起，它会定期进行改进。  seed7大约可读性，性能 and 内存安全。有一个自动内存管理，但是没有垃圾收集过程，可以中断正常处理。 模板 和  seed7是扩展性编程语言。 语句的语法和语义整个语言是在图书馆中定义的“ seed7_05.s7i”。您可以扩展语言语法上和语义上（ 种子7检查 Integer溢出。您要么获得正确的结果，要么 vellflow_error 已提高。与许多基于JVM的语言不同，SEED7提前编译到机器代码（Graal提前工作，但在反射方面挣扎）。与许多系统语言不同（Rust）不同，种子7是内存安全语言。 源代码为 github 。可以通过 make7 ：a make Utility。 href =“ https://seed7.net/scrshots/pv7.htm”&gt; pv7 ：BMP，GIF，ICO，ICO，JPEG，JPEG，PGM，PGM，PGM，PNG，PNG，PPM，PPM和TIFF FILES的图片查看器href =“ https://seed7.net/scrshots/tar7.htm”&gt; tar7 ：tar归档实用程序。   comanche ：一个用于静态HTML页面和CGI程序的简单Web服务器。 href =“ https://seed7.net/scrshots/index.htm”&gt;此处，并且有一个 embo page      带有seed7程序，可以在browser7中执行。这些程序已被编译为JavaScript/WebAssembly。 href =“ https://seed7.net/libraries/tga.htm”&gt; tga 图像，添加了文档和改进的代码质量。 请让我知道您的想法，并考虑将项目主演 &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/thomasmertes       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mfldk0/seed7_a_programming_language_i_plan_to_work_on/</guid>
      <pubDate>Sat, 02 Aug 2025 08:21:37 GMT</pubDate>
    </item>
    <item>
      <title>让我们做游戏吧！ 295：充电</title>
      <link>https://www.reddit.com/r/programming/comments/1mfk87i/lets_make_a_game_295_charging/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/apeloverage      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mfk87i/lets_make_a_game_295_charging/</guid>
      <pubDate>Sat, 02 Aug 2025 07:07:22 GMT</pubDate>
    </item>
    <item>
      <title>开发人员仍然愿意但不愿使用AI：2025年开发人员调查结果在这里</title>
      <link>https://www.reddit.com/r/programming/comments/1mfhu30/developers_remain_willing_but_reluctant_to_use_ai/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   基础中的破解正在显示，因为越来越多的开发人员使用ai  信任但验证吗？开发人员感到沮丧，今年的结果表明，代码的未来是关于信任的，而不仅仅是工具。 AI工具的采用率继续攀升，现在有80％的开发人员在工作流程中使用它们。 但是，这种广泛的使用并未转化为信心。实际上，对AI准确性的信任已从前几年的40％下降到今年的29％。我们还看到，AI的积极青睐从同比减少到60％。相关数据中可以找到这种转变的原因： 由45％的受访者引用的数字挫败感正在处理“几乎正确但不是完全正确的AI解决方案”。这通常会使调试更加耗时。实际上，有66％的开发人员表示，他们花了更多时间修理“几乎权利”。 AI生成的代码。当代码变得复杂并且赌注很高时，开发人员会转向人们。压倒性的75％表示，当他们不信任AI的答案时，他们仍然会向另一个人寻求帮助。  69％的开发人员在去年学习了新的编码技术或新的编程语言； 44％的人在支持AI的工具的帮助下学习了，高于2024年的37％。  36％的开发人员学会了去年专门为AI编码的开发人员；所有经验水平的开发人员刚刚开始投资于AI编程。  AI代理的采用远非普遍。我们问AI代理革命是否在这里，答案是“尚未确定的”。尽管有52％的开发人员说代理商已经影响了他们完成工作的方式，但主要的好处是个人生产力：69％的人同意他们已经看到了增加。当被问及“ Vibe编码”  - 从提示中加生整个应用程序时，几乎有72％的人表示这不是其专业工作的一部分，而另外5％的人则不参与Vibe编码。这与大多数开发人员（64％）不认为AI是对工作的威胁，但与去年相比，他们对此的信心较小（当68％的人认为AI对他们的工作并不威胁）。   ＆＃32;提交由＆＃32;态href =“ https://stackoverflow.blog/2025/07/29/developers-remain-willing-willing-but-reluctant-to-use-use-ai-the-the-the-2025-developer-survey-results-results-are-are-are-are-here/”&gt; [link]          [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mfhu30/developers_remain_willing_but_reluctant_to_use_ai/</guid>
      <pubDate>Sat, 02 Aug 2025 04:45:13 GMT</pubDate>
    </item>
    <item>
      <title>动态编程破裂的气球</title>
      <link>https://www.reddit.com/r/programming/comments/1mf9tzm/dynamic_programming_bursting_balloons/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mf9tzm/dynamic_programming_bursting_balloons/</guid>
      <pubDate>Fri, 01 Aug 2025 22:11:04 GMT</pubDate>
    </item>
    <item>
      <title>第二个现实，传奇的1993 PC演示终于被移植到了现代操作系统上。</title>
      <link>https://www.reddit.com/r/programming/comments/1mf9tyz/second_reality_the_legendary_1993_pc_demo_has/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  未来工作人员的第二个现实终于终于被移植到了现代操作系统上，您可以看着它撕毁您的系统：没有视频，没有仿真，只有代码 - 应该是。 端口上的注释可以在此处找到     &lt;！提交由＆＃32; /u/u/boyc      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mf9tyz/second_reality_the_legendary_1993_pc_demo_has/</guid>
      <pubDate>Fri, 01 Aug 2025 22:11:03 GMT</pubDate>
    </item>
    <item>
      <title>[释放] Yini Parser Lib 1.0.1-beta（迄今为止最强大）：最小语法噪声，node.js的人类友好型config parser</title>
      <link>https://www.reddit.com/r/programming/comments/1mf9kw2/release_yini_parser_lib_101beta_most_robust_yet/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  问候！我很高兴分享在npm 上。     yini是什么？   1.0.1 -beta中有什么新功能？  - 改进的Lexer和语法错误处理 - 更健壮的金测试和错误报告 - 更新到最新的语法逻辑（v1.0.0.0-rc.2） - 参见href =“ https://github.com/yini-lang/yini-parser-typescript/releases/releases/tag/v1.0.1-beta”&gt; changelog 有关详细信息     链接：  href =“ https://www.npmjs.com/package/yini-parser”&gt; https://www.npmjs.coms.coms.com/package/package/yini-parser   -   github： github：   https://github.com/yini-lang/yini-parser-parser-typescript   -   project href =“ https://github.com/yini-lang”&gt; https://github.com/yini-lang    喜欢反馈，建议和贡献！谢谢！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/usef_tune_6830      &lt;a href =“ https://www.reddit.com/r/programming/comments/1mf9kw2/release_yini_parser_lib_101beta_most_robust_yet/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mf9kw2/release_yini_parser_lib_101beta_most_robust_yet/</guid>
      <pubDate>Fri, 01 Aug 2025 22:00:16 GMT</pubDate>
    </item>
    <item>
      <title>Java工程：摘要＃58</title>
      <link>https://www.reddit.com/r/programming/comments/1mf9hsh/engineering_with_java_digest_58/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   最新版本的Java通讯发布！本周涵盖的内容：     java 20矢量API：硬件加速simd操作，可在数据 - 平行任务中最多4×速度加速；独立于平台的矢量化代码。   Java Utils（旧但黄金）：有用的实用程序（对象，环境，碰撞器，归一化器），用于无效和国际化。春季启动：构建具有输入/输出护栏的强大AI应用程序，以控制LLM行为并确保更安全的响应。   java对象初始化：解决了部分初始化（“ ararval”）状态的问题； Valhalla项目的目的是通过诊断和更强大的保证。  避免忙忙忙碌：使用等待/通知/通知，锁定/状况，countdownlatch，Semaphore，Semaphore，Semaphore，用于有效的cpu浪费量，而不是浪费CPU的liops。检索类似的查询，减少昂贵的LLM调用和提高性能。  反应性弹簧数据（R2DBC）与阻塞JPA： r2DBC提供更高的吞吐量（约4000 rps），延迟较低，并且比JPA的成熟生态更低，但JPA。 517使用QUIC/UDP添加了HTTP/3支持，并更改API；为将来发行的基础工作。   java贬值：删除32位端口，小程序，最终化和安全经理简化和现代化了平台。      &lt;！ -  sc_on-&gt; 32;&gt; 32;提交由＆＃32; /u/u/u/decuntiation-ad2036     ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mf9hsh/engineering_with_java_digest_58/</guid>
      <pubDate>Fri, 01 Aug 2025 21:56:29 GMT</pubDate>
    </item>
    <item>
      <title>什么是声明语言</title>
      <link>https://www.reddit.com/r/programming/comments/1mf5or8/what_declarative_languages_are/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mf5or8/what_declarative_languages_are/</guid>
      <pubDate>Fri, 01 Aug 2025 19:22:39 GMT</pubDate>
    </item>
    <item>
      <title>c的couchbase lite -c-将OOP API映射到C API中。</title>
      <link>https://www.reddit.com/r/programming/comments/1mf5gwh/couchbase_lite_for_c_mapping_an_oop_api_into_a_c/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/pdp10       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mf5gwh/couchbase_lite_for_c_mapping_an_oop_api_into_a_c/</guid>
      <pubDate>Fri, 01 Aug 2025 19:14:12 GMT</pubDate>
    </item>
    <item>
      <title>宣布打字稿5.9</title>
      <link>https://www.reddit.com/r/programming/comments/1mf0vid/announcing_typescript_59/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/DanielRosenwasser   [link] ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mf0vid/announcing_typescript_59/</guid>
      <pubDate>Fri, 01 Aug 2025 16:20:00 GMT</pubDate>
    </item>
    </channel>
</rss>