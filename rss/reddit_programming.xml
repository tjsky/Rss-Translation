<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sat, 23 Aug 2025 21:14:43 GMT</lastBuildDate>
    <item>
      <title>提升Laravel Boost</title>
      <link>https://www.reddit.com/r/programming/comments/1mybnfp/boosting_laravel_boost/</link>
      <description><![CDATA[在它通过提供一堆工具来更好地理解您的应用程序，从而使AI变得更少，而且很棒。但是我认为我们可以给它一个额外的提升。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/every_ant_5944        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mybnfp/boosting_laravel_boost/</guid>
      <pubDate>Sat, 23 Aug 2025 20:09:26 GMT</pubDate>
    </item>
    <item>
      <title>SurroeAldB正在牺牲数据耐用性，以使基准看起来更好</title>
      <link>https://www.reddit.com/r/programming/comments/1my7qr0/surrealdb_is_sacrificing_data_durability_to_make/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/chillfish8      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1my7qr0/surrealdb_is_sacrificing_data_durability_to_make/</guid>
      <pubDate>Sat, 23 Aug 2025 17:37:04 GMT</pubDate>
    </item>
    <item>
      <title>MCP：为下一波AI工作流提供动力的模型上下文协议</title>
      <link>https://www.reddit.com/r/programming/comments/1my7fwk/mcp_the_model_context_protocol_powering_the_next/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   mcp（模型上下文协议）是一个新兴的开放协议，它定义了工具（例如IDE，CLIS，笔记本，笔记本，CI/CD代理）如何将相关上下文传达给LLMS和AI剂。        &lt;！ -  sc_on-&gt; 32222222222222;提交由＆＃32; /u/u/u/theteambillionaire       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1my7fwk/mcp_the_model_context_protocol_powering_the_next/</guid>
      <pubDate>Sat, 23 Aug 2025 17:25:42 GMT</pubDate>
    </item>
    <item>
      <title>GitHub-罗尼兰/乡村人：鼠标驱动的SVG Favicon编辑器（用锈）编写）</title>
      <link>https://www.reddit.com/r/programming/comments/1my7d4v/github_ronilanrusticon_a_mouse_driven_svg_favicon/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ronilan       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1my7d4v/github_ronilanrusticon_a_mouse_driven_svg_favicon/</guid>
      <pubDate>Sat, 23 Aug 2025 17:22:51 GMT</pubDate>
    </item>
    <item>
      <title>了解依赖项数组和useeffect（）视觉（reactjs）x`</title>
      <link>https://www.reddit.com/r/programming/comments/1my7c5a/understanding_dependencies_array_useeffect/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  使用效果接受两个参数。首先，回调函数或效果代码。其次，依赖性数组。  在这里与您进行 副作用仅仅是更改的操作  我们组件的外部 。为了处理我们使用的组件内部的更改。 依赖关系数组  依赖项数组对理解至关重要。它设置了条件， useeffect（）将再次运行。如果我们不通过它，则使用（）在每个重新贷款 r上运行。这可以是昂贵的。每次从外部API获取数据时，请考虑一下。   ＆＃8203;     useffect（（）=＆gt; {// {//在初始渲染和每个Update update Console.log上运行   通过 null（; quot; quot; quot; quot）数组。仅在组件的第一个渲染之后，它将运行 useeffect（）钩。它将在后续更新后不运行 useffect（）。    通过值传递依赖性数组。将价值传递给依赖性数组可确保仅在第一次渲染和之后才能运行使用feperfect（）。 }， [用户身份]）;    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://beyondit.blog/blogs/only-react-cheat-cheat-sheat-sheet-you-need-2025-interactive-use-effect”&gt; [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1my7c5a/understanding_dependencies_array_useeffect/</guid>
      <pubDate>Sat, 23 Aug 2025 17:21:44 GMT</pubDate>
    </item>
    <item>
      <title>让我们做游戏吧！ 311：从后面攻击！</title>
      <link>https://www.reddit.com/r/programming/comments/1my7ang/lets_make_a_game_311_attacked_from_behind/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/apeloverage      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1my7ang/lets_make_a_game_311_attacked_from_behind/</guid>
      <pubDate>Sat, 23 Aug 2025 17:20:13 GMT</pubDate>
    </item>
    <item>
      <title>如何在几行中使用wl + canvas api制作粘胶式桥模拟器的世界。全部在单个笔记本中</title>
      <link>https://www.reddit.com/r/programming/comments/1my6x8k/how_to_make_world_of_goostyle_bridge_simulator/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/inst2f      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1my6x8k/how_to_make_world_of_goostyle_bridge_simulator/</guid>
      <pubDate>Sat, 23 Aug 2025 17:06:06 GMT</pubDate>
    </item>
    <item>
      <title>进化仍然是有效的机器学习技术</title>
      <link>https://www.reddit.com/r/programming/comments/1my5lpo/evolution_is_still_a_valid_machine_learning/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/chilipepperhott      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1my5lpo/evolution_is_still_a_valid_machine_learning/</guid>
      <pubDate>Sat, 23 Aug 2025 16:14:32 GMT</pubDate>
    </item>
    <item>
      <title>比较与swap（CAS）：从头开始构建并发哈希图</title>
      <link>https://www.reddit.com/r/programming/comments/1my5aud/compareandswap_cas_building_a_concurrent_hashmap/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/dhairya-chauhan     [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1my5aud/compareandswap_cas_building_a_concurrent_hashmap/</guid>
      <pubDate>Sat, 23 Aug 2025 16:02:52 GMT</pubDate>
    </item>
    <item>
      <title>我们的工程师如何使用AI进行编码（以及他们拒绝的地方）</title>
      <link>https://www.reddit.com/r/programming/comments/1my47o8/how_our_engineers_use_ai_for_coding_and_where/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/elizobserves      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1my47o8/how_our_engineers_use_ai_for_coding_and_where/</guid>
      <pubDate>Sat, 23 Aug 2025 15:20:45 GMT</pubDate>
    </item>
    <item>
      <title>SXO ::优化的服务器端JSX。构建简单。快速构建</title>
      <link>https://www.reddit.com/r/programming/comments/1my2ehr/sxo_optimized_serverside_jsx_build_simple_build/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   a  fast ，使用服务器Side JSX构建网站的最小体系结构大会和CLI。 没有反应，没有客户框架，只有为服务器优化的组合 JSX，Clean 基于目录的路由器，热替换 ，并由Esbuild Plus Rust JSX Precompiler提供支持。提交由＆＃32; /u/u/gcvictor      &lt;a href =“ https://www.reddit.com/r/programming/comments/1my2ehr/sxo_optimized_serverside_jsx_build_simple_build/”]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1my2ehr/sxo_optimized_serverside_jsx_build_simple_build/</guid>
      <pubDate>Sat, 23 Aug 2025 14:07:17 GMT</pubDate>
    </item>
    <item>
      <title>技术领导力：一种现代方法</title>
      <link>https://www.reddit.com/r/programming/comments/1my15rq/technical_leadership_a_modern_approach/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/trolleid      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1my15rq/technical_leadership_a_modern_approach/</guid>
      <pubDate>Sat, 23 Aug 2025 13:14:33 GMT</pubDate>
    </item>
    <item>
      <title>具有自动链接检查和英语文档的韩国公共API（+全球公共API 1030+）</title>
      <link>https://www.reddit.com/r/programming/comments/1mxzsvq/korean_public_apis_global_public_api_1030_with/</link>
      <description><![CDATA[I created this comprehensive public API collection after getting frustrated with hunting down APIs across multiple sources for my projects. The repository features: - 180+ Korean public APIs (fully documented in both Korean and English) - Translated versions of popular international APIs - Automated link validation确保可靠性   - 由用例进行分类以易于发现 非常适合从事需要韩国市场集成项目或寻求可靠API资源的项目的开发人员。    https://github.com/yybmion/yyybmion/public-apis-4kr     反馈欢迎！提交由＆＃32; /u/u/ybmion     &lt;a href =“ https://www.reddit.com/r/programming/comments/1mxzsvq/korean_public_apis_apis_global_public_api_1030_with/”]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mxzsvq/korean_public_apis_global_public_api_1030_with/</guid>
      <pubDate>Sat, 23 Aug 2025 12:12:02 GMT</pubDate>
    </item>
    <item>
      <title>您需要的唯一反应备忘单（2025）</title>
      <link>https://www.reddit.com/r/programming/comments/1mxyba3/the_only_react_cheat_sheet_2025_you_need/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  欢迎来到另一个React React备用表在Internet上。但是等待，这不是您的想法，就像互联网上存在的任何其他备忘单，抛出随机代码示例和琐碎的解释一样。  i  promise 这是不同的。我们将理解 reactjs背后的ISM以及使用*使用 Interactive    demos 我专门为你们制作的，每个有用的功能如何在场景背后使用*。因此，您可以很好地理解它并在现实世界中实施。 在此处阅读完整的文章 href =“ https://beyondit.blog/blogs/only-react-cheat-cheat-sheat-sheet-sheet-you-need-2025---------------- prop- prop“&gt;查看交互式演示，解释了“儿童&#39;&#39;prop的工作（向下scroll Litt litter litter litt lit Litter）     UI Understanding JSX (Few things to keep in mind) The Component Model Understanding The Role of Fragments Embedding JavaScript inside components Using props to make component functional The useState Hook Controlled Components Dynamic Rendering: Conditions and Lists useEffect: Managing Side Effects useContext: Escaping Prop Drilling useReducer: For Complex State Logic useRef: The Escape Hatch useMemo Hook useMemo + useCallback Custom Hooks : Creating Reusable hooks 使用反应路由器 受保护的途径 如何创建和使用全球身份验证状态 此外，更多。结果。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/utherditblog2      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mxyba3/the_only_react_cheat_sheet_2025_you_need/</guid>
      <pubDate>Sat, 23 Aug 2025 10:51:58 GMT</pubDate>
    </item>
    <item>
      <title>用户界面的死亡</title>
      <link>https://www.reddit.com/r/programming/comments/1mxy5mz/the_death_of_the_user_interface/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://gist.github.com/0xs34n/a5738db1cc24495e69b6c08a451890”&gt; [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mxy5mz/the_death_of_the_user_interface/</guid>
      <pubDate>Sat, 23 Aug 2025 10:43:11 GMT</pubDate>
    </item>
    </channel>
</rss>