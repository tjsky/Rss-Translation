<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Fri, 26 Sep 2025 09:21:21 GMT</lastBuildDate>
    <item>
      <title>搜索的演变 - 信息检索的简短历史</title>
      <link>https://www.reddit.com/r/programming/comments/1nqwaod/the_evolution_of_search_a_brief_history_of/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/kushalgoenka       [commistion]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqwaod/the_evolution_of_search_a_brief_history_of/</guid>
      <pubDate>Fri, 26 Sep 2025 08:55:19 GMT</pubDate>
    </item>
    <item>
      <title>🚀开发人员的智能，更快，清洁的软件指南：掌握AI代码代理</title>
      <link>https://www.reddit.com/r/programming/comments/1nqvtwj/a_developers_guide_to_smarter_faster_cleaner/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我一直在测试AI代码代理（Claude，deepseek，已整合到Windsurf或Cursor之类的工具中），我注意到了一些东西： 他们不仅会在写作代码上，他们不仅会在写作代码中“更快地”来改变自己的范围。 BE：   设计模式＆amp; clean architecture SOLID principles, TDD, and clean code Understanding trade-offs in system design  In other words: AI may write the function, but we still need to design the system and enforce quality.   提交由＆＃32; /u/u/factance_insect771     [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqvtwj/a_developers_guide_to_smarter_faster_cleaner/</guid>
      <pubDate>Fri, 26 Sep 2025 08:24:15 GMT</pubDate>
    </item>
    <item>
      <title>如何使用tailwind CSS和Alpinejs创建通知</title>
      <link>https://www.reddit.com/r/programming/comments/1nqvl08/how_to_create_a_notification_with_tailwind_css/</link>
      <description><![CDATA[Want to add clean, animated notifications to your project without heavy dependencies? I wrote a step-by-step tutorial on how to build one using Tailwind CSS + Alpine.js, complete with auto-dismiss, hover pause, and multiple types (success, error, warning, info).  阅读完整的教程并在此处获取代码： https：//lexingttps://lexingtonthemes.com/blog/blog/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/michael_andreuzza     [link]    32;   [注释]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqvl08/how_to_create_a_notification_with_tailwind_css/</guid>
      <pubDate>Fri, 26 Sep 2025 08:07:57 GMT</pubDate>
    </item>
    <item>
      <title>使用Ebitengine（教程）创建和加载TILEMAPS</title>
      <link>https://www.reddit.com/r/programming/comments/1nqvh9v/creating_and_loading_tilemaps_using_ebitengine/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/tslocum      [commist]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqvh9v/creating_and_loading_tilemaps_using_ebitengine/</guid>
      <pubDate>Fri, 26 Sep 2025 08:01:15 GMT</pubDate>
    </item>
    <item>
      <title>Java 25新功能和示例</title>
      <link>https://www.reddit.com/r/programming/comments/1nqupsm/java_25_new_features_with_examples/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   java 25于2025年9月16日正式发布。这是一个长期支持（LTS）版本，其中包括核心Java库，语言规格，安全性和性能的大量增强功能。 Oracle计划至少为Java 25提供支持至少八年，使组织能够以自己的步伐迁移，同时从最新功能中受益，包括提高的AI功能和增强的开发人员生产率。以下是 Java 25新功能带有示例的新功能。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/e erdsingh24      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqupsm/java_25_new_features_with_examples/</guid>
      <pubDate>Fri, 26 Sep 2025 07:10:42 GMT</pubDate>
    </item>
    <item>
      <title>厌倦了凌乱的SQL查询？我写了一个指南，帮助我清理了我的</title>
      <link>https://www.reddit.com/r/programming/comments/1nqupgj/tired_of_messy_sql_queries_i_wrote_a_guide_that/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  这是链接：我最近深深地了解了我们所有人都犯的SQL错误 - 从微妙的性能杀手到常见的逻辑错误，并为如何发现和修复它们写了一份实用指南。我还提供了优化的技巧以及希望我之前知道的一些技巧。 您在指南中会发现的某些内容：  简单的错误会如何减慢查询 与加入，分组和subqueries和subqueries       的优化 ul的常见 比它应该（或只是想编写更清洁，更有效的查询），这可能会有所帮助。 很想听听您的想法或您要添加的任何提示。您最近遇到的最糟糕的SQL错误是什么？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/tanmay__13    href =“ https://medium.com/@tanmay.bansal20/inside-the-life-of-an-sql-query-from-parsing-to-execution-an d-everythi-i-eard-the-the-way-cdfc31193b7b？sk = 59793BFF8146F824CD6EB7F5AB4F4F5D7C“&gt; [link]    ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqupgj/tired_of_messy_sql_queries_i_wrote_a_guide_that/</guid>
      <pubDate>Fri, 26 Sep 2025 07:10:06 GMT</pubDate>
    </item>
    <item>
      <title>氛围编码的天体物理学家（2分钟）</title>
      <link>https://www.reddit.com/r/programming/comments/1nqui4m/astrophysicist_on_vibe_coding_2_minutes/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/fredoverflow      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqui4m/astrophysicist_on_vibe_coding_2_minutes/</guid>
      <pubDate>Fri, 26 Sep 2025 06:57:13 GMT</pubDate>
    </item>
    <item>
      <title>我使用Chatgpt作为配对程序员来构建一种可视化著名算法的工具。结果令人惊讶地有效。</title>
      <link>https://www.reddit.com/r/programming/comments/1nqua38/i_used_chatgpt_as_a_pair_programmer_to_build_a/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿 r/programming ， 我想分享一个我一直在工作的项目。目的是构建一种干净的算法可视化器，但是有了一个扭曲 - 我想看看我可以将多少开发过程卸载到chatgpt。   该视频是该旅程的Devlog风格的演练，从生成样板代码到Quicksort and Dijkstra等逻辑的逻辑。这是一个令人着迷的实验，用于使用AI作为开发工具，突出了它的优势和仍然不足的地方。 很乐意讨论该过程，技术堆栈或评论中LLM的“配对编程”的体验。让我知道您的想法！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/druv-codes       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqua38/i_used_chatgpt_as_a_pair_programmer_to_build_a/</guid>
      <pubDate>Fri, 26 Sep 2025 06:42:49 GMT</pubDate>
    </item>
    <item>
      <title>与Raylib-Go一起建立水模拟</title>
      <link>https://www.reddit.com/r/programming/comments/1nqtk0x/build_a_water_simulation_in_go_with_raylibgo/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://medium.com/timlittle/build-a-water-simulation-in-go-with-raylib-go-91c895891263”&gt; [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqtk0x/build_a_water_simulation_in_go_with_raylibgo/</guid>
      <pubDate>Fri, 26 Sep 2025 05:58:45 GMT</pubDate>
    </item>
    <item>
      <title>您现在没有AI生活吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1nqpbgd/can_you_live_without_ai_now/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/awkward-hour-8318        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqpbgd/can_you_live_without_ai_now/</guid>
      <pubDate>Fri, 26 Sep 2025 02:06:53 GMT</pubDate>
    </item>
    <item>
      <title>给您的AI眼睛：介绍Chrome DevTools MCP</title>
      <link>https://www.reddit.com/r/programming/comments/1nqp7p7/give_your_ai_eyes_introducing_chrome_devtools_mcp/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/feross     &lt;a href =“ https://www.reddit.com/r/programming/comments/1nqp7p7/give_your_ai_ey_eyes_introducing_chrome_devtools_mcp/”]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqp7p7/give_your_ai_eyes_introducing_chrome_devtools_mcp/</guid>
      <pubDate>Fri, 26 Sep 2025 02:01:51 GMT</pubDate>
    </item>
    <item>
      <title>粘性会话失败：从状态混乱到无状态的弹性粘性会话失败</title>
      <link>https://www.reddit.com/r/programming/comments/1nqo96y/sticky_session_failure_from_stateful_chaos_to/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  这个全面的课程将粘性会话失败的抽象概念转化为有形的，可建造的技能。 Students will:  Understand the Problem: Experience firsthand how sticky sessions create single points of failure through a working demonstration Implement the Solution: Build a stateless architecture using Redis for session persistence Verify the Benefits: See how the same user journey succeeds with stateless sessions even during server失败  获得生产见解：学习Netflix，Facebook和Amazon等公司使用的建筑模式     可执行的可执行蓝图创建了一个完整的学习环境，可以在其中学生可以崩溃服务器，损失会话，然后损失会话，然后实现弹性解决方案，从而为现代网络现代化设备提供弹性。这种动手实践方法可确保概念比仅理论解释要好得多。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/extra_ear_10      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqo96y/sticky_session_failure_from_stateful_chaos_to/</guid>
      <pubDate>Fri, 26 Sep 2025 01:15:00 GMT</pubDate>
    </item>
    <item>
      <title>什么都不做的最有效的方法</title>
      <link>https://www.reddit.com/r/programming/comments/1nqmrtl/the_most_efficient_way_to_do_nothing/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/bluegoliach       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqmrtl/the_most_efficient_way_to_do_nothing/</guid>
      <pubDate>Fri, 26 Sep 2025 00:04:55 GMT</pubDate>
    </item>
    <item>
      <title>无效的指针</title>
      <link>https://www.reddit.com/r/programming/comments/1nqm790/void_pointer_in_c_demystified/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/bluegoliach       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqm790/void_pointer_in_c_demystified/</guid>
      <pubDate>Thu, 25 Sep 2025 23:37:52 GMT</pubDate>
    </item>
    <item>
      <title>探索码头，TTY和PTY</title>
      <link>https://www.reddit.com/r/programming/comments/1nqlljj/exploring_terminals_ttys_and_ptys/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/helpful_geodist430      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqlljj/exploring_terminals_ttys_and_ptys/</guid>
      <pubDate>Thu, 25 Sep 2025 23:10:41 GMT</pubDate>
    </item>
    </channel>
</rss>