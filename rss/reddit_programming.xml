<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Fri, 01 Aug 2025 12:37:54 GMT</lastBuildDate>
    <item>
      <title>使用PostgreSQL和Kysely的简单“模糊”搜索</title>
      <link>https://www.reddit.com/r/programming/comments/1meurqd/a_simple_fuzzy_search_using_postgresql_and_kysely/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/wabwabb     [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1meurqd/a_simple_fuzzy_search_using_postgresql_and_kysely/</guid>
      <pubDate>Fri, 01 Aug 2025 12:09:54 GMT</pubDate>
    </item>
    <item>
      <title>边缘上的NAT-分布式工业网格 -  MQ Summit会议2025</title>
      <link>https://www.reddit.com/r/programming/comments/1metu9x/nats_on_edge_a_distributed_industrial_mesh_mq/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   100多个工厂，数十亿个每日消息，50多个应用程序  schaeffler建立了一个全球nats网状网格，该网格刚刚起作用   schaeffler的Max arndt和Jean-Noel Moyne和Jean-Noel Moyne从Synadia Spills Synadia Spills sc_ sc_ sc_ sc_summit 202225  &lt;！ ＆＃32;提交由＆＃32; /u/u/code_sync      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1metu9x/nats_on_edge_a_distributed_industrial_mesh_mq/</guid>
      <pubDate>Fri, 01 Aug 2025 11:22:26 GMT</pubDate>
    </item>
    <item>
      <title>解析和比较版本字符串的艺术</title>
      <link>https://www.reddit.com/r/programming/comments/1metblt/the_art_of_parsing_and_comparing_version_strings/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/feltatap    href =“ https://secalerts.co/news/the-art-of-parsing-and-comparing-comparing-version-srings/7bvwmeynbrmibbmibbmixggvsi”&gt; [link]        [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1metblt/the_art_of_parsing_and_comparing_version_strings/</guid>
      <pubDate>Fri, 01 Aug 2025 10:53:47 GMT</pubDate>
    </item>
    <item>
      <title>如果奥丁有宏</title>
      <link>https://www.reddit.com/r/programming/comments/1mes37n/if_odin_had_macros/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/gingerbill      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mes37n/if_odin_had_macros/</guid>
      <pubDate>Fri, 01 Aug 2025 09:40:01 GMT</pubDate>
    </item>
    <item>
      <title>双子座CLI终于发布了自定义命令</title>
      <link>https://www.reddit.com/r/programming/comments/1meriz8/gemini_cli_finally_released_custom_commands/</link>
      <description><![CDATA[I already had some of them planned and was waiting for this feature to release. You can check it out here: GITHUB. Here are some of my favorites: 用于开发：&lt; /p&gt;   -  /脚手架＆lt; type＆gt; ＆lt; name＆gt;：一种样板生成器，节省了我大量的设置时间。我只能运行脚手架react-component userProfile，它立即创建了一个具有基本结构的新React组件文件。它还支持春季启动服务和颤音集。它会自动起草a  changelog.md 通过扫描两个标签之间的git输入和对它们进行分类（例如，feat，fix，fix，fix，greore，groes）。  - /p&gt;  - /outdated_package：cooks for for Outdected notded exported nyd offected noved noved injectencies in repted intived ny project。对于任何主要版本更新，它都会自动获取ChangElog，因此我可以快速看到破坏的更改。&lt; /p&gt;   -  /parallel_tasks：一个更高级的命令，可以设置多个GIT工作室。这使我可以同时进行并并行测试不同的功能，而无需它们彼此干扰。 （当Gemini释放子代理功能时，这将是黄金） 生产力：   - /clip＆lt; url＆gt;：：终端的简单Web剪刀。它获取文章，将其转换为清洁降价，并在本地保存。非常适合保存文档以脱机。&lt; /p&gt;   -  /eod：在一天结束时，我运行此操作以获得“一天的结束”。概括。它从一天开始提取我的git，并将它们与我的 todo.md 结合起来，以生成我所完成的工作的整齐报告。  &lt;！ -  sc_on-- sc_on--&gt; 32;&gt; 32;提交由＆＃32; /u/u/u/ggravatingcounter84      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1meriz8/gemini_cli_finally_released_custom_commands/</guid>
      <pubDate>Fri, 01 Aug 2025 09:04:22 GMT</pubDate>
    </item>
    <item>
      <title>我率先开发了一个AI应用程序，该应用程序是电影制片人和VFX艺术家的VFX主管。这是我在此过程中学到的东西。...这是我们没有预算发布预告片！好奇地听到我们已经启动MVP的人是否有其他建议在与开发人员交流方面是否有建议。</title>
      <link>https://www.reddit.com/r/programming/comments/1meqvgq/i_spearheaded_the_development_of_an_ai_app_that/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  几个月后，我们刚刚启动了我们的应用FX SUP，我想分享一些其他人在不进行编码的情况下进行编码的任何人的旅程。 这一过程很烦恼。这个想法来自于拍摄电影集，并不断看到电影制片人错过了巨大的生产价值，这仅仅是因为他们不知道VFX可能会做些什么或如何为电影做准备。生产与邮政之间的差距多年，我终于决定尝试建立一些东西来帮助它桥接。 我不是开发人员，所以起初我探索了无代码选项。但是很快，很清楚的是，我们需要的东西（包括创意工具，项目管理和工作委员会的混合）在不进行自定义的情况下实现。 真正保存的项目是线框和实体关系图。老实说，这是整个过程中最重要的见解。如果您不是编码的人，则清晰的线框和ER图是您的生命线。这就是您与开发人员进行交流的方式，并确保您正在构建实际的意图。每次我们跳过该步骤或懒惰的文档时，出现了问题或混淆或破坏。 我在无花果上建造了线框，并一遍又一遍地完善流量。然后，我与开发人员合作绘制了后端的所有内容如何连接。它并不迷人，但它使一切变得真实。如果没有该结构，这个项目将停滞不前或变成肿的混乱。 我们上周在应用商店上启动了MVP版本，现在我们正在收集反馈并弄清楚下一步。不要试图在这里共享任何东西，以防万一它很有用。如果您要构建某些内容，而不是自己编写代码，请将您的线框和图表如您的真理来源。这一切都会有所不同。 如果有人在类似的地方，请乐于回答任何问题。这是一条漫长的路，我们仍在学习。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/prestigious_chip7205      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1meqvgq/i_spearheaded_the_development_of_an_ai_app_that/</guid>
      <pubDate>Fri, 01 Aug 2025 08:21:55 GMT</pubDate>
    </item>
    <item>
      <title>从TDD到EDD：为什么评估驱动的发展是AI工程的未来</title>
      <link>https://www.reddit.com/r/programming/comments/1meqb4y/from_tdd_to_edd_why_evaluationdriven_development/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/automatic-arm-2444      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1meqb4y/from_tdd_to_edd_why_evaluationdriven_development/</guid>
      <pubDate>Fri, 01 Aug 2025 07:45:01 GMT</pubDate>
    </item>
    <item>
      <title>C ++ 26反思冒险和编译时间UML</title>
      <link>https://www.reddit.com/r/programming/comments/1meo7ki/c26_reflections_adventures_compile_time_uml/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/ketralnis     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1meo7ki/c26_reflections_adventures_compile_time_uml/</guid>
      <pubDate>Fri, 01 Aug 2025 05:34:05 GMT</pubDate>
    </item>
    <item>
      <title>Python 3.14中的进一步性能演变：尾声解释器</title>
      <link>https://www.reddit.com/r/programming/comments/1melmjw/further_performance_evolution_in_python_314_tail/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/stackoverflooooooow     [link]     32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1melmjw/further_performance_evolution_in_python_314_tail/</guid>
      <pubDate>Fri, 01 Aug 2025 03:12:43 GMT</pubDate>
    </item>
    <item>
      <title>在没有API键的情况下对GITHUB操作进行身份验证</title>
      <link>https://www.reddit.com/r/programming/comments/1mejlht/authenticating_github_actions_without_api_keys/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/ericchiang      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mejlht/authenticating_github_actions_without_api_keys/</guid>
      <pubDate>Fri, 01 Aug 2025 01:32:57 GMT</pubDate>
    </item>
    <item>
      <title>网络内无领导者的分布式数据存储的复制</title>
      <link>https://www.reddit.com/r/programming/comments/1mej1ey/innetwork_leaderless_replication_for_distributed/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mej1ey/innetwork_leaderless_replication_for_distributed/</guid>
      <pubDate>Fri, 01 Aug 2025 01:06:23 GMT</pubDate>
    </item>
    <item>
      <title>基准微拷贝</title>
      <link>https://www.reddit.com/r/programming/comments/1mej13j/benchmarking_micropython/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis     link link link&gt; [link]   [commist]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mej13j/benchmarking_micropython/</guid>
      <pubDate>Fri, 01 Aug 2025 01:05:57 GMT</pubDate>
    </item>
    <item>
      <title>进行组装突变测试</title>
      <link>https://www.reddit.com/r/programming/comments/1mej04b/go_assembly_mutation_testing/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mej04b/go_assembly_mutation_testing/</guid>
      <pubDate>Fri, 01 Aug 2025 01:04:39 GMT</pubDate>
    </item>
    <item>
      <title>经过验证的组件2：内存，RISC-V，不变的剪切和幽灵代码</title>
      <link>https://www.reddit.com/r/programming/comments/1mefp7z/verified_assembly_2_memory_riscv_cuts_for/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mefp7z/verified_assembly_2_memory_riscv_cuts_for/</guid>
      <pubDate>Thu, 31 Jul 2025 22:35:26 GMT</pubDate>
    </item>
    <item>
      <title>CGP中生锈的可扩展变体的设计和实施</title>
      <link>https://www.reddit.com/r/programming/comments/1mefp0x/the_design_and_implementation_of_extensible/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mefp0x/the_design_and_implementation_of_extensible/</guid>
      <pubDate>Thu, 31 Jul 2025 22:35:12 GMT</pubDate>
    </item>
    </channel>
</rss>