<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Thu, 14 Aug 2025 12:36:28 GMT</lastBuildDate>
    <item>
      <title>我给了chatgpt脸</title>
      <link>https://www.reddit.com/r/programming/comments/1mpzbkp/i_gave_chatgpt_a_face/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/santosh_arron      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mpzbkp/i_gave_chatgpt_a_face/</guid>
      <pubDate>Thu, 14 Aug 2025 12:31:20 GMT</pubDate>
    </item>
    <item>
      <title>漆 -  AI工作流的GitHub动作（FOSS）</title>
      <link>https://www.reddit.com/r/programming/comments/1mpz1it/lacquer_github_actions_for_ai_workflows_foss/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿，想分享我一直在开发的开源项目。 漆是AI编排引擎，将Github Actions经验带入AI工作流程。在YAML中编写复杂的代理管道，在您的终端进行本地测试，并用单个Go二进制部署任何地方。 我建造了这一点，因为我对当前的景观感到沮丧 - 一切似乎都是围墙花园后面的拖放接口。我想要一种自然适合开发人员的工作流程的东西：编写代码，将其控制，本地运行，然后将生产运行而不会出现惊喜。 用漆您可以定义多代理工作流程，整合自定义工具并组成可重复使用的组件，并在声明性的yaml中 - 实际上是有意义的。会喜欢关于哪些功能有助于您的日常AI开发工作的反馈。  github： https：//github.com/lacquerai/lacquerai/lacquerai/lacquerai/lacquerai/lacquer  | | | | | |文档： https://lacquer.ai/docs  |网站： https://lacquer.ai    感谢您检查它！  &lt;！ -  sc_on-&gt; &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/hugorut     link link&gt; [link link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mpz1it/lacquer_github_actions_for_ai_workflows_foss/</guid>
      <pubDate>Thu, 14 Aug 2025 12:19:00 GMT</pubDate>
    </item>
    <item>
      <title>我做了一个塔玛古特（Tamagotchi</title>
      <link>https://www.reddit.com/r/programming/comments/1mpyygj/i_made_a_tamagotchi_that_lives_in_your_claude/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  这是一个真正的tamagotchi，需要定期护理 - 喂养它，玩，清洁它或感到悲伤。扭曲？它观看您的编码 会议，并对您的工作做出反应。它会分享“这是很多待话的评论……”的想法。或者当您 调试数小时时会感到疲倦。 您的代码越多，它就越饥饿。休息一下。一天完成后，让它入睡。令人惊讶的是，它擅长 使您更了解您的编码马拉松。 您的宠物生活在克劳德代码的底部，在工作时呼吸和思考。它具有闲置的动画，对您的 行动做出反应，并根据您对待它的方式发展自己的个性。观看 被忽视时庆祝它会庆祝。 要安装和设置，请查看回购： https://github.com/ido-levi/claude-claude-code-code-tamagotchi 提交由＆＃32; /u/u/u/standard_excuse7988       &lt;a href =“ https://www.reddit.com/r/programming/comments/1mpyygj/i_made_made_a_tamagotchi_that_that_lives_in_your_your_claude/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mpyygj/i_made_a_tamagotchi_that_lives_in_your_claude/</guid>
      <pubDate>Thu, 14 Aug 2025 12:15:10 GMT</pubDate>
    </item>
    <item>
      <title>document.write</title>
      <link>https://www.reddit.com/r/programming/comments/1mpypck/documentwrite/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/wand_to_want      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mpypck/documentwrite/</guid>
      <pubDate>Thu, 14 Aug 2025 12:03:42 GMT</pubDate>
    </item>
    <item>
      <title>寻找开发人员</title>
      <link>https://www.reddit.com/r/programming/comments/1mpxnz8/looking_for_developers/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/GOALCATCHERGOAT   [link]   [commist]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mpxnz8/looking_for_developers/</guid>
      <pubDate>Thu, 14 Aug 2025 11:14:01 GMT</pubDate>
    </item>
    <item>
      <title>让我们做游戏吧！ 304：执行堆叠极限</title>
      <link>https://www.reddit.com/r/programming/comments/1mpvsic/lets_make_a_game_304_enforcing_stacking_limits/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/apeloverage      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mpvsic/lets_make_a_game_304_enforcing_stacking_limits/</guid>
      <pubDate>Thu, 14 Aug 2025 09:29:44 GMT</pubDate>
    </item>
    <item>
      <title>API Live Sync＃3：实时同步服务</title>
      <link>https://www.reddit.com/r/programming/comments/1mpv6vw/api_live_sync_3_live_sync_service/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在我们以前的文章中，我们介绍了实时API同步的体系结构和数据结构。现在是时候卷起我们的袖子并构建使其一切正常的实际发动机了。这是我们弄脏手并编写一些实际代码的地方！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/evilhighlord      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mpv6vw/api_live_sync_3_live_sync_service/</guid>
      <pubDate>Thu, 14 Aug 2025 08:53:35 GMT</pubDate>
    </item>
    <item>
      <title>最终的Sprint复古：我10年的软件工程</title>
      <link>https://www.reddit.com/r/programming/comments/1mpt3yc/the_ultimate_sprint_retro_my_10_years_of_software/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/u/u/fraffant-impact-3521      [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mpt3yc/the_ultimate_sprint_retro_my_10_years_of_software/</guid>
      <pubDate>Thu, 14 Aug 2025 06:46:41 GMT</pubDate>
    </item>
    <item>
      <title>OCAML编程的教科书和视频课程</title>
      <link>https://www.reddit.com/r/programming/comments/1mpr1ih/textbook_and_video_course_on_ocaml_programming/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mpr1ih/textbook_and_video_course_on_ocaml_programming/</guid>
      <pubDate>Thu, 14 Aug 2025 04:50:41 GMT</pubDate>
    </item>
    <item>
      <title>Numba V2编译器设计</title>
      <link>https://www.reddit.com/r/programming/comments/1mpr146/numba_v2_compiler_design/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mpr146/numba_v2_compiler_design/</guid>
      <pubDate>Thu, 14 Aug 2025 04:50:09 GMT</pubDate>
    </item>
    <item>
      <title>茴香库作为单个文件</title>
      <link>https://www.reddit.com/r/programming/comments/1mpr0r6/fennel_libraries_as_single_files/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/ketralnis   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mpr0r6/fennel_libraries_as_single_files/</guid>
      <pubDate>Thu, 14 Aug 2025 04:49:36 GMT</pubDate>
    </item>
    <item>
      <title>MadyouReset：将http/2服务器转向自身</title>
      <link>https://www.reddit.com/r/programming/comments/1mpqzjr/madeyoureset_turning_http2_server_against_itself/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/ketralnis      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mpqzjr/madeyoureset_turning_http2_server_against_itself/</guid>
      <pubDate>Thu, 14 Aug 2025 04:47:49 GMT</pubDate>
    </item>
    <item>
      <title>从Pytest的参数开始</title>
      <link>https://www.reddit.com/r/programming/comments/1mpqyxy/starting_with_pytests_parametrize/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/ketralnis   [link] ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mpqyxy/starting_with_pytests_parametrize/</guid>
      <pubDate>Thu, 14 Aug 2025 04:46:53 GMT</pubDate>
    </item>
    <item>
      <title>我如何做（类型安全）Container类型</title>
      <link>https://www.reddit.com/r/programming/comments/1mpqyxe/how_i_do_typesafe_container_types_in_c/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mpqyxe/how_i_do_typesafe_container_types_in_c/</guid>
      <pubDate>Thu, 14 Aug 2025 04:46:52 GMT</pubDate>
    </item>
    <item>
      <title>SSA上的线性扫描注册分配</title>
      <link>https://www.reddit.com/r/programming/comments/1mpqynt/linear_scan_register_allocation_on_ssa/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mpqynt/linear_scan_register_allocation_on_ssa/</guid>
      <pubDate>Thu, 14 Aug 2025 04:46:29 GMT</pubDate>
    </item>
    </channel>
</rss>