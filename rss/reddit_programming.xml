<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sat, 26 Apr 2025 09:14:59 GMT</lastBuildDate>
    <item>
      <title>开放社区经营的域注册表</title>
      <link>https://www.reddit.com/r/programming/comments/1k8859g/an_open_communityrun_domain_registry/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  现场推动了我的周末项目。 称其为“ ”域项目＆quort  它在我们管理的域下提供了免费的子域。 href =“ http://owns.it.com/”&gt; http：// [username] .owns.it.com    一切都是开放性的，并在 github    社区可以添加新的域。 请随时在仓库上放一颗星星 +抓住自己的空间。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/getemtanvir     [link]&gt; [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k8859g/an_open_communityrun_domain_registry/</guid>
      <pubDate>Sat, 26 Apr 2025 08:23:21 GMT</pubDate>
    </item>
    <item>
      <title>DSA书建议</title>
      <link>https://www.reddit.com/r/programming/comments/1k86wsa/dsa_book_suggestion/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我正在用python学习DSA。我想练习更多，并从书籍中获得更多理论知识。一些最好的书籍可以用python   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/mutassimalzeem       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k86wsa/dsa_book_suggestion/</guid>
      <pubDate>Sat, 26 Apr 2025 06:56:47 GMT</pubDate>
    </item>
    <item>
      <title>罐头单位 - 贝孔森</title>
      <link>https://www.reddit.com/r/programming/comments/1k86pd4/cannegativenumbersbepalindromes/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在数字理论和计算机科学的背景下，通信数通常被定义为一个整数，当数字逆转时，其数字时保持不变。       诸如121之类的积极整数，例如121，相反的形式仍然是121，仍然是121，满足palindrome的次数。数字产生121-，这既不是原始输入的有效数字，也不等于原始输入。  从技术上讲，在标准数学定义下，负数不被视为palindromic ，主要是由于负面迹象的存在，主要是因为反向形式不是有效的integer表示。默认情况下，明确视为 非palindromic 。 在实现函数以检查整数是否是单位室时，立即返回false以获取任何负输入吗？还是有上下文可以接受-121作为文接受？ 有兴趣听取您的观点，尤其是如果您在现实世界代码库中看到了例外或特定的算法挑战。提交由＆＃32; /u/u/special_oil_8030    href =“ http://reddit.com/r/askprogrammment/comments/abc123/can_negation_numbers_be_palindromes/”&gt; [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k86pd4/cannegativenumbersbepalindromes/</guid>
      <pubDate>Sat, 26 Apr 2025 06:42:55 GMT</pubDate>
    </item>
    <item>
      <title>掌握应急：综合实践指南</title>
      <link>https://www.reddit.com/r/programming/comments/1k863sa/mastering_regex_a_comprehensive_practical_guide/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/lazyhawk20   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k863sa/mastering_regex_a_comprehensive_practical_guide/</guid>
      <pubDate>Sat, 26 Apr 2025 06:03:25 GMT</pubDate>
    </item>
    <item>
      <title>这就是我们一直在这里做事的方式</title>
      <link>https://www.reddit.com/r/programming/comments/1k85b35/thats_how_weve_always_done_things_around_here/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我们比我们想象的要多：我们继承了一个过程或规则并继续遵循它，而无需质疑为什么它首先存在。&lt; /p&gt;  &lt; /p&gt; 它就像那个旧的故事：有人在烹饪之前砍下了土耳其的尾巴，因为他们的烹饪前，因为他们的大人是这样做的。 （剧透警报，奶奶的锅太小了。） 一些“土耳其尾巴”的例子我已经看过：  遵循乏味的开发过程，没人会再理解。 执行80个字符的线路限制…在2025年。 将Todo评论在6+年以上。     传统可能会有所帮助。但是，如果我们不质疑它，它可能会变成纯粹的行李。  您在公司或项目中看到的最巨大的“土耳其尾巴”是什么？   好奇地听到别人遇到了什么。 🦃  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/alexcristea      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k85b35/thats_how_weve_always_done_things_around_here/</guid>
      <pubDate>Sat, 26 Apr 2025 05:12:16 GMT</pubDate>
    </item>
    <item>
      <title>React Chealiation：组件后面的隐藏引擎</title>
      <link>https://www.reddit.com/r/programming/comments/1k83h8g/react_reconciliation_the_hidden_engine_behind/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/stackoverflooooooow       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k83h8g/react_reconciliation_the_hidden_engine_behind/</guid>
      <pubDate>Sat, 26 Apr 2025 03:22:57 GMT</pubDate>
    </item>
    <item>
      <title>我们如何在春季注入豆子？</title>
      <link>https://www.reddit.com/r/programming/comments/1k82o5c/how_can_we_inject_beans_in_spring/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/decuntication-ad2036     ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k82o5c/how_can_we_inject_beans_in_spring/</guid>
      <pubDate>Sat, 26 Apr 2025 02:38:55 GMT</pubDate>
    </item>
    <item>
      <title>边缘的推论：从数据中心AI转移如何重新设计系统设计</title>
      <link>https://www.reddit.com/r/programming/comments/1k82koo/inference_at_the_edge_how_the_shift_away_from/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/mqian41     [link]     [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k82koo/inference_at_the_edge_how_the_shift_away_from/</guid>
      <pubDate>Sat, 26 Apr 2025 02:33:34 GMT</pubDate>
    </item>
    <item>
      <title>超级大国，陷阱和社区：AI时代的软件工程...</title>
      <link>https://www.reddit.com/r/programming/comments/1k82c64/superpowers_pitfalls_community_software/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/usare_algae9609     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k82c64/superpowers_pitfalls_community_software/</guid>
      <pubDate>Sat, 26 Apr 2025 02:21:00 GMT</pubDate>
    </item>
    <item>
      <title>我爱Raylib CS！</title>
      <link>https://www.reddit.com/r/programming/comments/1k80u4j/i_love_raylib_cs/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  对Raylib的C port后面的人们的巨大尊重！从第一天开始，我就一直在使用原始C版本，但是最近我一直在玩这个端口，只是为了好玩。完全怀旧的是，我最终也重新创建了那些旧的flash“元素”沙盒游戏之一，没有什么真正喜欢的小项目。无论如何，港口真的值得一试，就像您与C＃一起合作并拍摄一个照片，就像原始版一样有趣和可爱。 （哦，关于我的游戏是的，如果有人好奇的话，也是开源的： https：//github.com/mralexander-2000/mralexander-2000/elements-2000/elements-sandbox-sandbox-sandbox-sandbox-sandbox ，您可能会在您的某些东西上帮助您 -   &gt; ） ＆＃32;提交由＆＃32; /u/u/u/lalek0sgaming     link link&gt; [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k80u4j/i_love_raylib_cs/</guid>
      <pubDate>Sat, 26 Apr 2025 01:00:22 GMT</pubDate>
    </item>
    <item>
      <title>GCC 15.1发布</title>
      <link>https://www.reddit.com/r/programming/comments/1k7w1vi/gcc_151_released/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [commist]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k7w1vi/gcc_151_released/</guid>
      <pubDate>Fri, 25 Apr 2025 21:12:54 GMT</pubDate>
    </item>
    <item>
      <title>Beos文件系统，OS Geek回顾</title>
      <link>https://www.reddit.com/r/programming/comments/1k7w0wx/the_beos_file_system_an_os_geek_retrospective/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k7w0wx/the_beos_file_system_an_os_geek_retrospective/</guid>
      <pubDate>Fri, 25 Apr 2025 21:11:43 GMT</pubDate>
    </item>
    <item>
      <title>用导轨构建强大的数据同步框架</title>
      <link>https://www.reddit.com/r/programming/comments/1k7w0p6/building_a_robust_data_synchronization_framework/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis       [commist]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k7w0p6/building_a_robust_data_synchronization_framework/</guid>
      <pubDate>Fri, 25 Apr 2025 21:11:28 GMT</pubDate>
    </item>
    <item>
      <title>QT中L10N和I18N选择的最新变化</title>
      <link>https://www.reddit.com/r/programming/comments/1k7w0my/some_recent_changes_to_choice_of_l10n_and_i18n_in/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/ketralnis   [link]   [注释]    ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k7w0my/some_recent_changes_to_choice_of_l10n_and_i18n_in/</guid>
      <pubDate>Fri, 25 Apr 2025 21:11:24 GMT</pubDate>
    </item>
    <item>
      <title>在Ruby中写一个口译员</title>
      <link>https://www.reddit.com/r/programming/comments/1k7vzoz/write_an_interpreter_in_ruby/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      link”   [commist]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1k7vzoz/write_an_interpreter_in_ruby/</guid>
      <pubDate>Fri, 25 Apr 2025 21:10:21 GMT</pubDate>
    </item>
    </channel>
</rss>