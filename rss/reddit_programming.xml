<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Wed, 09 Jul 2025 18:23:23 GMT</lastBuildDate>
    <item>
      <title>跳过机器人头痛：建立只有一个API的AI会议助手</title>
      <link>https://www.reddit.com/r/programming/comments/1lvpyis/skip_the_bot_headaches_build_ai_meeting/</link>
      <description><![CDATA[We built EuroMeet API—a developer toolkit that slashes 4-6 weeks off building custom AI meeting solutions. Whether you’re building internal tools or developing AI meeting assistants for clients, EuroMeet gives you the backend you can trust. 🔐 Why engineering teams choose EuroMeet API: 🔹 Use your own bot — or go bot-free with direct audio integration 🔹 Get transcripts, summaries, and action items from any call 🔹 Simple API integration with Slack, Notion, Jira, or custom agent workflows 🔹 Hosted in Europe — fully GDPR-compliant 🔹 Flat pricing, no per-seat or per-feature complexities Save your team weeks of engineering effort — and get total control over how meeting intelligence flows through your org。 👉加入候补名单：uromeet-api.com   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/usemopherawkward37       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lvpyis/skip_the_bot_headaches_build_ai_meeting/</guid>
      <pubDate>Wed, 09 Jul 2025 18:13:29 GMT</pubDate>
    </item>
    <item>
      <title>40分钟内功能性编程•Russ Olsen</title>
      <link>https://www.reddit.com/r/programming/comments/1lvowkc/functional_programming_in_40_minutes_russ_olsen/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/goto-con       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lvowkc/functional_programming_in_40_minutes_russ_olsen/</guid>
      <pubDate>Wed, 09 Jul 2025 17:32:42 GMT</pubDate>
    </item>
    <item>
      <title>人工智能编码助手在玩具项目上工作得很好。这就是为什么他们在真实代码库上失败的原因</title>
      <link>https://www.reddit.com/r/programming/comments/1lvov6d/ai_coding_assistants_work_great_on_toy_projects/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我们知道这是代码助手的大问题！他们错过了关键上下文，您已经编写的重塑函数，从不完整的信息中做出大胆的假设，并在真实代码库上达到上下文限制。经过大量的时间，努力，反复试验，我们终于正确地解决了这个问题。完全透明：我是Onuro AI的创始工程师，但是这个问题在我们开始构建解决方案之前很久就让我们发疯了。我们为我们的编码代理创建了一个体系结构，该体系结构允许其在任何任意尺寸的代码库上表现良好。这是问题和我们的解决方案。  问题： 当代码助理需要查找上下文时，他们会挖掘您的整个代码库并积累大量无关的信息。然后，随着他们获得更多上下文，由于信息过载，它们实际上会得到邓布。因此，您最终获得了在小型项目上效果很好的AI工具，但是当您扩展到真实的代码库时变得毫无用处。有些代码助理收集的上下文很少，因此创建了重复的文件，认为某些文件不在您的项目中。这是一些人谈论问题的帖子href =“ https://www.reddit.com/r/cursor/comments/1i9ub51/codebase_became_too_complex_any_way_way_way_to_regain/”&gt; codebase变得太复杂了。 Any way to re-gain kownledge over it with Cursor?  How to make cursor work with a huge codebase  我的项目变得如此之大，以至于无法正确地理解                 研究代理 我们首先要在您的代码库中进行专门的代理深度研究，发现可能与解决其任务无关的任何文件。它将在您的代码库周围进行语义和词汇搜索，直到它确定它找到了所需的一切。然后，它将注意其确定的文件实际上与解决任务有关，并将其交给编码代理。  步骤2-专用编码代理 即使在开始之前，我们的编码代理将已经拥有所需的所有上下文，而无需在收集此上下文时从步骤1中发现的任何无关信息。从一开始就有一个干净，优化的上下文窗口，它将开始进行更改。我们的编码代理可以更改文件，修复自己的错误，运行终端命令，并且在感觉完成后，它将请求AI生成的代码审核，以确保其更改得到很好的实现。  如果您要处理相同的上下文限制，并且想要随着代码库的增长而真正变得更聪明的AI编码助手，请给它拍摄。您可以在Jetbrains Marketplace中找到插件，或在 onuro.ai     &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/valorantna      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lvov6d/ai_coding_assistants_work_great_on_toy_projects/</guid>
      <pubDate>Wed, 09 Jul 2025 17:31:11 GMT</pubDate>
    </item>
    <item>
      <title>Red Hat只是扩展了免费的企业开发人员RHEL的自由访问</title>
      <link>https://www.reddit.com/r/programming/comments/1lvoior/red_hat_just_expanded_free_access_to_rhel_for/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/Tanglesome   [link] ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lvoior/red_hat_just_expanded_free_access_to_rhel_for/</guid>
      <pubDate>Wed, 09 Jul 2025 17:17:58 GMT</pubDate>
    </item>
    <item>
      <title>用粘土和Nanovg滚动自己的游戏中的UI</title>
      <link>https://www.reddit.com/r/programming/comments/1lvmn93/roll_your_own_ingame_ui_with_clay_and_nanovg/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://dev.to/linkdd/roll-your-owon-in--in-game-ui-with-clay-and-and-nanovg-part-part-part-25pf”&gt; [link]   ＆＃32;   [注释]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lvmn93/roll_your_own_ingame_ui_with_clay_and_nanovg/</guid>
      <pubDate>Wed, 09 Jul 2025 16:04:40 GMT</pubDate>
    </item>
    <item>
      <title>尝试Openai codex CLI 1个月后，这实际上是有效的（以及只是炒作）</title>
      <link>https://www.reddit.com/r/programming/comments/1lvlhrb/after_trying_openai_codex_cli_for_1_month_heres/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我已经尝试了一个月的OpenAI Codex CLI。这是我尝试过的几件事： →代码库分析（零上下文）：准确的体系结构，Flow＆amp;代码说明→实时摄像机X射线效果（Next.js）：使用Web Camera API（一个命令）→使用ScreenShot重新创建网站：，只有一个命令（不是100％）（即使有100％的可维护代码）， &lt;强度 actually works: - With some patience, it can explain codebases and provide you the complete flow of architecture (makes the work easier) - Safe experimentation via sandboxing + git-aware logic - Great for small, self-contained tasks - Due to TOML-based config, you can point at Ollama, local Mistral models or even Azure OpenAI  每个人都出了什么问题：    - 倾倒整个旧的代码案例破坏了AI注意  - 通过体系结构的决策信任AI（更好地实现）  implights：  imhighights：      - 轻松设置（ brew install install codex  locals） self-hostable - 3 operational modes with --approval-mode flag to control autonomy - Everything happens locally so code stays private unless you opt to share - Warns if auto-edit or full-auto is enabled on non git-tracked directories - Full-auto runs in a sandboxed,可以通过定义 mcp_servers  e节的定义〜/.codex/.codex/config.toml          href =“ https://levelup.gitconnected.com/the-guide-to-popenai-codex-cli-e40f21f21f279d8?sk = c98c93344b821c5fb0909090905c22222222222222222222222222222222222222229c9999c9997&gt; sc_on-&gt;＆＃32;提交由＆＃32; /u/u/anmolbaranwal      &lt;a href =“ https://www.reddit.com/r/programming/comments/1lvlhrb/1lvlhrb/after_trying_openai_openai_codex_cli_for_1_month_heres/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lvlhrb/after_trying_openai_codex_cli_for_1_month_heres/</guid>
      <pubDate>Wed, 09 Jul 2025 15:19:38 GMT</pubDate>
    </item>
    <item>
      <title>Node.js采访问答：第18天</title>
      <link>https://www.reddit.com/r/programming/comments/1lvl4rz/nodejs_interview_qa_day_18/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/myssiriouseye8494     [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lvl4rz/nodejs_interview_qa_day_18/</guid>
      <pubDate>Wed, 09 Jul 2025 15:05:30 GMT</pubDate>
    </item>
    <item>
      <title>Angular面试问答：第24天</title>
      <link>https://www.reddit.com/r/programming/comments/1lvl4i7/angular_interview_qa_day_24/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/myssiriouseye8494     [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lvl4i7/angular_interview_qa_day_24/</guid>
      <pubDate>Wed, 09 Jul 2025 15:05:12 GMT</pubDate>
    </item>
    <item>
      <title>OOP与以数据为导向的编程：选择哪一个？ Venkat Subramaniam</title>
      <link>https://www.reddit.com/r/programming/comments/1lvk3ac/oop_vs_data_oriented_programming_which_one_to/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/babydue3290      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lvk3ac/oop_vs_data_oriented_programming_which_one_to/</guid>
      <pubDate>Wed, 09 Jul 2025 14:23:35 GMT</pubDate>
    </item>
    <item>
      <title>AI编程范例：时间轴</title>
      <link>https://www.reddit.com/r/programming/comments/1lvj6ue/ai_programming_paradigms_a_timeline/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   AI编程字段的移动很快。我们在哪里，我们在哪里以及下一个可以前往的地方 - 简短的时间表。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/morihacky       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lvj6ue/ai_programming_paradigms_a_timeline/</guid>
      <pubDate>Wed, 09 Jul 2025 13:45:25 GMT</pubDate>
    </item>
    <item>
      <title>AI Evals：如何系统地改进和评估AI</title>
      <link>https://www.reddit.com/r/programming/comments/1lvh1zo/ai_evals_how_to_systematically_improve_and/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/gregorojstersek   [link] ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lvh1zo/ai_evals_how_to_systematically_improve_and/</guid>
      <pubDate>Wed, 09 Jul 2025 12:05:57 GMT</pubDate>
    </item>
    <item>
      <title>Kubernetes网络从数据包到吊舱</title>
      <link>https://www.reddit.com/r/programming/comments/1lvgd6t/kubernetes_networking_from_packets_to_pods/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/lucavallin       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lvgd6t/kubernetes_networking_from_packets_to_pods/</guid>
      <pubDate>Wed, 09 Jul 2025 11:29:14 GMT</pubDate>
    </item>
    <item>
      <title>赞美逆势堆栈</title>
      <link>https://www.reddit.com/r/programming/comments/1lvg5py/in_praise_of_the_contrarian_stack/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/hongminhee      link/link&gt;     [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lvg5py/in_praise_of_the_contrarian_stack/</guid>
      <pubDate>Wed, 09 Jul 2025 11:17:51 GMT</pubDate>
    </item>
    <item>
      <title>在Rust建立您的第一个ETL管道</title>
      <link>https://www.reddit.com/r/programming/comments/1lvfu2h/building_your_first_etl_pipeline_in_rust/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/idkWhyweneEdusername       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lvfu2h/building_your_first_etl_pipeline_in_rust/</guid>
      <pubDate>Wed, 09 Jul 2025 10:59:32 GMT</pubDate>
    </item>
    <item>
      <title>在NextJS应用程序中实现OpenTemetry的完整指南 - 迹线，指标和日志</title>
      <link>https://www.reddit.com/r/programming/comments/1lvfgnd/complete_guide_to_implementing_opentelemetry_in/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   vercel为您的NextJS应用程序提供了一些可观察力：函数日志，perf Insights，基本指标。但是随着应用程序的增长，裂缝开始显示。这是一系列博客，可以帮助您了解如何在NextJS应用程序中实现OpenTelemetry。除了日志，指标和痕迹外，该系列还有其他博客，重点介绍了特定用例，例如监视404，外部API，异常等。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/ankit01-oss      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lvfgnd/complete_guide_to_implementing_opentelemetry_in/</guid>
      <pubDate>Wed, 09 Jul 2025 10:37:04 GMT</pubDate>
    </item>
    </channel>
</rss>