<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Tue, 12 Aug 2025 03:48:10 GMT</lastBuildDate>
    <item>
      <title>动手使用“分布式系统实施-254 -Lesson的课程”的系统设计。</title>
      <link>https://www.reddit.com/r/programming/comments/1mnv4y4/hands_on_system_design_with_distributed_systems/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在此处查看详细的课程。 为什么在此课程中？ 在短短一年内就从头开始构建完整的，生产的系统设计。每天都采用实用的，动手的任务，具有具体的输出，这些任务可以逐步发展您在可扩展体系结构，组件设计和现代DevOps实践方面的专业知识。 您将构建的 能够构建的综合系统：       有效地使用优化的算法 提供毫秒潜伏期 支持企业部署的多租赁 在多个地区进行高可用性          seeking to bridge the gap between academic theory and production-ready skills Job Seekers looking to enhance their resume with demonstrated practical experience Software Engineers wanting to level up from application development to system architecture System Architects interested in modern, cloud-native architectures DevOps Engineers expanding their knowledge of scalable systems Backend Engineers building expertise in high-performance systems Engineering Managers who need technical depth to lead system design efforts Product Managers seeking technical understanding of scalable architectures  What Makes This Course Different?  Practical Focus: Build real components with tangible outputs every single day Progressive Learning: Start with basics and advance to complex system design concepts Full-Stack Coverage: Spans from low-level optimization to high-level architecture Production心态：解决安全性，可伸缩性，可观察性和容忍度   现代技术：合并诸如Kubernetes，Redis和消息队列和消息队列     端到端 - 端到端 - 末端系统 覆盖  在此处检查以获取详细  -   254课程课程课程课程              关注 数据库选择，优化和访问模式  API设计和协议考虑因素 在多个系统层处的缓存策略 负载平衡和流量管理 安全原理和实施 我们通过建立一个生产级平台来展示您的技能并为高级工程角色打开大门。提交由＆＃32;  /u/Vast_Limit_247   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mnv4y4/hands_on_system_design_with_distributed_systems/</guid>
      <pubDate>Tue, 12 Aug 2025 01:14:41 GMT</pubDate>
    </item>
    <item>
      <title>长生不老药误解＃1-不要“让它崩溃”，而是“让它治愈”</title>
      <link>https://www.reddit.com/r/programming/comments/1mnpwki/elixir_misconceptions_1_dont_let_it_crash_but_let/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mnpwki/elixir_misconceptions_1_dont_let_it_crash_but_let/</guid>
      <pubDate>Mon, 11 Aug 2025 21:32:54 GMT</pubDate>
    </item>
    <item>
      <title>利用越野车Zilog C编译器</title>
      <link>https://www.reddit.com/r/programming/comments/1mnpwis/exploiting_a_buggy_zilog_c_compiler/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mnpwis/exploiting_a_buggy_zilog_c_compiler/</guid>
      <pubDate>Mon, 11 Aug 2025 21:32:52 GMT</pubDate>
    </item>
    <item>
      <title>不可思议的打字稿原始别名</title>
      <link>https://www.reddit.com/r/programming/comments/1mnpwgi/unducking_typescript_primitive_aliases/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mnpwgi/unducking_typescript_primitive_aliases/</guid>
      <pubDate>Mon, 11 Aug 2025 21:32:46 GMT</pubDate>
    </item>
    <item>
      <title>旁路GostgresQL目录开销，带有直接分区哈希计算</title>
      <link>https://www.reddit.com/r/programming/comments/1mnpvvt/bypass_postgresql_catalog_overhead_with_direct/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/ketralnis     [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mnpvvt/bypass_postgresql_catalog_overhead_with_direct/</guid>
      <pubDate>Mon, 11 Aug 2025 21:32:07 GMT</pubDate>
    </item>
    <item>
      <title>理解DRAM记忆的基本指南</title>
      <link>https://www.reddit.com/r/programming/comments/1mnpvo1/fundamental_guide_to_understanding_dram_memory/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mnpvo1/fundamental_guide_to_understanding_dram_memory/</guid>
      <pubDate>Mon, 11 Aug 2025 21:31:54 GMT</pubDate>
    </item>
    <item>
      <title>生锈的类型级别的混蛋</title>
      <link>https://www.reddit.com/r/programming/comments/1mnpvbp/rust_typelevel_fuckery/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/ketralnis   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mnpvbp/rust_typelevel_fuckery/</guid>
      <pubDate>Mon, 11 Aug 2025 21:31:31 GMT</pubDate>
    </item>
    <item>
      <title>闪闪发光的与Erlang和Elixir的互操作性</title>
      <link>https://www.reddit.com/r/programming/comments/1mnpva7/gleams_interoperability_with_erlang_and_elixir/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mnpva7/gleams_interoperability_with_erlang_and_elixir/</guid>
      <pubDate>Mon, 11 Aug 2025 21:31:29 GMT</pubDate>
    </item>
    <item>
      <title>为什么我们甚至需要SIMD说明？</title>
      <link>https://www.reddit.com/r/programming/comments/1mnpv8u/why_do_we_even_need_simd_instructions/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mnpv8u/why_do_we_even_need_simd_instructions/</guid>
      <pubDate>Mon, 11 Aug 2025 21:31:26 GMT</pubDate>
    </item>
    <item>
      <title>C中的通用容器：安全部门使用</title>
      <link>https://www.reddit.com/r/programming/comments/1mnpua3/generic_containers_in_c_safe_division_using_maybe/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mnpua3/generic_containers_in_c_safe_division_using_maybe/</guid>
      <pubDate>Mon, 11 Aug 2025 21:30:25 GMT</pubDate>
    </item>
    <item>
      <title>CPU时钟周期的操作成本</title>
      <link>https://www.reddit.com/r/programming/comments/1mnpu87/operation_costs_in_cpu_clock_cycles/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mnpu87/operation_costs_in_cpu_clock_cycles/</guid>
      <pubDate>Mon, 11 Aug 2025 21:30:22 GMT</pubDate>
    </item>
    <item>
      <title>比纪念品快</title>
      <link>https://www.reddit.com/r/programming/comments/1mnptmo/going_faster_than_memcpy/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mnptmo/going_faster_than_memcpy/</guid>
      <pubDate>Mon, 11 Aug 2025 21:29:43 GMT</pubDate>
    </item>
    <item>
      <title>别忘了安德鲁·凯利（Andrew Kelley）冲洗</title>
      <link>https://www.reddit.com/r/programming/comments/1mnpstp/dont_forget_to_flush_by_andrew_kelley/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [commist]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mnpstp/dont_forget_to_flush_by_andrew_kelley/</guid>
      <pubDate>Mon, 11 Aug 2025 21:28:51 GMT</pubDate>
    </item>
    <item>
      <title>编译LISP：关闭转换</title>
      <link>https://www.reddit.com/r/programming/comments/1mnpsi4/compiling_a_lisp_closure_conversion/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis       [commist]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mnpsi4/compiling_a_lisp_closure_conversion/</guid>
      <pubDate>Mon, 11 Aug 2025 21:28:29 GMT</pubDate>
    </item>
    <item>
      <title>参观标准ML</title>
      <link>https://www.reddit.com/r/programming/comments/1mnpryi/a_tour_of_standard_ml/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mnpryi/a_tour_of_standard_ml/</guid>
      <pubDate>Mon, 11 Aug 2025 21:27:54 GMT</pubDate>
    </item>
    </channel>
</rss>