<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sun, 10 Aug 2025 18:22:34 GMT</lastBuildDate>
    <item>
      <title>大规模负载平衡：隐藏的挑战和经验教训</title>
      <link>https://www.reddit.com/r/programming/comments/1mmo3d0/load_balancing_at_scale_hidden_challenges_and/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  负载平衡似乎很简单，直到您在动态环境中以大规模运行。 在大型系统中，无论是Kubernetes，Cansure Erchingeration，还是传统的服务部署，上游服务器都在不断变化。 Workloads vary in complexity, requests can be uneven, and simple algorithms like round-robin often break down. This post looks at the real-world issues that show up in production: • Traffic imbalance during host rotation • Cold-start spikes when new instances join • How different algorithms (least connections, power-of-two-choices, consistent hashing) behave under stress • The impact of proxy architecture （Envoy vs Haproxy）关于负载分配精度 它是基于从高流量环境中的操作反向代理中学到的经验教训，以及公平，效率和弹性之间的权衡。  href =“ https://startwithawhy.com/reverseproxy/2025/08/08/reverseproxy-deep-dive-part-part4.html?utm_source = reddit＆utm_medium = post = post 2 post 2 post 2 post 2 post 2 post 2 post 2 post 2 post 2 post 2 post 2 post＆amp； “&gt; https://startwithawhy.com/reverseproxy/2025/08/08/reverseproxy-deep-dive-part4.html?utm_source = reddit＆utm_medium = post＆utm_medium = post＆umtm_camp; utm_campeign=r_campeign=r_programmoggrogment   很好奇听到他人如何在自己的系统中解决这些挑战。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/miggyishu      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmo3d0/load_balancing_at_scale_hidden_challenges_and/</guid>
      <pubDate>Sun, 10 Aug 2025 17:12:01 GMT</pubDate>
    </item>
    <item>
      <title>招聘很烂：工程师对雇用的看法</title>
      <link>https://www.reddit.com/r/programming/comments/1mmmwy8/hiring_sucks_an_engineers_perspective_on_hiring/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  可以在当天改善招聘？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/skybar-one       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmmwy8/hiring_sucks_an_engineers_perspective_on_hiring/</guid>
      <pubDate>Sun, 10 Aug 2025 16:26:23 GMT</pubDate>
    </item>
    <item>
      <title>构建REDIS克隆 - 第2.0部分：将单个节点变成分布式群集</title>
      <link>https://www.reddit.com/r/programming/comments/1mmmtyo/building_a_redis_clone_part_20_turning_a_single/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/sushant098123     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmmtyo/building_a_redis_clone_part_20_turning_a_single/</guid>
      <pubDate>Sun, 10 Aug 2025 16:23:12 GMT</pubDate>
    </item>
    <item>
      <title>Ngrok  - 您的Local主持人的护照</title>
      <link>https://www.reddit.com/r/programming/comments/1mml8pf/ngrok_your_localhosts_passport_to_the_internet/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  如果您曾经想分享本地应用程序，远程测试API或在不部署的情况下运行实时Websocket演示-Ngrok是Lifesaver。设置ngrok  创建安全http＆amp; HTTPS隧道 实时应用程序的WebSocket隧道  API测试从任何地方 交通检查＆amp; debugging tools  No matter if you’re working in Node.js, Python, or any other stack, ngrok can turn your localhost into a secure public URL in seconds. 🎥 Watch here: Ngrok - Your Localhost’s Passport到Internet   很想听听您使用的Ngrok技巧或您使用的任何创造性方法！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/azad_11014       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mml8pf/ngrok_your_localhosts_passport_to_the_internet/</guid>
      <pubDate>Sun, 10 Aug 2025 15:20:23 GMT</pubDate>
    </item>
    <item>
      <title>ELI5对帽定理的解释。</title>
      <link>https://www.reddit.com/r/programming/comments/1mml4x2/eli5_explanation_of_the_cap_theorem/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/trolleid     [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mml4x2/eli5_explanation_of_the_cap_theorem/</guid>
      <pubDate>Sun, 10 Aug 2025 15:16:05 GMT</pubDate>
    </item>
    <item>
      <title>系统设计中的势力：完整示例</title>
      <link>https://www.reddit.com/r/programming/comments/1mmkzqa/idempotency_in_system_design_full_example/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/trolleid     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmkzqa/idempotency_in_system_design_full_example/</guid>
      <pubDate>Sun, 10 Aug 2025 15:10:12 GMT</pubDate>
    </item>
    <item>
      <title>非程序员解决编程问题的解决方案。</title>
      <link>https://www.reddit.com/r/programming/comments/1mmkarz/nonprogrammers_solutions_to_programming_problems/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/nsredditshitposter     [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmkarz/nonprogrammers_solutions_to_programming_problems/</guid>
      <pubDate>Sun, 10 Aug 2025 14:41:13 GMT</pubDate>
    </item>
    <item>
      <title>ShadowEngine2D v1.2.0：基于锈2D游戏引擎，带有物理，tilemaps和性能分析，现在在Crates.io上</title>
      <link>https://www.reddit.com/r/programming/comments/1mmjudi/shadowengine2d_v120_rustbased_2d_game_engine_with/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我刚刚发布了ShadowEngine2d v1.2.0，用Rust编写的2D游戏引擎。  v1.2.0中的新功能：   - 带有Font Management           -  2D Pysict prode prosect  - Performance profiler with FPS tracking and memory monitoring - Save/load system with JSON serialization and auto-save Technical stack: - WGPU for cross-platform rendering - Winit for windowing and input handling - Parry2d for physics simulation - Serde for serialization - Glam for math operations Installation: cargo add shadowengine2d The crate includes 4 examples demonstrating basic usage, modern game structure, debug output, and all v1.2.0 features. Licensed under MIT and Apache 2.0.引擎用硬件加速图形渲染支持Windows，MacOS和Linux。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/suremeat5400      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmjudi/shadowengine2d_v120_rustbased_2d_game_engine_with/</guid>
      <pubDate>Sun, 10 Aug 2025 14:22:01 GMT</pubDate>
    </item>
    <item>
      <title>rustroid-在您的Android手机上本地运行的锈IDE。</title>
      <link>https://www.reddit.com/r/programming/comments/1mmjt5i/rustroid_the_rust_ide_that_runs_locally_on_your/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  你好。我是穆罕默德·哈立尔（Mohammed Khaled），我直接直接达到了重点。 我刚刚完成了我一生中最大的项目之一。大约一年的时间，我一直在为Android创作IDE（在本地运行Android）。根据IDE，我的确是指一个集成的开发环境，该环境提供了语法突出显示，自动完成，诊断，签名帮助，进行定义，声明，实现，显示文档等的功能。 当前，它是针对Rust Programming语言的。 I chose Rust because it&#39;s consistently one of the most admired languages in the annual Stack Overflow surveys. A lot of the code in the IDE is shared, so it wouldn&#39;t be too difficult to adapt it for other languages in the future. The IDE does even allow the user to export APKs for graphical applications and games and also lets them run the app quickly without having to install it.该应用实际上使用一种奇怪的动态加载技术来从其从您的代码生成的共享库中加载自身。 我已经为应用程序创建了一个网站，其中我详细介绍了它的功能： href =“ https://rustroid.is-a.dev/story”&gt; https://rustroid.is-a.dev/story   该应用程序可在Google Play上获得。  https://play.google.com/store/store/pplay/pplay/pplay/pplay/pplay/details/details/details/details/details/detail-com..mohamm- hamm- hammedkhc.iide.iide.rust一下免责声明：该应用程序不是开源和/或免费的，但它非常便宜。它也只需$ 4.50。播放：  https：//play.google.com/store/store/store/store/store/papps/details/details/details/details?id=com.mohammed=com.mohammed =/sc.mohammedkhc.iide.rust ＆＃32;提交由＆＃32; /u/u/u/mohammedkhc       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmjt5i/rustroid_the_rust_ide_that_runs_locally_on_your/</guid>
      <pubDate>Sun, 10 Aug 2025 14:20:39 GMT</pubDate>
    </item>
    <item>
      <title>写了一个对初学者友好的线性回归教程（带有完整代码）</title>
      <link>https://www.reddit.com/r/programming/comments/1mmjgrw/wrote_a_beginnerfriendly_linear_regression/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   嘿大家！  我刚刚发布了一份简单线性回归的初学者友好指南，我涵盖了我所涵盖的：      理解回归vs分类 li&gt; fir&gt; line li&gt; li li li li li  li  一个带有代码，视觉效果和预测的动手Python项目  它是为刚开始在ML中启动的任何人设计的，而他们想通过构建而不会学习 -     。 如果您有机会阅读它，我会喜欢您的反馈，upvote，如果您觉得很有用，我会喜欢它。您的支持将帮助更多的初学者发现！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/motor_cry_4380       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmjgrw/wrote_a_beginnerfriendly_linear_regression/</guid>
      <pubDate>Sun, 10 Aug 2025 14:06:03 GMT</pubDate>
    </item>
    <item>
      <title>软件现代化项目难题：三思而后行 - 焦点是说没有</title>
      <link>https://www.reddit.com/r/programming/comments/1mmh9ze/software_modernization_projects_dilemma_think/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://medium.com/@hobokendays/software-modernization-projects-dilemma-part-part-2-7f6002c4b6f1”&gt; [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmh9ze/software_modernization_projects_dilemma_think/</guid>
      <pubDate>Sun, 10 Aug 2025 12:27:40 GMT</pubDate>
    </item>
    <item>
      <title>功能颜色代表不同的执行上下文</title>
      <link>https://www.reddit.com/r/programming/comments/1mmfakw/function_colors_represent_different_execution/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/shadowys     ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmfakw/function_colors_represent_different_execution/</guid>
      <pubDate>Sun, 10 Aug 2025 10:38:57 GMT</pubDate>
    </item>
    <item>
      <title>☝️撰写像高级工程师一样的验尸</title>
      <link>https://www.reddit.com/r/programming/comments/1mmb7br/write_a_postmortem_like_a_senior_engineer/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/strategizeyourcareer   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmb7br/write_a_postmortem_like_a_senior_engineer/</guid>
      <pubDate>Sun, 10 Aug 2025 06:17:12 GMT</pubDate>
    </item>
    <item>
      <title>[P]我通过编码含义而不是数据完成了5000：1的压缩</title>
      <link>https://www.reddit.com/r/programming/comments/1mm6t2s/p_i_accomplished_50001_compression_by_encoding/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我找到了一种压缩含义（不是数据）的方法，即AI系统可以以不可能的比率进行解压缩。 传统压缩：10：1最大值（Shannon&#39;s Entropoy ottopy Limit）（Shannon&#39;s Entropoy limit）语义压缩：5000：1 per（17,500：1 p&gt;） href =“ https://docs.google.com/document/d/1xcbmxiu1rrsrsrsrsrsrsr0itw-ju85b_lyxkvk4ju6r0aekovti8/edit?usp = drive_link”将其参与完整的实现，因为他们理解含义，而不仅仅是数据模式。 乐于回答问题或在评论中提供更多示例。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/barphite       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mm6t2s/p_i_accomplished_50001_compression_by_encoding/</guid>
      <pubDate>Sun, 10 Aug 2025 02:14:38 GMT</pubDate>
    </item>
    <item>
      <title>Java 25 RC1现在可用</title>
      <link>https://www.reddit.com/r/programming/comments/1mm4hid/java_25_rc1_builds_now_available/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/bluegoliath      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mm4hid/java_25_rc1_builds_now_available/</guid>
      <pubDate>Sun, 10 Aug 2025 00:18:22 GMT</pubDate>
    </item>
    </channel>
</rss>