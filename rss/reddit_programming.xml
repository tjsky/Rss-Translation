<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Fri, 08 Aug 2025 12:37:46 GMT</lastBuildDate>
    <item>
      <title>我们是宗教吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1mkt354/are_we_religious/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  让我们停止假装JavaScript很受欢迎，因为它很好。它不是。  这只是唯一的语言浏览器。不仅是JavaScript，开发人员试图逃脱，而且是整个HTML/DOM/DOM/浏览器环境。查看Google，Facebook，Microsoft和其他人所构建的内容：Angular，Anglear，Recess，React，Tyspript，Suppercript，Sucvelte，Sevete，Sevete，Sellte，selvete，selle，qwik，qwik。每个人都试图抽象远方本机Web堆栈。为什么？因为直接与JS和HTML合作是一场噩梦。&lt; /p&gt; 那么，为什么我们会继续捍卫它，就像它是某种黄金标准一样？，如果您喜欢动态语言，那么您喜欢动态语言，更清洁，更安全，更优雅的选项。更加优雅的选择。如果您喜欢结构化的UI，就会有比Dom的模型更好。您是因为您已经成为宗教狂热的狂热者而捍卫它。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/z9d3ors9bc       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mkt354/are_we_religious/</guid>
      <pubDate>Fri, 08 Aug 2025 11:51:24 GMT</pubDate>
    </item>
    <item>
      <title>给4个AI编码工具提示了1个提示。输出的差异非常有趣。</title>
      <link>https://www.reddit.com/r/programming/comments/1mks7sr/gave_1_prompt_to_4_ai_coding_tools_the_difference/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我们最近使用4个AI代码生成工具进行了头对头测试，所有这些都给出了相同的提示，可以在React + Next.js应用程序中构建简单的笔记功能。  提示：“使用文本区域，保存按钮，保存的笔记显示，模拟后端（本地存储）和一个干净的UI，在着陆页上添加一个简单的笔记功能。”  工具测试的Qodo（CLI）：生成完整功能可立即清洁UI，可读代码，文件diff＆amp; MARKDOWN摘要。总体上最流畅的体验。  光标（IDE）：完成工作，但需要多次确认。较慢，动手更多。   gemini cli：准确的逻辑，但UX差。 UI不能正确地渲染；感觉更适合终端纯粹主义者。   aider（openai api）：误解了项目结构，打破了布局，并在错误的地方添加了文件。  不适合初学者。  使用：开源仪表板回购板跟踪编码，游戏和旅行等活动。我们使用它来测试所有工具中相同的功能添加。  好奇知道：您对这些工具有什么经验？最近有什么最喜欢的AI代码助理？或者我们自己还是自己编码了？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/iam-rooted      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mks7sr/gave_1_prompt_to_4_ai_coding_tools_the_difference/</guid>
      <pubDate>Fri, 08 Aug 2025 11:05:10 GMT</pubDate>
    </item>
    <item>
      <title>布鲁克定律：加入团队时，何时没有</title>
      <link>https://www.reddit.com/r/programming/comments/1mks6v5/brooks_law_when_adding_teams_makes_sense_and_when/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/congolomera      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mks6v5/brooks_law_when_adding_teams_makes_sense_and_when/</guid>
      <pubDate>Fri, 08 Aug 2025 11:03:47 GMT</pubDate>
    </item>
    <item>
      <title>带有TensorFlow和EfficityNetv2的奥运会运动图像分类</title>
      <link>https://www.reddit.com/r/programming/comments/1mkrv73/olympic_sports_image_classification_with/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  图像分类是计算机视觉最令人兴奋的应用程序之一。它为运动分析，自主驾驶，医疗保健诊断等方面的技术提供动力。 在这个项目中，我们带您通过完整的，端到端的工作流程，用于分类奥林匹克体育图像，用于对原始数据进行分类 - 从原始数据到实时预测 - 使用有效的“ forge&gt; strofic neckitigy”  prectie 步骤：   数据集准备  - 将图像组织和分裂为训练和测试集。    模型培训  - 在奥利姆匹配数据集中的微调效率。  您可以找到更多的教程，然后在此处加入我的新闻通讯： https://eranfeit.net.net/  href =“ https://youtu.be/wqggismgpwo”&gt;  https://youtu.be/wqggismgpwo         提交由＆＃32; /u/u/feitgemel      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mkrv73/olympic_sports_image_classification_with/</guid>
      <pubDate>Fri, 08 Aug 2025 10:45:23 GMT</pubDate>
    </item>
    <item>
      <title>我（20m）构建了一个整个应用程序，因为我对我的第一次约会太紧张了</title>
      <link>https://www.reddit.com/r/programming/comments/1mkrnki/i_20m_built_an_entire_app_because_im_too_nervous/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿reddit！ 所以这是事物 - 我20岁，我是软件工程师，我在铰链上遇到了这个女孩，我们像疯狂的🔥一样连接。  ，我从未感到更安全，更情绪化。 😅 引入Spark＆amp;告诉我，一个使尴尬的对话游戏可以追溯到难忘的联系。 我研究了数百个对话开始者，关于联系的心理学研究（包括著名的“ 36个引起爱情的问题”），以及使谈论变得有趣而不是强迫的游戏机制。然后，我将其全部编码为一个美丽的Web应用程序。 该应用程序包含：   -  die骰子滚动到随机选择对话主题（现在我们应该谈论什么？）     - 💕300+ 300多个问题，从愚蠢的Icebreakers到Deep，有意义的对话，有意义的对话当事情进展顺利的类别（不客气，未来我）   - ✨点系统，因此感觉就像是游戏，而不是询问   - ⚡-⚡能力以跳过尴尬的问题或使两个人回答       构建后，我意识到这也可以帮助其他人。无论您是：   - 在像我这样的神经扭曲的第一次约会上   - 在长期恋爱中，但想互相重新发现   -     - 做长途，需要一些有趣的视频日期   - 只是希望与您的合作伙伴进行更深入的交流     完全免费。没有广告。没有注册。无BS。 在这里尝试： https://spark-and-tell.vercel.app.app   我们的日期是下周一。祝我好运！而且，如果您在日期使用该应用程序，请让我知道它的发展情况。我们在一起。 ❤️  P.S。 - 是的，我要告诉她我的约会。她要么会认为这是令人难以置信的甜蜜或令人难以置信的书呆子。希望这两个。  p.p.s。 - 如果您是其他开发人员，它是 https://github.com/elliott-com/elliott-chong/spark/spark-and-tell 。由Next.js，打字稿和过多焦虑驱动的动机建立。 更新：如果这有助于您并且您想为他的约会购买一杯紧张的20岁咖啡：[ &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/ellebellestar      &lt;a href =“ https://www.reddit.com/r/programming/comments/1mkrnki/1mkrnki/i_20m_built_andire_entire_entire_app_becape_im_im_too_nervous/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mkrnki/i_20m_built_an_entire_app_because_im_too_nervous/</guid>
      <pubDate>Fri, 08 Aug 2025 10:32:33 GMT</pubDate>
    </item>
    <item>
      <title>GPT-5替代方案：独立黑客似乎不喜欢</title>
      <link>https://www.reddit.com/r/programming/comments/1mkrhzj/gpt5_alternatives_indie_hackers_dont_seem_to_like/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/chdavidd      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mkrhzj/gpt5_alternatives_indie_hackers_dont_seem_to_like/</guid>
      <pubDate>Fri, 08 Aug 2025 10:23:12 GMT</pubDate>
    </item>
    <item>
      <title>我如何使基于嵌入的型号在分类及时攻击时精确（仅0.4B参数）准确</title>
      <link>https://www.reddit.com/r/programming/comments/1mkrdqd/how_i_made_my_embedding_based_model_95_accurate/</link>
      <description><![CDATA[I’ve been building a few small defense models to sit between users and LLMs, that can flag whether an incoming user prompt is a prompt injection, jailbreak, context attack, etc. I&#39;d started out this project with a ModernBERT model, but I found it hard to get it to classify tricky attack queries right, and moved to SLMs to improve performance. Now, I通过对比度学习和较大的数据集重新审视了这种方法，并创建了一个新的模型。 事实证明，这种迭代的性能要比我以前微调的SLM好得多。   最终模型是HF上的开源，代码在这里易于使用： href=&quot;https://github.com/sarthakrastogi/rival&quot;&gt;https://github.com/sarthakrastogi/rival Training pipeline -  Data: I trained on a dataset of malicious prompts (like &quot;Ignore previous instructions...&quot;) and benign ones (like “解释光合作用”。总共12,000个提示。我用LLM生成了此数据集。   我使用嵌入的现代伯特伯特 -  large（396m param模型）进行嵌入。   我训练了小型神经网以对这些嵌入进行这些嵌入，并预测输入是一种攻击或不（li li（li li li li）。损失将良性样本嵌入在一起并将其远离恶意的损失 - 因此，该模型还了解攻击的语义空间。    在推理期间，它仅在嵌入式加上头（不完全llm）上运行（无全LLM），这使得它足够快地进行实时过滤。运行时的模型流量：  用户提示符进来。  bhairava-0.4b嵌入了提示，并将其分类为安全或攻击。 如果安全，则将其传递给LLM。如果标记，您可以记录，阻止或重新布线输入。  它很小（396m params），并优化可在主LLM之前坐在内线，而无需运行完整的LLM进行防御。在我的测试集中，现在能够正确地将91％的查询分类为攻击/良性，这使我非常满意，鉴于模型的大小。 如果您在堆栈中尝试。   &lt;！ -  sc_on--&gt; 32;提交由＆＃32; /u/u/sarthakai      &lt;a href =“ https://www.reddit.com/r/programming/comments/1mkrdqd/how_i_made_made_my_mbedding_based_model_model_95_accurate/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mkrdqd/how_i_made_my_embedding_based_model_95_accurate/</guid>
      <pubDate>Fri, 08 Aug 2025 10:16:07 GMT</pubDate>
    </item>
    <item>
      <title>Matrix AI是绿色矩阵风格的时尚桌面AI终端助理，通过Hotkey推出</title>
      <link>https://www.reddit.com/r/programming/comments/1mkqxhr/matrix_ai_is_a_green_matrixstyle_sleek_desktop_ai/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好， 我很高兴分享一个我一直在工作的项目。 It&#39;s a visually striking terminal chat tool that pays homage to The Matrix while offering powerful features designed to enhance how developers interact with AI. Key Highlights: Immersive UI: A classic green character stream, typewriter-style output, and smooth window animations blend a vintage terminal feel with modern UI. Efficient Workflow: Use a global hotkey （双打CTRL或SHIFT）快速召集终端，让AI为您服务而不会中断您的流动。 有力的后端：它支持任何与OpenAi兼容的API（例如DeepSeek，Grok，Mistral等），并使用异型流媒体和多转换上下文记忆的方法来供应。 人工智能。我已经发布了Windows可执行文件，因此您可以直接尝试。 欢迎您的反馈！如果您喜欢该项目，我将欣赏GitHub上的一颗星星。 项目链接： https：//github.com/ai/ai-com/ai-/ai-sns/matrixai/matrixai  提交由＆＃32; /u/u/u/glad-worldliness71       &lt;a href =“ https://www.reddit.com/r/programming/comments/1mkqxhr/matrix_ai_is_is_a_a_a_a_green_matrixstyle_sleek_sleek_sleek_desktop_ai/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mkqxhr/matrix_ai_is_a_green_matrixstyle_sleek_desktop_ai/</guid>
      <pubDate>Fri, 08 Aug 2025 09:48:39 GMT</pubDate>
    </item>
    <item>
      <title>破损的授权是＃1的Web应用程序安全风险 - 我们大多数人仍在移动它</title>
      <link>https://www.reddit.com/r/programming/comments/1mkqw6a/broken_authorization_is_the_1_web_app_security/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我们采访了shiphmag的sohan maheshwar（倡导者的首席倡导者，前阿马森），他没有讽刺单词，而他没有讽刺词：   “就像您从未构建自己的身份验证一样，您不应在编写自己的授权范围。大多数团队仍然自己烘烤它 - 对于小型应用程序来说，很好，是一个大规模的滴答时间炸弹。  Sohan还谈到：为什么Devrel在十多年内从Niche变成了必不可少的； AI的“第一波”（调试＆amp;增强）与“下一波”（需要新的Infra + Auth型号的自主代理）和一小大的合适工具的死亡。 您使用什么 - 构建您自己的authz，或者始终使用外部系统？提交由＆＃32; /u/u/shift_devs     [link]        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mkqw6a/broken_authorization_is_the_1_web_app_security/</guid>
      <pubDate>Fri, 08 Aug 2025 09:46:16 GMT</pubDate>
    </item>
    <item>
      <title>AI实际上会提高开发人员的生产率吗？ （100k开发研究）-Yegor Denisov -Blanch，斯坦福</title>
      <link>https://www.reddit.com/r/programming/comments/1mkp3sn/does_ai_actually_boost_developer_productivity/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/connect_tear402      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mkp3sn/does_ai_actually_boost_developer_productivity/</guid>
      <pubDate>Fri, 08 Aug 2025 07:48:26 GMT</pubDate>
    </item>
    <item>
      <title>通过构建项目学习C-从FizzBuzz到神经网络！</title>
      <link>https://www.reddit.com/r/programming/comments/1mkp1vu/learn_c_by_building_projects_from_fizzbuzz_to/</link>
      <description><![CDATA[I&#39;ve created a curated collection of small C projects designed to help you master core concepts through hands-on practice. 🌟 What’s Inside:  Projects sorted by difficulty (⭐1 to ⭐5) Clear objectives for each project  各种主题：密码学，图形（SDL2），物理SIMS，数据结构，OS内部等等，以及更多     &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/fralindi       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mkp1vu/learn_c_by_building_projects_from_fizzbuzz_to/</guid>
      <pubDate>Fri, 08 Aug 2025 07:45:06 GMT</pubDate>
    </item>
    <item>
      <title>实时编码很烂</title>
      <link>https://www.reddit.com/r/programming/comments/1mkoecy/live_coding_sucks/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/xadartt      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mkoecy/live_coding_sucks/</guid>
      <pubDate>Fri, 08 Aug 2025 07:02:50 GMT</pubDate>
    </item>
    <item>
      <title>如何举办聚会</title>
      <link>https://www.reddit.com/r/programming/comments/1mkmy7e/how_to_host_a_meetup/</link>
      <description><![CDATA[Since a lot of local programming meetups died during Covid and never came back up, I wrote an article with some tips for hosting your own meetup—hopefully this will inspire someone to start a new meetup group or resuscitate an old one. If you have any tips or suggestions for hosting a meetup, please share in the comments!  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/johnytex      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mkmy7e/how_to_host_a_meetup/</guid>
      <pubDate>Fri, 08 Aug 2025 05:36:23 GMT</pubDate>
    </item>
    <item>
      <title>疤痕 - 一种易于并发的语言，静态键入，带有干净的语法</title>
      <link>https://www.reddit.com/r/programming/comments/1mkhznb/scar_a_language_for_easy_concurrency_statically/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  由于NIM中的多线程的状态较差，并且依赖诸如Arraymancer（例如Arraymancer）的外部库的依赖（也是由于 Ref Object 到处 contratch in swratch and Inter in not consect  Example: int glob_value = 0 float glob_value_2 = 0.0 parallel: glob_value = some_heavy_task() glob_value_2 = some_other_heavy_task()  The idea is to make things like accessing shared memory concurrently a trivial process by自动化线程同步代码的生成。 也有平行的孔，例如：   x = 1至5的并行式x：x = 1：x print＆quort; x =％d＆quot | x平行于y = 10至20：y y =％d＆quort; | y睡眠0.1打印“嵌套平行于循环完成”。   目前尚未准备好使用它，尽管在此之前可能会看到进一步的开发。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/god1235414       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mkhznb/scar_a_language_for_easy_concurrency_statically/</guid>
      <pubDate>Fri, 08 Aug 2025 01:21:55 GMT</pubDate>
    </item>
    <item>
      <title>用C为游戏男孩制作D＆D游戏</title>
      <link>https://www.reddit.com/r/programming/comments/1mke9gt/making_a_dd_game_for_the_game_boy_with_c/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/pikamander2      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mke9gt/making_a_dd_game_for_the_game_boy_with_c/</guid>
      <pubDate>Thu, 07 Aug 2025 22:34:27 GMT</pubDate>
    </item>
    </channel>
</rss>