<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Tue, 09 Sep 2025 12:33:51 GMT</lastBuildDate>
    <item>
      <title>AI调用实施的最终指南</title>
      <link>https://www.reddit.com/r/programming/comments/1nchffv/the_ultimate_guide_to_ai_calling_implementation/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/tille_republic_4242       [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nchffv/the_ultimate_guide_to_ai_calling_implementation/</guid>
      <pubDate>Tue, 09 Sep 2025 12:23:24 GMT</pubDate>
    </item>
    <item>
      <title>您对活动采购有何看法？您开始有多难？</title>
      <link>https://www.reddit.com/r/programming/comments/1ncecc2/what_is_your_take_on_event_sourcing_how_hard_was/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  这个问题来自我与另一个开发人员有关是否更容易使用事件采购模式构建的论点。显然，这取决于系统本身，因此为了参数，让我们假设财务系统（因为它们自然是事件采购的，即需要跟踪所有状态变更。）。我们争论很长一段时间，但他的主要论点是，对于开发人员来说，很难在活动采购方面吸引他们的头脑，因为它们可以构建CRUD系统，例如。 。 我很难回头争辩说，更容易进行活动采购（.e.g。构建新功能通常意味着另一个预测），但我可能会遇到我7年的偏见经验。因此，在这里我正在寻找更多意见。 您是否进行活动采购？为什么/为什么不呢？您是否发现它涉及更多的努力/更难或更难开始？提交由＆＃32;  /u/Suspicious-Echidna27   [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncecc2/what_is_your_take_on_event_sourcing_how_hard_was/</guid>
      <pubDate>Tue, 09 Sep 2025 09:34:20 GMT</pubDate>
    </item>
    <item>
      <title>用我的pi零制作物理github贡献日历！</title>
      <link>https://www.reddit.com/r/programming/comments/1nce6z0/made_a_physical_github_contribution_calendar_with/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/uspossible-lime-2980      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nce6z0/made_a_physical_github_contribution_calendar_with/</guid>
      <pubDate>Tue, 09 Sep 2025 09:24:31 GMT</pubDate>
    </item>
    <item>
      <title>AWS无服务器CDK Hackathon 2025</title>
      <link>https://www.reddit.com/r/programming/comments/1ncdzvs/aws_serverless_cdk_hackathon_2025/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在serverlesscreed上结束的团队很乐意宣布无服务的CDK Hackathon 2025！使用AWS CDK构建任何无服务器应用程序 - 从实时API到可扩展的全栈应用程序。  展示您的创造力，解决现实世界中的问题并赢得大胜利！奖品第一奖：€15,000（〜$ 180） + 1年访问无服务器信条学院，S3Console，S3Console，代币复制 +名人堂功能第二奖：10,000（〜$ 120） +工具访问权限 +工具访问 +名人堂 +  3rd奖： 3rd奖：3rd（〜$ 60）（〜$ 60） + $ 60）第五位：免费学院访问 +名人堂工具访问包括   s3console： https：//s3console.com/  href =“ https://tokencopy.com/”&gt; https://tokencopy.com/ ，   时间表发射：2025年8月23日提交：2025年10月13日获奖者宣布：2025年10月30日，2025年10月30日的评审标准：     &lt;&gt; &lt;&gt; &lt;&gt; &lt;&gt; &lt;&gt; &lt;&gt; &lt;&gt; &lt;&gt; &lt;&gt; &lt;&gt; &lt;&gt; &lt;&gt; &lt;&gt; &lt;&gt; &lt;&gt; &lt;&gt;  &lt;&gt; &lt;&gt; 创造力：这个想法是多么原始和影响力？，  架构＆amp;最佳实践：有效使用CDK/无服务器模式。  完整性＆amp;演示：带有清晰演示的工作解决方案，  检查一下＆amp;在此处注册： https://dub.link/fztgt0t     &lt;！ -  sc_on-提交由＆＃32; /u/u/u/fluffy_feft_4464       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncdzvs/aws_serverless_cdk_hackathon_2025/</guid>
      <pubDate>Tue, 09 Sep 2025 09:11:42 GMT</pubDate>
    </item>
    <item>
      <title>构建了一个工具，使研究纸搜索更容易 - 寻找测试人员和反馈！</title>
      <link>https://www.reddit.com/r/programming/comments/1ncdy3v/built_a_tool_to_make_research_paper_search_easier/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好， 我一直在建立一个辅助项目来解决我经常遇到的痛苦：找到正确的学术论文是凌乱且耗时的。 我在处理的工具上工作了三个主要事情：     pap li&gt; pap li&gt; pab  按类别组织（例如，机器学习，NLP，计算机视觉）。 提供简短的摘要，因此您无需打开每个PDF。   或错过？  - 关于这对研究人员或学生如何更有用的想法？ 我还在寻找一些早期测试人员谁可以免费访问。  注意：注意：这不是作为促销活动 - 我真的在寻找诚实的反馈来塑造产品。谢谢  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/utim_truck_326      [commist]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncdy3v/built_a_tool_to_make_research_paper_search_easier/</guid>
      <pubDate>Tue, 09 Sep 2025 09:08:23 GMT</pubDate>
    </item>
    <item>
      <title>杂草 +编程=创造力提升还是错误工厂？</title>
      <link>https://www.reddit.com/r/programming/comments/1ncdwpi/weed_programming_creativity_boost_or_bug_factory/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我最近遇到了一项研究，说许多开发人员在编码时使用大麻。我很好奇...您个人是否在影响下进行编码？提交由＆＃32; /u/u/tiposbingo      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncdwpi/weed_programming_creativity_boost_or_bug_factory/</guid>
      <pubDate>Tue, 09 Sep 2025 09:05:47 GMT</pubDate>
    </item>
    <item>
      <title>我正在经历我的旧存储库，并以三天后建造了我的终端CLI风格的个人网站。重新部署了它。经过它，认为它看起来仍然很棒。看一看</title>
      <link>https://www.reddit.com/r/programming/comments/1ncdg7x/was_going_through_my_old_repos_and_found_my/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/sultan_mustafin      [commist]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncdg7x/was_going_through_my_old_repos_and_found_my/</guid>
      <pubDate>Tue, 09 Sep 2025 08:35:12 GMT</pubDate>
    </item>
    <item>
      <title>我构建了一个超快速的开源GO Web服务，用于从HTML/JSON模板生成PDF。</title>
      <link>https://www.reddit.com/r/programming/comments/1ncd899/i_built_an_ultrafast_opensource_go_web_service/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我很高兴分享一个我一直在开发的项目： gopdfsuit ，高性能的GO Web服务，旨在从HTML和JSON模板中创建PDF文档。它建立在GO 1.23+和杜松子酒框架上，并且是在麻省理工学院许可下完全开源的。 我创建了这一点，因为我厌倦了缓慢，笨拙且昂贵的商业PDF解决方案。 GoPdfSuit is designed to be a fast, simple, and flexible microservice that you can drop into any project. Key Features:  Ultra-Fast Performance: It can generate PDFs with sub-millisecond to low-millisecond response times, making it incredibly efficient for high-load applications.  模板驱动：它使用JSON驱动的模板系统，这意味着您可以在不编写任何代码的情况下生成复杂的，数据丰富的PDF。 It also has a built-in web interface for real-time preview and editing. HTML to PDF/Image Conversion: Easily convert entire web pages or HTML snippets into PDFs or images. Interactive Forms: Supports AcroForm and XFDF data for filling out interactive forms. Easy部署：它被部署为单个二进制文件，使启动和运行变得简单。  语言agnostic：，由于它使用了REST API，因此您可以将其与任何编程语言一起使用。      gopdfsuit是一种更灵活的和成本更高的替代方案。如果您与PDFS合作，我希望您能检查一下，让我知道您的想法！   github存储库：   项目页面：  https://chinmay-sawant.github.io/gopdfsuit//gopdfsuit/  - &gt;＆＃32;提交由＆＃32; /u/u/chinmay06       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncd899/i_built_an_ultrafast_opensource_go_web_service/</guid>
      <pubDate>Tue, 09 Sep 2025 08:19:19 GMT</pubDate>
    </item>
    <item>
      <title>从模块化到公用事业领先的尾风迁移</title>
      <link>https://www.reddit.com/r/programming/comments/1ncd7dh/from_modular_to_utilityfirst_tailwind_migration/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/primeentbid2476       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncd7dh/from_modular_to_utilityfirst_tailwind_migration/</guid>
      <pubDate>Tue, 09 Sep 2025 08:17:42 GMT</pubDate>
    </item>
    <item>
      <title>流程系统设计：构建LLM编排平台</title>
      <link>https://www.reddit.com/r/programming/comments/1nccxwt/flowrun_system_design_building_an_llm/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;     flow-run：建立生产准备的LLM编排服务  我深入研究了 flow flow-run&gt;的系统设计（open-source）。亮点： •任务是原子单位（LLM呼叫，电子邮件等），然后流动以图形连接；通过BFS并行执行。  •数据模型（帐户，提供者，模型，任务，流）→多年轻 +可靠的重试。  •提供者/型号/任务/流的YAML DSL； /v1  API带有dedupe的客户端分类ID。  •缩放选项：水平节点，DB读取副本/群集；如何选择多个LLM提供商与多个帐户。 从建立编排层或分布式系统的人们来欢迎反馈：[ https://vitaliihonchar.com/insights/flow-run-system-designs/flow-run-system-design]（）  提交由＆＃32; /u/u/u/history_wing_9573        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nccxwt/flowrun_system_design_building_an_llm/</guid>
      <pubDate>Tue, 09 Sep 2025 07:59:55 GMT</pubDate>
    </item>
    <item>
      <title>Chalk + Debug刚刚在NPM上拥有……老实说，这是我一直期待的噩梦</title>
      <link>https://www.reddit.com/r/programming/comments/1nccr9m/chalk_debug_just_got_owned_on_npm_and_honestly/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我已经走了足够长的时间，可以记住 event-tream  2018年， ua-parser-js  2021年，所有这些“ oh prap”时刻，当依赖性时，我们都信任毒品，我们信任毒品的毒品。它是粉笔和 debug 。 JS世界中最无聊的日常库中的两个。当测试通过。我们都会发货，没有问题。有效载荷肯定是讨厌但聪明的……对钱包地址的混淆代码扫描，用与攻击者绑在一起的往来。因此，您的木材彩色图书馆突然变成了一个加密小偷。这就是让我的胃掉落的原因。因为作为开发人员，工作流程是设计以信任绿色检查标记的。昨天证明，这些绿色检查在上游上游中毒时就没有任何意义。 我们喜欢说“保持依赖性更新”。但是这个建议开始感觉像是在开玩笑。盲目更新是您将这个废话直接推入产品的方式。什么是修复？老实说，我没有银弹。但是我知道这一点：  管道需要上下文，而不仅仅是通过/失败。如果 debug 开始调用 window.thereum ，则应尖叫。 安全性不能成为“某些团队的工作”。它必须生活在相同的工作流程中，我们合并Prs。 ，也许我们停止假装 npm安装在没有更深入检查的情况下是“安全的”。  这不是一个怪异的边缘情况。现在是模式。而且，如果我们不适应，我们将继续掷骰子，直到下一个依赖性使我们在生产中燃烧。其他人觉得我们的建设速度比我们在我们下面的地面更快？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/divson19     &lt;a href =“ https://www.reddit.com/r/programming/comments/1nccr9m/chalk_debug_just_got_got_got_oneed_oned_on_npm_and_honestly/”]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nccr9m/chalk_debug_just_got_owned_on_npm_and_honestly/</guid>
      <pubDate>Tue, 09 Sep 2025 07:46:50 GMT</pubDate>
    </item>
    <item>
      <title>把自己放在那里</title>
      <link>https://www.reddit.com/r/programming/comments/1ncckim/putting_myself_out_there/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;    你好reddit！  我一直在做一些我很高兴分享的事情： Day我是与C＃和SQL合作的软件开发人员在美国的保险界合作，但是在过去的9个月中，我一直在建立Starrynightai作为一个激情项目。目标很简单：创建一个灵活，私人且负担得起的AI艺术平台。 将Starrynightai与众不同的一件事是它的重点是匿名。该网站不使用跟踪cookie，不出售数据，甚至没有要求您的个人信息 - 我希望人们不必担心隐私。   该平台尚不开放以进行完整的注册，但是候补表是实时的。如果您很好奇，请随时查看网站，注册更新，或者在此处提出任何问题。我很想听听您的想法 - 无论是关于平台本身，AI艺术还是软件开发。 感谢您的阅读，希望您能加入我的旅程！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/dean2cool4u2       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncckim/putting_myself_out_there/</guid>
      <pubDate>Tue, 09 Sep 2025 07:34:02 GMT</pubDate>
    </item>
    <item>
      <title>人类事件报告</title>
      <link>https://www.reddit.com/r/programming/comments/1ncb4wu/incident_report_for_anthropic/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/Geaverfulboy      [commist]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncb4wu/incident_report_for_anthropic/</guid>
      <pubDate>Tue, 09 Sep 2025 06:01:40 GMT</pubDate>
    </item>
    <item>
      <title>iPhone Dumbphone</title>
      <link>https://www.reddit.com/r/programming/comments/1ncb4oe/iphone_dumbphone/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/gherefulboy       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncb4oe/iphone_dumbphone/</guid>
      <pubDate>Tue, 09 Sep 2025 06:01:16 GMT</pubDate>
    </item>
    <item>
      <title>信号安全备份</title>
      <link>https://www.reddit.com/r/programming/comments/1ncb4hj/signal_secure_backups/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/Geaverfulboy      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncb4hj/signal_secure_backups/</guid>
      <pubDate>Tue, 09 Sep 2025 06:00:58 GMT</pubDate>
    </item>
    </channel>
</rss>