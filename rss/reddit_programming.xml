<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sat, 26 Jul 2025 09:18:59 GMT</lastBuildDate>
    <item>
      <title>您的大多数项目都是愚蠢的。请制作一些实际游戏 -  TED Bendixson  -  BSC 2025</title>
      <link>https://www.reddit.com/r/programming/comments/1m9oxej/most_of_your_projects_are_stupid_please_make_some/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/gingerbill      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m9oxej/most_of_your_projects_are_stupid_please_make_some/</guid>
      <pubDate>Sat, 26 Jul 2025 09:17:19 GMT</pubDate>
    </item>
    <item>
      <title>FileMock-客户端模拟文件生成器</title>
      <link>https://www.reddit.com/r/programming/comments/1m9orrk/filemock_clientside_mock_file_generator/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好， 刚刚完成Filemock并想分享其背后的故事。 几周前，我正在处理一个文件上传功能，该功能需要处理不同的文件尺寸和类型，包括一些漂亮的大型文件，包括一些漂亮的文件。我花了很多时间在线搜索测试文件，却发现其中大多数被打破了。不会播放的视频，不会打开的PDF，被损坏的音频文件。即使我发现有效的文件，它们也从来都不是我的测试用例。 那是我决定构建FileMock的时候。它直接在浏览器中生成测试文件：  - 实际播放  -  PDF的视频文件，以多种格式打开  - 带有不同声音类型的音频文件  - 各种文档格式（CSV，JSON，JSON，RTF等。不涉及服务器，因此您生成的文件永远不会离开您的计算机。 最好的部分是所有文件都具有真正的功能。当您生成视频时，它会播放。创建PDF时，它会打开。不再从粗略的网站上下载随机文件，希望它们能为您的测试工作。挫败感。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/umast     [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m9orrk/filemock_clientside_mock_file_generator/</guid>
      <pubDate>Sat, 26 Jul 2025 09:06:58 GMT</pubDate>
    </item>
    <item>
      <title>Terraform：基础架构作为代码</title>
      <link>https://www.reddit.com/r/programming/comments/1m9oqtq/terraform_infrastructure_as_code/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/israelsarmiento5      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m9oqtq/terraform_infrastructure_as_code/</guid>
      <pubDate>Sat, 26 Jul 2025 09:05:17 GMT</pubDate>
    </item>
    <item>
      <title>从键入到信任AI：今天的5个级别的编码级别 - 您在哪一个？</title>
      <link>https://www.reddit.com/r/programming/comments/1m9ogy7/from_typing_to_trusting_ai_the_5_levels_of_coding/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态 href=&quot;https://medium.com/tech-ai-chat/from-typing-to-trusting-ai-the-5-levels-of-coding-today-which-one-are-you-in-71a0a1503abc?sk=f4cefa5ecc1a4723b58ef175d9fc5ea1&quot;&gt;[link] ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m9ogy7/from_typing_to_trusting_ai_the_5_levels_of_coding/</guid>
      <pubDate>Sat, 26 Jul 2025 08:46:36 GMT</pubDate>
    </item>
    <item>
      <title>使用LLM的软件工程：现实检查</title>
      <link>https://www.reddit.com/r/programming/comments/1m9o4at/software_engineering_with_llm_reality_check/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/michaeli_starky      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m9o4at/software_engineering_with_llm_reality_check/</guid>
      <pubDate>Sat, 26 Jul 2025 08:22:49 GMT</pubDate>
    </item>
    <item>
      <title>懒惰的情况</title>
      <link>https://www.reddit.com/r/programming/comments/1m9log0/the_case_for_being_lazy/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我一直以为懒惰足以努力工作是一种完全没有维持的技能  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;  /u/WifeEyedFascination   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m9log0/the_case_for_being_lazy/</guid>
      <pubDate>Sat, 26 Jul 2025 05:49:56 GMT</pubDate>
    </item>
    <item>
      <title>测试覆盖范围</title>
      <link>https://www.reddit.com/r/programming/comments/1m9kxaa/testivus_on_test_coverage/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  今天遇到了这一点，认为值得分享。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/unartial-character57     [link]&gt; [link]&gt; [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m9kxaa/testivus_on_test_coverage/</guid>
      <pubDate>Sat, 26 Jul 2025 05:05:25 GMT</pubDate>
    </item>
    <item>
      <title>Ebitengine（Go Game Engine）入门</title>
      <link>https://www.reddit.com/r/programming/comments/1m9kjv3/getting_started_with_ebitengine_go_game_engine/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/tslocum      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m9kjv3/getting_started_with_ebitengine_go_game_engine/</guid>
      <pubDate>Sat, 26 Jul 2025 04:44:13 GMT</pubDate>
    </item>
    <item>
      <title>什么茶出了什么（以及如何避免）</title>
      <link>https://www.reddit.com/r/programming/comments/1m9gcqg/what_tea_got_wrong_and_how_to_avoid_it/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/giraffefire      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m9gcqg/what_tea_got_wrong_and_how_to_avoid_it/</guid>
      <pubDate>Sat, 26 Jul 2025 01:04:59 GMT</pubDate>
    </item>
    <item>
      <title>方法处理更快的反射（有时）</title>
      <link>https://www.reddit.com/r/programming/comments/1m9exl5/method_handles_faster_reflection_sometimes/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/bluegoliath      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m9exl5/method_handles_faster_reflection_sometimes/</guid>
      <pubDate>Fri, 25 Jul 2025 23:57:45 GMT</pubDate>
    </item>
    <item>
      <title>Node.js 22：新功能</title>
      <link>https://www.reddit.com/r/programming/comments/1m9d5uk/nodejs_22_nuevas_características/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/u/israelsarmiento5       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m9d5uk/nodejs_22_nuevas_características/</guid>
      <pubDate>Fri, 25 Jul 2025 22:39:18 GMT</pubDate>
    </item>
    <item>
      <title>Linters y Formatters：Eslint y Prettier</title>
      <link>https://www.reddit.com/r/programming/comments/1m9d5uf/linters_y_formatters_eslint_y_prettier/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/israelsarmiento5      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m9d5uf/linters_y_formatters_eslint_y_prettier/</guid>
      <pubDate>Fri, 25 Jul 2025 22:39:17 GMT</pubDate>
    </item>
    <item>
      <title>不要在与急于客户的会议期间估计 - 取而代之的是</title>
      <link>https://www.reddit.com/r/programming/comments/1m9amvs/dont_estimate_during_meetings_with_pushy_clients/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/dmp0x7c5     [link]&gt; [link]&gt; [link]        32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m9amvs/dont_estimate_during_meetings_with_pushy_clients/</guid>
      <pubDate>Fri, 25 Jul 2025 20:54:31 GMT</pubDate>
    </item>
    <item>
      <title>如何使用效率网络B0对图像进行分类</title>
      <link>https://www.reddit.com/r/programming/comments/1m9a8m8/how_to_classify_images_using_efficientnet_b0/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  使用python和Tensorflow中的预训练的ExtricNETB0模型将任何图像分类。  此初学者友好的教程显示了如何使用OpenCV加载图像，预处理，运行预测并显示结果。  非常适合任何探索图像分类的人，而无需构建或培训自定义模型 - 无需数据集！       您可以在博客中找到代码的链接： htttps://eranfeit.net/how.net/how-to-classify-images-images-images-images-images-images-uside-efficity-images-uside-efficited-b0/    href =“ https://eranfeit.net/”&gt; https://eranfeit.net/       媒介用户的完整代码： https://medium.com/@/medium.com/@feitgemel/how-te-feitgemel/how-to-casplassify-images-images-images-images-images-images-imeffelif-suffic-sisus-usiss-usiss-usiss-usity-susion-susife-inet-b0-73855555555555555583   在这里观看完整的教程： https：//youtu.be/lommtig9uz4  ＆＃32;提交由＆＃32;  /u/Feitgemel   [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m9a8m8/how_to_classify_images_using_efficientnet_b0/</guid>
      <pubDate>Fri, 25 Jul 2025 20:38:47 GMT</pubDate>
    </item>
    <item>
      <title>AI代码模型Evals的工程师指南</title>
      <link>https://www.reddit.com/r/programming/comments/1m9a17p/an_engineers_guide_to_ai_code_model_evals/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/feross      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m9a17p/an_engineers_guide_to_ai_code_model_evals/</guid>
      <pubDate>Fri, 25 Jul 2025 20:30:38 GMT</pubDate>
    </item>
    </channel>
</rss>