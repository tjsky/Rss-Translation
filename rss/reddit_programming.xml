<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Wed, 15 Oct 2025 12:37:26 GMT</lastBuildDate>
    <item>
      <title>“从微服务架构中的第一行代码开始，您就应该进行单元测试”——Sander Hoogendoorn</title>
      <link>https://www.reddit.com/r/programming/comments/1o79jge/from_the_first_line_of_code_in_your_microservices/</link>
      <description><![CDATA[ 由   提交 /u/goto-con   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o79jge/from_the_first_line_of_code_in_your_microservices/</guid>
      <pubDate>Wed, 15 Oct 2025 12:24:48 GMT</pubDate>
    </item>
    <item>
      <title>Orbivon：一个编辑器，支持使用 Mermaid 和 PlantUML 记录任何具有复杂图表的内容 ✨</title>
      <link>https://www.reddit.com/r/programming/comments/1o78rhy/orbivon_an_editor_that_supports_documenting/</link>
      <description><![CDATA[嘿！我为复杂的文档构建了一个文本编辑器，具有 MermaidJS 和 PlantUML 图表、项目和组织支持，以及内置加密功能以确保数据安全。   由   提交/u/lasan0432G  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o78rhy/orbivon_an_editor_that_supports_documenting/</guid>
      <pubDate>Wed, 15 Oct 2025 11:47:17 GMT</pubDate>
    </item>
    <item>
      <title>使用 python 创建数据仪表板</title>
      <link>https://www.reddit.com/r/programming/comments/1o78lf8/create_a_data_dashboard_with_python/</link>
      <description><![CDATA[ 由   提交/u/superg2704  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o78lf8/create_a_data_dashboard_with_python/</guid>
      <pubDate>Wed, 15 Oct 2025 11:38:36 GMT</pubDate>
    </item>
    <item>
      <title>HTTP 缓存完整指南 | SEO 技术角度</title>
      <link>https://www.reddit.com/r/programming/comments/1o78hfj/complete_guide_to_http_caching_a_technical_seo/</link>
      <description><![CDATA[ 由   提交/u/kixxauth   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o78hfj/complete_guide_to_http_caching_a_technical_seo/</guid>
      <pubDate>Wed, 15 Oct 2025 11:32:40 GMT</pubDate>
    </item>
    <item>
      <title>对 iWork 进行逆向工程（因此您不必这样做）</title>
      <link>https://www.reddit.com/r/programming/comments/1o78acf/reverse_engineering_iwork_so_you_dont_have_to/</link>
      <description><![CDATA[ 由   提交/u/AndrewMD5   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o78acf/reverse_engineering_iwork_so_you_dont_have_to/</guid>
      <pubDate>Wed, 15 Oct 2025 11:22:03 GMT</pubDate>
    </item>
    <item>
      <title>免费试用我的平台即服务！</title>
      <link>https://www.reddit.com/r/programming/comments/1o77tss/try_my_platform_as_a_service_for_free/</link>
      <description><![CDATA[大家好，我和我的一个朋友在名为 Thevenin (thevenin.io) 的平台即服务中工作了一段时间，我想从技术社区获得有关它的反馈。  我们希望为 Heroku、Render.com 和 Platform.sh 等平台创建一个很好的替代方案，因为我们发现它们非常固执、有限、昂贵，有时甚至不可靠。 现在完全免费试用，您只需在 apps.thevenin.io 上创建一个帐户并开始 正在部署。 现在，您可以使用该平台部署开源容器化应用程序来构建复杂的微服务架构。 同样，此测试版不需要信用卡。只需登录并开始部署 我们尚未启用计费，因为我们想首先保证开发者获得良好的体验 这只是一个开始。我们正在为该平台的未来开发许多功能，例如从 Git Repos CI/CD 进行部署、指标和状态监控、私有容器注册表、数据库部署等等。 我们非常感谢任何反馈！平台上有一个支持页面，您可以在其中留下您的疑问，也可以通过 [support@thevenin.io](mailto:support@thevenin.io)    与我们联系。由   提交/u/Thevenin_Cloud   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o77tss/try_my_platform_as_a_service_for_free/</guid>
      <pubDate>Wed, 15 Oct 2025 10:57:41 GMT</pubDate>
    </item>
    <item>
      <title>人工智能编码。我很兴奋。我很害怕。我很反感。我很困惑。我制作了一个关于它的视频。</title>
      <link>https://www.reddit.com/r/programming/comments/1o77cmc/ai_coding_im_excited_im_scared_im_disgusted_im/</link>
      <description><![CDATA[ 由   提交/u/col000r  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o77cmc/ai_coding_im_excited_im_scared_im_disgusted_im/</guid>
      <pubDate>Wed, 15 Oct 2025 10:29:44 GMT</pubDate>
    </item>
    <item>
      <title>🚀 Azure AI 专业人士的大消息！</title>
      <link>https://www.reddit.com/r/programming/comments/1o76l40/big_news_for_azure_ai_professionals/</link>
      <description><![CDATA[Peter T. Lee 编写的Azure AI-102 认证要点指南现已出版，这是一本用于掌握Microsoft Azure AI 工程师助理考试的完整实践资源。 📘 Amazon 链接 Azure AI 正在快速发展，本指南弥合了认证准备和实际应用之间的差距。它的特别之处在于它不仅教授概念，而且还提供了一些知识。它引导您完成实践实验室、案例研究和 GitHub 项目，以便您在此过程中实际构建解决方案。 🔍 亮点：  AI、LLM、NLP 和生成式 AI 的核心概念 使用 Azure AI Foundry、CI/CD 和 容器 使用 Azure AI 内容安全应用负责任的 AI 原则 使用 Azure AI 视觉、语言和语音实施解决方案 使用 Azure OpenAI 探索知识挖掘、RAG和微调 超过 45 个考试式模拟题，用于测试您的准备情况  由在 IT 领域拥有 25 年以上经验的 Microsoft AI 专家 Peter T. Lee 撰写，本书可帮助您超越通过 AI-102 考试，您将准备好设计、部署和管理 Azure AI 解决方案 自信地。 奖励：亚马逊正在进行限时优惠 👉如果您的目标是成为一名 Azure AI 工程师助理，或者只是想增强您的 Azure AI 技能，那么您就应该看看这个   由   提交/u/Anjitha_packt  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o76l40/big_news_for_azure_ai_professionals/</guid>
      <pubDate>Wed, 15 Oct 2025 09:43:59 GMT</pubDate>
    </item>
    <item>
      <title>假IP，直到你做IP</title>
      <link>https://www.reddit.com/r/programming/comments/1o76b9z/fake_ip_till_you_make_ip/</link>
      <description><![CDATA[ 由   提交/u/FlatwormHappy1554  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o76b9z/fake_ip_till_you_make_ip/</guid>
      <pubDate>Wed, 15 Oct 2025 09:26:36 GMT</pubDate>
    </item>
    <item>
      <title>我不喜欢使用 VScode 副驾驶代码补全的人</title>
      <link>https://www.reddit.com/r/programming/comments/1o760o5/i_dont_like_people_who_use_vscode_copilot_code/</link>
      <description><![CDATA[所以我并不完全反对使用 github copilot，但我绝对讨厌代码补全功能。每当我看到有人使用它时，我对他们的印象就像一块 50 公斤重的岩石从 500m 高处掉下来。 我的意思是作为一个程序员有一些尊严。 甚至从某个地方（LLM 除外）复制粘贴整个代码也会好得多，至少你知道搜索过它并且可能知道它会做什么 你对此有何想法？ 这是发布此内容的正确子吗？第一次发帖。   由   提交/u/Its_so_annoying   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o760o5/i_dont_like_people_who_use_vscode_copilot_code/</guid>
      <pubDate>Wed, 15 Oct 2025 09:07:34 GMT</pubDate>
    </item>
    <item>
      <title>在“利用时间 -1 天”时代，自我更新恶意软件如何在部署补丁之前利用漏洞</title>
      <link>https://www.reddit.com/r/programming/comments/1o75x9p/inside_the_timetoexploit_1_days_era_how/</link>
      <description><![CDATA[ 由   提交 /u/wineandcode   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o75x9p/inside_the_timetoexploit_1_days_era_how/</guid>
      <pubDate>Wed, 15 Oct 2025 09:01:19 GMT</pubDate>
    </item>
    <item>
      <title>偶然发现了这个“电子”，但对于 java 项目你们怎么看</title>
      <link>https://www.reddit.com/r/programming/comments/1o73u1u/stumbled_upon_this_electron_but_for_java_project/</link>
      <description><![CDATA[ 由   提交/u/sunnykentz  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o73u1u/stumbled_upon_this_electron_but_for_java_project/</guid>
      <pubDate>Wed, 15 Oct 2025 06:43:37 GMT</pubDate>
    </item>
    <item>
      <title>我是一名程序员，而不是批准 Copilot 生成代码的橡皮图章</title>
      <link>https://www.reddit.com/r/programming/comments/1o729o1/i_am_a_programmer_not_a_rubberstamp_that_approves/</link>
      <description><![CDATA[ 由   提交/u/pyeri  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o729o1/i_am_a_programmer_not_a_rubberstamp_that_approves/</guid>
      <pubDate>Wed, 15 Oct 2025 05:09:03 GMT</pubDate>
    </item>
    <item>
      <title>现代编译器如何优化代码演练</title>
      <link>https://www.reddit.com/r/programming/comments/1o722wo/how_modern_compilers_optimize_code_a_walkthrough/</link>
      <description><![CDATA[ 由   提交 /u/CockroachFair4921   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o722wo/how_modern_compilers_optimize_code_a_walkthrough/</guid>
      <pubDate>Wed, 15 Oct 2025 04:58:19 GMT</pubDate>
    </item>
    <item>
      <title>运行具有自动扩展和实时流量的持久 WebSocket API 的最经济高效的方法是什么？</title>
      <link>https://www.reddit.com/r/programming/comments/1o71amc/whats_the_most_costefficient_way_to_run_a/</link>
      <description><![CDATA[我一直在 Go (Gin) 中开发实时后端，通过 WebSocket 连接桥接 VS Code 扩展和移动客户端。 API 处理设备配对、身份验证和实时消息传递 — 充当桌面和客户端之间的发现和消息代理服务  当前架构  语言： Go 1.21 平台： Google Cloud Platform（自动扩展实例组） 负载均衡器 具有粘性会话的 GCP HTTP(S) LB（CLIENT_IP 亲和性） 数据库： Firestore（NoSQL、自动扩展） 并发性：每个实例约 200 个套接字，总共最多 3000 个 扩展触发器： CPU 利用率 75% 成本范围：27 美元 - 60 美元/月 设计：先填充后溢出自动扩展、每个实例的内存中消息代理 TLS： Google 管理的 SSL 证书  该设置表现良好 - 实例自动扩展，粘性会话保持 WebSocket 持久性，Firestore 处理持久状态。 单个 Hetzner CPX 服务器可以更经济高效地处理相同的负载，而不会损失太多可靠性。 编程和编程架构问题 对于那些构建过类似实时 Go 或 WebSocket 系统的人：  对于并发 Go 服务，您如何决定何时横向扩展（多实例）与纵向扩展（单个强大节点）？ 您是否找到了 Hetzner 或类似的裸机 提供商对于稳定的 WebSocket 工作负载更具成本效益？ 我设计中的每个实例都维护自己的消息代理和令牌缓存； Firestore 存储持久数据。粘性会话避免了跨节点协调 - 这种方法是否存在隐藏的扩展陷阱？ 添加 Redis Pub/Sub 或轻量级状态总线实际上会提高可靠性，还是只会增加复杂性和成本？ 对于长期存在的 WebSocket，是否有人发现 Kubernetes 或 Cloud Run 在实践中比手动管理更便宜 虚拟机？  我主要是在系统扩展时尝试平衡成本、可靠性和架构简单性。   由   提交 /u/vscoderCopilot   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1o71amc/whats_the_most_costefficient_way_to_run_a/</guid>
      <pubDate>Wed, 15 Oct 2025 04:14:37 GMT</pubDate>
    </item>
    </channel>
</rss>