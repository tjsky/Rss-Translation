<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Mon, 15 Sep 2025 06:25:30 GMT</lastBuildDate>
    <item>
      <title>在纯Java中构建了高性能键值数据存储</title>
      <link>https://www.reddit.com/r/programming/comments/1nhdu6k/built_a_highperformance_keyvalue_datastore_in/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好，我很高兴分享一个小的里程碑，这是我过去2年以来在周末的空闲时间工作的项目。   , its still under development. I’ve published some benchmarks results The performance is on par with LevelDB, and for comparison I also included Facebook&#39;s RocksDB (which is a different beast总共） 我还在我是这是唯一的开发人员，所以我敢肯定，我已经滥用了Java，在某些地方丢失了Java，错过的Edge案例甚至明显的错误。我很想听听任何反馈，以及那些尝试过的人的问题。 谢谢大家。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/theuntamed000      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nhdu6k/built_a_highperformance_keyvalue_datastore_in/</guid>
      <pubDate>Mon, 15 Sep 2025 05:52:52 GMT</pubDate>
    </item>
    <item>
      <title>因此，您想主持自己的LLM吗？不。</title>
      <link>https://www.reddit.com/r/programming/comments/1nh8td5/so_you_want_to_host_your_own_llm_dont/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/myusuf3       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nh8td5/so_you_want_to_host_your_own_llm_dont/</guid>
      <pubDate>Mon, 15 Sep 2025 01:29:09 GMT</pubDate>
    </item>
    <item>
      <title>建造的forpastpc bc我对通常的分布式服务通讯感到沮丧，不再是REST API或重型MQ</title>
      <link>https://www.reddit.com/r/programming/comments/1nh45ba/built_fasterpc_bc_i_was_frustrated_with_the_usual/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿，大家，已经为此工作了一段时间，最终准备共享 - 建造了forperpc bc，我对通常的分布式服务通讯感到沮丧，在这里，所有内容都在投票端的端点或处理重量级的消息代理基础架构。 TBH大多数人完全跳过MQ，只使用基本的HTTP调用。 基本上是双向JSON RPC，而不是Websockets，可以使不同机器上的Python方法用与本地函数呼叫相同的语法相互呼叫。听起来很简单，但建筑含义对于分布式系统很重要。 runs on any websocket-capable server - docker containers, node.js processes, ruby​​ on rails apps, whatever. the problem i was solving: building my AI OS (Bodega) with 80+ concurrent processes across multiple machines, and traditional ipc approaches had issues: --rest apis = constant polling + request/response latency overhead + managing http状态代码   -  MQ =直接同步服务通信的架构过度杀伤   - 存在RPC解决方案=太重（grpc）或缺失的双向功能 是什么使forterpc cooler和Sipple clast plance  pr&gt;通过p&gt; pr&gt; pl&gt; pl&gt;可配置的可配置的向后退回逻辑   - 语言 - 语言协议（python node.js↔重新连接 我使用IT使用IT WIHT Bodega来处理与分布式工作者服务的狗屎负载并发REQ：ODF文本提取器，FFT音频处理器，图像振荡模型，语音转录引擎，OCR管道，OCR管道，情感分析工人，转换服务，内容推荐发动机。它们是专门的微服务，需要在没有HTTP请求周期开销或异步消息传递复杂性的情况下进行沟通。   处理货架上的东西，例如连接下降，跨工人实例，请求超时，请求超时，对复杂对象进行自定义数据序列化。 href =“ https://github.com/srswti/fasterpc”&gt; https://github.com/srsrswti/fasterpc   示例Directory目录具有完整的多service示例。老实说，这填补了简单的HTTP呼叫与需要实时双向通信的分布式系统的简单HTTP呼叫之间的空白。 仍然早期阶段，但在我的AI OS中进行了战斗测试。有关整体系统的更多背景： https://www.reddit.com/r/localllm/comments/1najvevj/built_an_local_ai_ai_ai_os_you_can_talk_talk_to_to_to_to_that_start_start_started/？ source = share＆amp; utm_medium = web3x＆amp; utm_name = web3xcss＆amp; utm_term = 1＆amp; utm_content = share_button    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/dumbisedask2887       [注释]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nh45ba/built_fasterpc_bc_i_was_frustrated_with_the_usual/</guid>
      <pubDate>Sun, 14 Sep 2025 21:56:21 GMT</pubDate>
    </item>
    <item>
      <title>Z3的愚蠢介绍。用非常简单的示例探索约束求解器的世界。</title>
      <link>https://www.reddit.com/r/programming/comments/1nh38nn/a_dumb_introduction_to_z3_exploring_the_world_of/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/m1m1r0n      [注释]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nh38nn/a_dumb_introduction_to_z3_exploring_the_world_of/</guid>
      <pubDate>Sun, 14 Sep 2025 21:19:17 GMT</pubDate>
    </item>
    <item>
      <title>如何从自由职业者开始担任工程师</title>
      <link>https://www.reddit.com/r/programming/comments/1nh2g7x/how_to_start_with_freelance_work_as_an_engineer/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/gregorojstersek      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nh2g7x/how_to_start_with_freelance_work_as_an_engineer/</guid>
      <pubDate>Sun, 14 Sep 2025 20:47:49 GMT</pubDate>
    </item>
    <item>
      <title>Java今年30岁// //这就是为什么它仍在获胜的原因</title>
      <link>https://www.reddit.com/r/programming/comments/1ngyt86/java_is_30_years_old_heres_why_its_still_winning/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/bluegoliath      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ngyt86/java_is_30_years_old_heres_why_its_still_winning/</guid>
      <pubDate>Sun, 14 Sep 2025 18:26:28 GMT</pubDate>
    </item>
    <item>
      <title>PostgreSQL现场指南 - 新用户的参考指南</title>
      <link>https://www.reddit.com/r/programming/comments/1ngxlws/postgresql_field_guide_the_reference_guide_for/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  许多Postgres书籍讨论了针对经验丰富用户的一些高级主题。不是新的，或者我们应该说新手用户可能只是在做一些开发工作或由内部工作项目领导的时候偶然发现的新手用户，指导他们寻找开源。如果是您，这本参考书将指导您进行旅程，并帮助您了解为Postgres上出色的高级书籍做准备的整体概念。参考指南分为关键部分，以便在您可能需要快速刷新知识库并填充空白以指导您从实施到部署的情况下单独使用每个部分，从而提供了对PostgreSql的了解。提交由＆＃32; /u/u/unlikely_willow2842       [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ngxlws/postgresql_field_guide_the_reference_guide_for/</guid>
      <pubDate>Sun, 14 Sep 2025 17:39:56 GMT</pubDate>
    </item>
    <item>
      <title>Nytril：一种编程语言和一种标记语言</title>
      <link>https://www.reddit.com/r/programming/comments/1ngwm1p/nytril_a_programming_language_and_a_markup/</link>
      <description><![CDATA[]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ngwm1p/nytril_a_programming_language_and_a_markup/</guid>
      <pubDate>Sun, 14 Sep 2025 17:01:44 GMT</pubDate>
    </item>
    <item>
      <title>为什么事件驱动的系统很难？</title>
      <link>https://www.reddit.com/r/programming/comments/1ngwj0l/why_eventdriven_systems_are_hard/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/scalableThread        [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ngwj0l/why_eventdriven_systems_are_hard/</guid>
      <pubDate>Sun, 14 Sep 2025 16:58:39 GMT</pubDate>
    </item>
    <item>
      <title>蜂鸣器8：在浏览器内部的模拟手臂V4A CPU上运行C/C ++ 20</title>
      <link>https://www.reddit.com/r/programming/comments/1ngrh2h/beep8_running_cc20_on_an_emulated_arm_v4a_cpu/</link>
      <description><![CDATA[Hi all, I’ve been experimenting with BEEP-8, a Fantasy Console that runs entirely in the browser — but instead of a toy VM, it executes real ARM v4a machine code. Workflow:  Write programs in C or C ++ 20   用 gnuarm gcc 编译为ROM图像 在Javascript/conscript/conscript/conscript/conscript/conscript/conscript/1 mb rom  将其运行在 cycle-cycurate-cycrate-celt-Crate-Crate-Crate-Crate-Crate-Crate-Crate-Crate-Crate-Crate-Crate-Crate-Crate-Cratate-nimcript/1 MB ROM上。 轻巧 rtos内核带有线程，计时器，信号量，IRQ（通过SVC调度）     graphics ppu 在webgl（sprites，bg层，bg层，单孔多边形），单极多边形）         JS  修复了60 fps，通过浏览器在PC和智能手机上工作     https://beep8.org    href =“ https://github.com/beep8/beep8/beep8-sdk”&gt; https://github.com/beep8/beep8/beep8/beep8/beep8/beep8/beep8/beep8-sdk   我认为，看到现代C ++的特征是在browser环境中播放的现代c ++的特征是现代c ++的特征 - 操场，有用的教育工具或其他东西？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/usation_board_8086      link link link link link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ngrh2h/beep8_running_cc20_on_an_emulated_arm_v4a_cpu/</guid>
      <pubDate>Sun, 14 Sep 2025 13:35:08 GMT</pubDate>
    </item>
    <item>
      <title>从所有真理到（ir）相关性</title>
      <link>https://www.reddit.com/r/programming/comments/1ngphf3/from_all_truths_to_irrelevancies/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  刚刚发布了我博客文章的后续信息！这次，我介绍了“标准化真相表”。 （STT）格式。使用STT，我已经开发了一种算法方法来查找和删除“无关紧要”。来自布尔表达的变量。核心想法很简单：如果更改输入的值不会改变输出，则输入是无关紧要的。这对于简化逻辑和使数字电路更有效是非常有用的。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/paddy3118     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ngphf3/from_all_truths_to_irrelevancies/</guid>
      <pubDate>Sun, 14 Sep 2025 12:00:57 GMT</pubDate>
    </item>
    <item>
      <title>我尝试了AI辅助评论，让我们看看数字。</title>
      <link>https://www.reddit.com/r/programming/comments/1ngm7fa/i_have_tried_aiassisted_reviews_lets_look_at_the/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  你好！我是OpenSource Project Lychee的领导开发人员，由于我们是一支小型团队，因此我不得不从适当的4眼切换到2眼 +一对Ai-Eyes。我使用此工具已经一个月了，所以我认为进行“评估”很有趣。   tl; dr分布评论：   15％毫无用处  13％的假设是错误的假设  21％是nitpick的，  13％的13％是周到的，     35％ 35％ 35％  35％    ps：帖子以古老的方式编写。这里没有GPT废话。 ; p  以正确百分比编辑。感谢 u/asphais   double检查我的数学...    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/ildyria     &lt;a href =“ https://www.reddit.com/r/programming/comments/1ngm7fa/i_have_have_tried_aiassisted_reviews_reviews_lets_lets_lets_look_at_at_at_t_th_at_the/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ngm7fa/i_have_tried_aiassisted_reviews_lets_look_at_the/</guid>
      <pubDate>Sun, 14 Sep 2025 08:50:03 GMT</pubDate>
    </item>
    <item>
      <title>软件工程师如何做出富有成效的决策（不减速团队）</title>
      <link>https://www.reddit.com/r/programming/comments/1nglax1/how_software_engineers_make_productive_decisions/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/strategizeyourcareer   [link] ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nglax1/how_software_engineers_make_productive_decisions/</guid>
      <pubDate>Sun, 14 Sep 2025 07:54:39 GMT</pubDate>
    </item>
    <item>
      <title>新的Mujoco-RS版本：1.3.0</title>
      <link>https://www.reddit.com/r/programming/comments/1nga4kg/new_mujocors_release_130/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/use-use-3149      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nga4kg/new_mujocors_release_130/</guid>
      <pubDate>Sat, 13 Sep 2025 22:05:22 GMT</pubDate>
    </item>
    <item>
      <title>如何使用Java的TestContainers的PostgreSQL SSL SSL CERT认证</title>
      <link>https://www.reddit.com/r/programming/comments/1ng9nn7/how_to_use_postgresql_ssl_cert_authentication/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://ozkanpakdil.github.io/posts/my_collections/2025/09-12-testcontainers-postgresql-ssl/”&gt; [link]        [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ng9nn7/how_to_use_postgresql_ssl_cert_authentication/</guid>
      <pubDate>Sat, 13 Sep 2025 21:45:11 GMT</pubDate>
    </item>
    </channel>
</rss>