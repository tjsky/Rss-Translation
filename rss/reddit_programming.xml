<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sun, 10 Aug 2025 15:18:44 GMT</lastBuildDate>
    <item>
      <title>ELI5对帽定理的解释。</title>
      <link>https://www.reddit.com/r/programming/comments/1mml4x2/eli5_explanation_of_the_cap_theorem/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/trolleid     [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mml4x2/eli5_explanation_of_the_cap_theorem/</guid>
      <pubDate>Sun, 10 Aug 2025 15:16:05 GMT</pubDate>
    </item>
    <item>
      <title>系统设计中的势力：完整示例</title>
      <link>https://www.reddit.com/r/programming/comments/1mmkzqa/idempotency_in_system_design_full_example/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/trolleid     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmkzqa/idempotency_in_system_design_full_example/</guid>
      <pubDate>Sun, 10 Aug 2025 15:10:12 GMT</pubDate>
    </item>
    <item>
      <title>非程序员解决编程问题的解决方案。</title>
      <link>https://www.reddit.com/r/programming/comments/1mmkarz/nonprogrammers_solutions_to_programming_problems/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/nsredditshitposter     [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmkarz/nonprogrammers_solutions_to_programming_problems/</guid>
      <pubDate>Sun, 10 Aug 2025 14:41:13 GMT</pubDate>
    </item>
    <item>
      <title>ShadowEngine2D v1.2.0：基于锈2D游戏引擎，带有物理，tilemaps和性能分析，现在在Crates.io上</title>
      <link>https://www.reddit.com/r/programming/comments/1mmjudi/shadowengine2d_v120_rustbased_2d_game_engine_with/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我刚刚发布了ShadowEngine2d v1.2.0，用Rust编写的2D游戏引擎。  v1.2.0中的新功能：   - 带有Font Management        -  2D Pysict prosect  prodiil pryection-P&gt; prodiil的文本渲染系统 system with CSV import/export - Performance profiler with FPS tracking and memory monitoring - Save/load system with JSON serialization and auto-save Technical stack: - WGPU for cross-platform rendering - Winit for windowing and input handling - Parry2d for physics simulation - Serde for serialization - Glam for math operations Installation: cargo add shadowengine2d The crate includes 4 examples demonstrating basic usage, modern game structure, debug output, and all v1.2.0 features. Licensed under MIT and Apache 2.0.引擎用硬件加速图形渲染支持Windows，MacOS和Linux。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/suremeat5400      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmjudi/shadowengine2d_v120_rustbased_2d_game_engine_with/</guid>
      <pubDate>Sun, 10 Aug 2025 14:22:01 GMT</pubDate>
    </item>
    <item>
      <title>rustroid-在您的Android手机上本地运行的锈IDE。</title>
      <link>https://www.reddit.com/r/programming/comments/1mmjt5i/rustroid_the_rust_ide_that_runs_locally_on_your/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  你好。我是穆罕默德·哈立尔（Mohammed Khaled），我直接直接达到了重点。 我刚刚完成了我一生中最大的项目之一。大约一年的时间，我一直在为Android创作IDE（在本地运行Android）。根据IDE，我的确是指一个集成的开发环境，该环境提供了语法突出显示，自动完成，诊断，签名帮助，进行定义，声明，实现，显示文档等。 I chose Rust because it&#39;s consistently one of the most admired languages in the annual Stack Overflow surveys. A lot of the code in the IDE is shared, so it wouldn&#39;t be too difficult to adapt it for other languages in the future. The IDE does even allow the user to export APKs for graphical applications and games and also lets them run the app quickly without having to install it.该应用实际上使用一种奇怪的动态加载技术来从其从您的代码生成的共享库中加载自身。 我已经为应用程序创建了一个网站，其中我详细介绍了它的功能： href =“ https://rustroid.is-a.dev/story”&gt; https://rustroid.is-a.dev/story   该应用程序可在Google Play上获得。  https://play.google.com/store/store/pplay/pplay/pplay/pplay/pplay/details/details/details/details/details/detail-com..mohamm- hamm- hammedkhc.iide.iide.rust一下免责声明：该应用程序不是开源和/或免费的，但它非常便宜。它也只需$ 4.50。播放：  https：//play.google.com/store/store/store/store/store/papps/details/details/details/details?id=com.mohammed=com.mohammed =/sc.mohammedkhc.iide.rust ＆＃32;提交由＆＃32; /u/u/u/mohammedkhc       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmjt5i/rustroid_the_rust_ide_that_runs_locally_on_your/</guid>
      <pubDate>Sun, 10 Aug 2025 14:20:39 GMT</pubDate>
    </item>
    <item>
      <title>写了一个对初学者友好的线性回归教程（带有完整代码）</title>
      <link>https://www.reddit.com/r/programming/comments/1mmjgrw/wrote_a_beginnerfriendly_linear_regression/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   嘿大家！  我刚刚发布了一份简单线性回归的初学者友好指南，我涵盖了我所涵盖的：      理解回归vs分类 li&gt; fir&gt; line li&gt; li li li li li  li  一个带有代码，视觉效果和预测的动手Python项目  它是为刚开始在ML中启动的任何人设计的，而他们想通过构建而不会学习 -     。 如果您有机会阅读它，我会喜欢您的反馈，upvote，如果您觉得很有用，我会喜欢它。您的支持将帮助更多的初学者发现！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/motor_cry_4380       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmjgrw/wrote_a_beginnerfriendly_linear_regression/</guid>
      <pubDate>Sun, 10 Aug 2025 14:06:03 GMT</pubDate>
    </item>
    <item>
      <title>开始技术写作，〜4年的经验</title>
      <link>https://www.reddit.com/r/programming/comments/1mmicpn/started_technical_writing_4_years_of_experience/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我最近再次选择了编写技术内容，我很乐意所有编程爱好者阅读它！由于我当前的工作，我已经有4年的整体经验和将近2年的前端专业知识。到目前为止，我主要写过有关利基/性能的东西，并且很喜欢它。 我也试图让我的技术写作继续前进 - 不确定我所采用的路线是否正确，但是我在媒体上写作（也可以很快替代）。我正在尝试更多地关注我的著作，因此，如果这里的人们可以阅读并分享一些反馈，那就太好了。谢谢！ 写了有关处理JavaScript中二进制数据的数据结构，它们的相似性和差异： https://medium.com/@devoopsie/mastering-binary-data-in-javascript-an--planation-oraraybuffer-tyardaray-tyardaray-and-dataview-08447d10cd6d    还写了有关网络工人获得的UI性能提高的文章： https://medium.com/@devoopsie/how-i-i-squeezed-un-80-ui-speed-gain--s- using-web-workers-in-my-electron-app-9fe4e7731e7d     &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/_vibhor_gupta_        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmicpn/started_technical_writing_4_years_of_experience/</guid>
      <pubDate>Sun, 10 Aug 2025 13:17:44 GMT</pubDate>
    </item>
    <item>
      <title>软件现代化项目难题：三思而后行 - 焦点是说没有</title>
      <link>https://www.reddit.com/r/programming/comments/1mmh9ze/software_modernization_projects_dilemma_think/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://medium.com/@hobokendays/software-modernization-projects-dilemma-part-part-2-7f6002c4b6f1”&gt; [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmh9ze/software_modernization_projects_dilemma_think/</guid>
      <pubDate>Sun, 10 Aug 2025 12:27:40 GMT</pubDate>
    </item>
    <item>
      <title>功能颜色代表不同的执行上下文</title>
      <link>https://www.reddit.com/r/programming/comments/1mmfakw/function_colors_represent_different_execution/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/shadowys     ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmfakw/function_colors_represent_different_execution/</guid>
      <pubDate>Sun, 10 Aug 2025 10:38:57 GMT</pubDate>
    </item>
    <item>
      <title>☝️撰写像高级工程师一样的验尸</title>
      <link>https://www.reddit.com/r/programming/comments/1mmb7br/write_a_postmortem_like_a_senior_engineer/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/strategizeyourcareer   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmb7br/write_a_postmortem_like_a_senior_engineer/</guid>
      <pubDate>Sun, 10 Aug 2025 06:17:12 GMT</pubDate>
    </item>
    <item>
      <title>[P]我通过编码含义而不是数据完成了5000：1的压缩</title>
      <link>https://www.reddit.com/r/programming/comments/1mm6t2s/p_i_accomplished_50001_compression_by_encoding/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我找到了一种压缩含义（不是数据）的方法，即AI系统可以以不可能的比率进行解压缩。 传统压缩：10：1最大值（Shannon&#39;s Entropoy ottopy Limit）（Shannon&#39;s Entropoy limit）语义压缩：5000：1 per（17,500：1 p&gt;） href =“ https://docs.google.com/document/d/1xcbmxiu1rrsrsrsrsrsrsr0itw-ju85b_lyxkvk4ju6r0aekovti8/edit?usp = drive_link”将其参与完整的实现，因为他们理解含义，而不仅仅是数据模式。 乐于回答问题或在评论中提供更多示例。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/barphite       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mm6t2s/p_i_accomplished_50001_compression_by_encoding/</guid>
      <pubDate>Sun, 10 Aug 2025 02:14:38 GMT</pubDate>
    </item>
    <item>
      <title>Java 25 RC1现在可用</title>
      <link>https://www.reddit.com/r/programming/comments/1mm4hid/java_25_rc1_builds_now_available/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/bluegoliath      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mm4hid/java_25_rc1_builds_now_available/</guid>
      <pubDate>Sun, 10 Aug 2025 00:18:22 GMT</pubDate>
    </item>
    <item>
      <title>最小Python Secp256K1 + ECDSA实施</title>
      <link>https://www.reddit.com/r/programming/comments/1mm4bj4/minimal_python_secp256k1_ecdsa_implementation/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  写下了SECP256K1椭圆形曲线 + ECDSA签名/验证的微小的Python实施。 包括：   -secp256k1 curve Math验证  repo： https://github.com/0xmouiz/0xmouiz/python-secp256k1 提交由＆＃32; /u/u/mou3iz_edd      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mm4bj4/minimal_python_secp256k1_ecdsa_implementation/</guid>
      <pubDate>Sun, 10 Aug 2025 00:10:24 GMT</pubDate>
    </item>
    <item>
      <title>从零到生产：一个免费的平台来掌握真正的框架挑战</title>
      <link>https://www.reddit.com/r/programming/comments/1mm3p0s/from_zero_to_production_a_free_platform_for/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/safe-ball4818       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mm3p0s/from_zero_to_production_a_free_platform_for/</guid>
      <pubDate>Sat, 09 Aug 2025 23:39:58 GMT</pubDate>
    </item>
    <item>
      <title>MCP vs SDK：LLM驱动的可扩展性的两条途径</title>
      <link>https://www.reddit.com/r/programming/comments/1mlwrlc/mcp_vs_sdk_two_paths_to_llmpowered_extensibility/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在早期，“软件饮食世界”意味着真正的力量归功于可以通过编写自己的程序或脚本编写他们使用的程序来弯腰工具的人。现在，有了大型语言模型，问题不仅是您的应用程序开箱即用了什么，而且您允许AI工具可以处理的内容。 在这篇文章中，我研究了两个清晰的模式：      llm可以直接调用您的应用程序的函数  两者都具有优势，权衡和在大多数严重产品中的位置。钥匙是决定绘制线路的位置 - 并确保打开的门与用户（及其AIS）实际工作的方式匹配。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/wifeeyedfascination      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mlwrlc/mcp_vs_sdk_two_paths_to_llmpowered_extensibility/</guid>
      <pubDate>Sat, 09 Aug 2025 18:37:46 GMT</pubDate>
    </item>
    </channel>
</rss>