<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Mon, 11 Aug 2025 09:23:03 GMT</lastBuildDate>
    <item>
      <title>git rebase  - 就像您是新手Git一样解释</title>
      <link>https://www.reddit.com/r/programming/comments/1mn85pw/git_rebase_explained_like_youre_new_to_git/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  如果 git merge 感觉凌乱，您的历史看起来像意大利面， git rebase 可能是您所需要的。 在这篇文章中，我在 plash inter      示例 何时使用它（何时不使用）  如果您被告知您“只是在PR之前折叠”，但从未真正了解正在发生的事情。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/sshetty03      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mn85pw/git_rebase_explained_like_youre_new_to_git/</guid>
      <pubDate>Mon, 11 Aug 2025 09:15:51 GMT</pubDate>
    </item>
    <item>
      <title>为什么基础架构作为代码必须有</title>
      <link>https://www.reddit.com/r/programming/comments/1mn6ic8/why_infrastructure_as_code_is_a_must_have/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/trolleid      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mn6ic8/why_infrastructure_as_code_is_a_must_have/</guid>
      <pubDate>Mon, 11 Aug 2025 07:26:48 GMT</pubDate>
    </item>
    <item>
      <title>内存泄漏跟踪器在C中</title>
      <link>https://www.reddit.com/r/programming/comments/1mn64tq/memory_leaks_tracker_in_c/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   idk如果这很有用或sumthin，但我很快就创建了它。  y&#39;all可以（如果您想要的话）可以对其进行测试。  &lt;！ -  sc_on-&gt; sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/creorganic8886      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mn64tq/memory_leaks_tracker_in_c/</guid>
      <pubDate>Mon, 11 Aug 2025 07:02:15 GMT</pubDate>
    </item>
    <item>
      <title>PACE分层应用程序组合</title>
      <link>https://www.reddit.com/r/programming/comments/1mn63ba/pace_layering_an_application_portfolio/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://frederickvanbrabant.com/blog/2025-08-10-pace-layering-an-application-portfolio?utm_source = programming”&gt; [link]     [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mn63ba/pace_layering_an_application_portfolio/</guid>
      <pubDate>Mon, 11 Aug 2025 06:59:53 GMT</pubDate>
    </item>
    <item>
      <title>二进制搜索 - 想到积极</title>
      <link>https://www.reddit.com/r/programming/comments/1mn4gxs/binary_searchthink_positive/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/mttd       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mn4gxs/binary_searchthink_positive/</guid>
      <pubDate>Mon, 11 Aug 2025 05:19:15 GMT</pubDate>
    </item>
    <item>
      <title>使用C作为脚本语言</title>
      <link>https://www.reddit.com/r/programming/comments/1mn42sr/using_c_as_a_scripting_language/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/curlybutnotchubby        [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mn42sr/using_c_as_a_scripting_language/</guid>
      <pubDate>Mon, 11 Aug 2025 04:56:43 GMT</pubDate>
    </item>
    <item>
      <title>ShadowEngine2D-快速生锈2D游戏引擎</title>
      <link>https://www.reddit.com/r/programming/comments/1mn32bj/shadowengine2d_fast_rust_2d_game_engine/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  正文文本：刚刚为我的Rust 2D游戏引擎启动了网站。由ECS架构，GPU渲染和插件系统构建。具有热功能资产，3D音频，动画和场景管理。单击“下载野兽”从Crates.io获取引擎。非常适合想要无复杂性能的独立开发人员。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/suremeat5400      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mn32bj/shadowengine2d_fast_rust_2d_game_engine/</guid>
      <pubDate>Mon, 11 Aug 2025 04:00:36 GMT</pubDate>
    </item>
    <item>
      <title>我做了一个矢量数据库，您可以在其中热索引索引</title>
      <link>https://www.reddit.com/r/programming/comments/1mn0it0/i_made_a_vector_db_where_you_can_hotswap_the/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  厌倦了在速度和准确性之间选择相似性搜索。因此，我使索引可交换。 线性的小东西，kd-tree用于地图，lsh用于嵌入。 github： https://github.com/doganarif/vectordb 提交由＆＃32; /u/u/doganarif       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mn0it0/i_made_a_vector_db_where_you_can_hotswap_the/</guid>
      <pubDate>Mon, 11 Aug 2025 01:52:18 GMT</pubDate>
    </item>
    <item>
      <title>转换网络安全：Kintsugi Paradox-Loop验证码系统</title>
      <link>https://www.reddit.com/r/programming/comments/1mmy4im/transforming_cybersecurity_the_kintsugi/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  ＃转换网络安全：Kintsugi Paradox-Loop Captcha Captcha System  大多数码头都会使真实的用户感到沮丧，并且几乎不会减慢现代机器人。如果验证可能是直观，美丽和协作的，该怎么办？   kintsugi悖论 - 环验证码系统是一个开源项目，可以重新构想安全性：机器人被困在递归悖论循环中，而人类经历了创造性的哲学挑战。 Each attack is transformed into digital art, inspired by the Japanese philosophy of Kintsugi—repairing cracks with gold to create something stronger and more beautiful. Highlights: - Quantum paradox puzzles challenge bots, not humans - Every interaction generates community art - No tracking, no tedious image puzzles - Open邀请艺术家，哲学家和开发商贡献 体验悖论，加入革命，并帮助我们建立越来越强大和更美丽的安全性。提交由＆＃32; /u/u/u/fearless_issue4846       [commist]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmy4im/transforming_cybersecurity_the_kintsugi/</guid>
      <pubDate>Sun, 10 Aug 2025 23:59:27 GMT</pubDate>
    </item>
    <item>
      <title>git责备认知偏见 - 修补大脑的默认决策分支</title>
      <link>https://www.reddit.com/r/programming/comments/1mmvhn2/git_blame_cognitive_biases_patching_your_brains/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/perpectiveship       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmvhn2/git_blame_cognitive_biases_patching_your_brains/</guid>
      <pubDate>Sun, 10 Aug 2025 22:01:47 GMT</pubDate>
    </item>
    <item>
      <title>Zig的可爱语法</title>
      <link>https://www.reddit.com/r/programming/comments/1mmtcfv/zigs_lovely_syntax/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/steveklabnik1     [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmtcfv/zigs_lovely_syntax/</guid>
      <pubDate>Sun, 10 Aug 2025 20:34:24 GMT</pubDate>
    </item>
    <item>
      <title>如何提出对代码库的有影响力的改进并拥有实施</title>
      <link>https://www.reddit.com/r/programming/comments/1mmrk79/how_to_propose_an_impactful_improvement_to_the/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/gregorojstersek      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmrk79/how_to_propose_an_impactful_improvement_to_the/</guid>
      <pubDate>Sun, 10 Aug 2025 19:24:56 GMT</pubDate>
    </item>
    <item>
      <title>从害羞的工程师到甲骨文的导演，以及熟练的沟通者</title>
      <link>https://www.reddit.com/r/programming/comments/1mmrjmd/from_shy_engineer_to_director_at_oracle_and_a/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/u/gregorojstersek       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmrjmd/from_shy_engineer_to_director_at_oracle_and_a/</guid>
      <pubDate>Sun, 10 Aug 2025 19:24:22 GMT</pubDate>
    </item>
    <item>
      <title>偷偷摸摸地提交</title>
      <link>https://www.reddit.com/r/programming/comments/1mmq9en/sneaky_git_commits/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/tavianator      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmq9en/sneaky_git_commits/</guid>
      <pubDate>Sun, 10 Aug 2025 18:35:30 GMT</pubDate>
    </item>
    <item>
      <title>大规模负载平衡：隐藏的挑战和经验教训</title>
      <link>https://www.reddit.com/r/programming/comments/1mmo3d0/load_balancing_at_scale_hidden_challenges_and/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  负载平衡似乎很简单，直到您在动态环境中以大规模运行。 在大型系统中，无论是Kubernetes，Cansure Erchingeration，还是传统的服务部署，上游服务器都在不断变化。 Workloads vary in complexity, requests can be uneven, and simple algorithms like round-robin often break down. This post looks at the real-world issues that show up in production: • Traffic imbalance during host rotation • Cold-start spikes when new instances join • How different algorithms (least connections, power-of-two-choices, consistent hashing) behave under stress • The impact of proxy architecture （Envoy vs Haproxy）关于负载分配精度 它是基于从高流量环境中的操作反向代理中学到的经验教训，以及公平，效率和弹性之间的权衡。  href =“ https://startwithawhy.com/reverseproxy/2025/08/08/reverseproxy-deep-deep-dive-part4.html”&gt; https://startwithhy.com/reverseproxy/2025/2025/08/08/08/08/08/reverseproxy-deep-deep-dive-part4.hhh.hhh.hhhh.hhhhh.hhhhhhh.hhhhhhhhhh.hhhhhhhh pret 要听到他人如何在自己的系统中解决这些挑战。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/miggyishu      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmo3d0/load_balancing_at_scale_hidden_challenges_and/</guid>
      <pubDate>Sun, 10 Aug 2025 17:12:01 GMT</pubDate>
    </item>
    </channel>
</rss>