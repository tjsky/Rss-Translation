<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sun, 28 Sep 2025 18:22:08 GMT</lastBuildDate>
    <item>
      <title>我将多年的编程及其变成了讽刺的“词典”  -  AMA（独立发表，9月30日，在这里，直到10月5日）</title>
      <link>https://www.reddit.com/r/programming/comments/1nsuqdw/i_turned_years_of_programming_it_absurdities_into/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿 r/programming ， 在技术领域十年后把他们变成了长本书的讽刺。 Think of it as a dictionary of survival for anyone who’s ever sat through a sprint planning that felt like group therapy, or watched a manager rename “bugs” into “undocumented features.” The book officially launches September 30th, and I went the full self-publishing route (handled everything myself except for layout/graphics, which I outsourced to a DTP专家）。 我将整个星期在这里回答，直到10月5日（如果需要时更长）。乐于聊天：  编程文化荒谬的荒谬性，将其纳入书中 将其翻译成讽刺 独立出版物是开发者side Quest  的感觉 &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/uetibal-field-501      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nsuqdw/i_turned_years_of_programming_it_absurdities_into/</guid>
      <pubDate>Sun, 28 Sep 2025 17:50:24 GMT</pubDate>
    </item>
    <item>
      <title>为什么Python是最佳的初学者编程语言？</title>
      <link>https://www.reddit.com/r/programming/comments/1nsun8r/why_python_is_the_best_programming_language_to/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我想写有关Python，ML和DL的博客文章，这是我的第一篇博客文章。你们认为我应该长期做吗？也感谢一些支持！！他  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/usection-ad2549     [link]    32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nsun8r/why_python_is_the_best_programming_language_to/</guid>
      <pubDate>Sun, 28 Sep 2025 17:46:52 GMT</pubDate>
    </item>
    <item>
      <title>蜘蛛侠：电影游戏解剖项目 - 简介</title>
      <link>https://www.reddit.com/r/programming/comments/1nsu9jn/spiderman_the_movie_game_dissection_project/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/krystalgamer   [link]  &lt;a href =“ https://www.reddit.com/r/programming/comments/1nsu9jn/spiderman_the_movie_game_game_game_dissection_project/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nsu9jn/spiderman_the_movie_game_dissection_project/</guid>
      <pubDate>Sun, 28 Sep 2025 17:31:56 GMT</pubDate>
    </item>
    <item>
      <title>我应该如何进行编程？</title>
      <link>https://www.reddit.com/r/programming/comments/1nst9ah/how_should_i_get_into_programming/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我在过去的〜4  -  5年中一直在用刮擦编码，但是我真的很想尝试搭扣，像Unity或Ue之类的完整游戏中制作一个完整的游戏。我应该怎么做？我去年为Python上了一个编码课，所以我有点了解基础知识，但我真的很想尝试一下。有任何提示？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/no/no-subject-619       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nst9ah/how_should_i_get_into_programming/</guid>
      <pubDate>Sun, 28 Sep 2025 16:51:53 GMT</pubDate>
    </item>
    <item>
      <title>厌倦了python虚拟环境吃您的磁盘空间吗？我建立了一个解决方案（uvkill）</title>
      <link>https://www.reddit.com/r/programming/comments/1nst3cx/tired_of_python_virtual_environments_eating_your/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   uvkill-清理python虚拟环境混乱    tl; dr ：查找和删除旧Python python虚拟环境的交互工具。 Like npkill, but for .venv, venv, and virtualenv folders. What It Does UVKill scans your system for Python virtual environments, shows you their sizes in an interactive list, and lets you delete the ones you don&#39;t need anymore.它通过清理遗忘的环境来帮助释放浪费磁盘空间的千兆字节。 问题 许多开发人员创建了快速的Python虚拟环境来测试并忘记了它们。随着时间的流逝，这些会积聚并浪费大量磁盘空间。例如，您可能会发现47个虚拟环境在没有意识到的情况下占用了23GB的空间。 解决方案  uvkill是一个简单的工具，是一个简单的工具：  扫描您的系统中的系统中的虚拟环境  在互动列表中显示 li&gt; li&gt;  li&gt; li&gt; li&gt; li&gt; ute 使用 NPX UVKILL （无需安装）  功能      多选择模式 buld dreetion        json json tougpt 以自动化&gt;           dry-run模式用于安全测试   跨平台支持（Windows，MacOS，Linux，Linux）    快速扫描实时结果      目标受众群体 Students working on multiple assignments or projects Data scientists who frequently spin up project-specific environments Anyone struggling with low disk space due to forgotten .venv or virtualenv folders  Quick Start Run immediately (no installation required):   npx uvkill    或安装全局：    npm install -g uvkill    为什么我为python开发人员，从不同的项目中构建了这个随着时间的流逝，他们会消耗大量的磁盘空间。现有工具要么太一般，要么在特定于Python的环境中有效。 uvkill是 npkill 的叉子，专门为检测Python环境模式进行了重新设计。 技术细节      语言   ：typescript      通过寻找 pyvenv.cfg ，激活脚本和Python口译员   兼容：支持 .venv  venv ，许可和开源  存储库链接      github ：  npm ： https://www.npmjs.com/package/package/package/package/uvkill 支持  conda环境检测 更好地与流行的Python工具 环境用法分析    清理了您的Python开发环境，并与Uvkill。提交由＆＃32; /u/u/zephop4413       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nst3cx/tired_of_python_virtual_environments_eating_your/</guid>
      <pubDate>Sun, 28 Sep 2025 16:45:12 GMT</pubDate>
    </item>
    <item>
      <title>讨论有关在实时协作应用程序中使用凸的讨论</title>
      <link>https://www.reddit.com/r/programming/comments/1nss8nv/discussion_about_using_convex_in_a_realtime/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  最近一直在尝试围绕设计构建产品，以excalidraw的figma为例，想想诸如无花果的东西，而不是完全正确。早些时候，我从头开始构建整个Websocket层，试图真正学习，而不仅仅是使用Fabric.js之类的东西，对于许多Canvas实现，例如矩形，圆圈，线路，而是想知道国家管理和帆布渲染+像Excalidraw一样为用户提供的本地状态节省。我在中途听说过凸，我以前从未使用过凸，但据我所知，从评论和体验中，它是Auth，DBS等等的很棒的产品。因此，我的问题是，我是否应该遵循使用Dixie.js使用WS层从头开始为整个产品构建的常规路径，还是应该切换到凸面并利用其产品套件向前发展？如果您有使用凸的经验，以及如何在此处实施或您可以共享的其他工具。这将有用  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/tanmay__13       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nss8nv/discussion_about_using_convex_in_a_realtime/</guid>
      <pubDate>Sun, 28 Sep 2025 16:10:22 GMT</pubDate>
    </item>
    <item>
      <title>从Java生态系统火车上分离GraalVM</title>
      <link>https://www.reddit.com/r/programming/comments/1nss0jv/detaching_graalvm_from_the_java_ecosystem_train/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/teejunky      &lt;a href =“ https://www.reddit.com/r/programming/comments/1nss0jv/detaching_graalvm_from_from_the_java_ecosystem_train/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nss0jv/detaching_graalvm_from_the_java_ecosystem_train/</guid>
      <pubDate>Sun, 28 Sep 2025 16:01:22 GMT</pubDate>
    </item>
    <item>
      <title>与本地LLM的自动文献</title>
      <link>https://www.reddit.com/r/programming/comments/1nsr4l7/autodocumentation_with_a_local_llm/</link>
      <description><![CDATA[I found that any time a code file gets into the 1000+ lines size, Github CoPilot spends a long time having to traverse through it looking for the functions it needs to edit, wasting those precious tokens. To ease that burden, I decided to build a python script that recursively runs through your code base, documenting every single file and directory within it.这些文档可以由llm的文档在您的代码上使用，以获取信息，例如可用的功能以及它们所使用的行。该系统提示目前旨在为文件提供有关该文件的LLM的信息，但是可以轻松地将它们调整为“总结此内容的内容”，以供人类阅读。最重要的是，每次运行一次，它只会更新对其进行更改的文件/目录的文档，这意味着您可以在编码时很容易地保持文档的最新状态。   当前，llm接口当前指向一个本地的Ollama实例，该实例指向运行MISTRAL的本地实例，这可以更新到任何一个更新到一个更强大的云模型。将造成“文档驱动开发”的阶段，但许多人击败了我。不看他们的工具可以启用它！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/st0necutt3r       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nsr4l7/autodocumentation_with_a_local_llm/</guid>
      <pubDate>Sun, 28 Sep 2025 15:25:27 GMT</pubDate>
    </item>
    <item>
      <title>使用PostgreSQL模板数据库求解慢速数据库测试 - 进行实现</title>
      <link>https://www.reddit.com/r/programming/comments/1nsr16m/solving_slow_database_tests_with_postgresql/</link>
      <description><![CDATA[]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nsr16m/solving_slow_database_tests_with_postgresql/</guid>
      <pubDate>Sun, 28 Sep 2025 15:21:35 GMT</pubDate>
    </item>
    <item>
      <title>我已经使用了Node.js多年了，但是我从来不知道它是如何工作的。所以我走下了兔子洞。</title>
      <link>https://www.reddit.com/r/programming/comments/1nspmx0/ive_used_nodejs_for_years_but_i_never_really_knew/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在最长的时间内，我是刚刚键入 node index.js 的开发人员之一，很高兴它起作用。我知道V8和事件循环，但是如果我的工作取决于它，我无法正确解释它。 与Node合作多年后，我决定最终挖掘并找出引擎盖下实际发生了什么。因此，我在 I went into things like:  How the V8 engine isn&#39;t just one thing, but a pipeline with a parser, an interpreter (Ignition), and an optimizing compiler (TurboFan). The fact that the Event Loop isn&#39;t just a single queue, but has distinct phases (Timers, Poll, Check, etc.) which explains a lot of weird  settimeout  vs  setImmediate  crathion。 实际使用了libuv线程池的用途（以及使用的是 not&gt; not ）。   它完全改变了我对编写async code的想法。在此处共享，以防其他人可以单击相同。  这是链接： 关于节点内部的一个概念是什么，一旦您学到了它，就为您更改了游戏？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/tanmay__13    href =“ https://medium.com/@tanmay.bansal20/i-thought-i-knew-node-node-js-js-then-i-dug-deeper-405f4453638e?sk = 7bd5f74a74a72dcdcd6d6d6d6d6d6df7b5b5b5b5b03999a2e2ebe2ebe   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nspmx0/ive_used_nodejs_for_years_but_i_never_really_knew/</guid>
      <pubDate>Sun, 28 Sep 2025 14:24:27 GMT</pubDate>
    </item>
    <item>
      <title>Java的策略模式</title>
      <link>https://www.reddit.com/r/programming/comments/1nsmj8j/strategy_pattern_in_java/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/mstrbeton      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nsmj8j/strategy_pattern_in_java/</guid>
      <pubDate>Sun, 28 Sep 2025 12:00:06 GMT</pubDate>
    </item>
    <item>
      <title>解决多语言开发团队的真正问题：评论混乱。</title>
      <link>https://www.reddit.com/r/programming/comments/1nsk824/solving_a_real_problem_for_multilingual_dev_teams/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  您正在一个团队中，开发人员会说不同的语言。代码库评论用英语。要了解代码，您可以使用工具将评论转换为您的母语（例如，法语）。 您完成工作，用法语编写自己的评论，以便您可以清楚地思考。您提交拉动请求。  现在是什么？  您是：  提交您的法语评论，分散了代码库语言？ 手动重新换回英语，您在提交之前写回英语，然后再提交？这是一个真正的摩擦点，例如Chatgpt之类的工具无法解决。  想法：自动评论同步  如果您的工具为您处理此操作怎么办？一个像这样工作的简单系统：  您的编码并用您喜欢的语言编写评论。 在“提交”上，挂钩自动将原始英语翻译嵌入了评论本身。。      ci/cd cd pipeline vipeline popeline vipeinal vipearly em   Example: // A French dev writes: // Authentifie l&#39;utilisateur &lt;!-- formatic:fr|en:Authenticate the user --&gt; // A German dev sees: // Authentifiziert den Benutzer &lt;!-- formatic:de|en:Authenticate the user --&gt; // The codebase maintains: // Authenticate the user &lt;!-- formatic:en|fr:Authentifie l&#39;utilisateur|de:Authentifiziert den Benutzer --&gt; The value isn&#39;t just translation.它是保持统一的代码库的同时允许开发人员用母语工作。    问题：    您的团队面对这个问题 是否可以更轻松地接受此解决方案？扬声器？  想法？我正在围绕这个概念构建工具，需要残酷的诚实&lt; /p&gt;  nb：这不是自我促销，我正在建立MVP并可以使用用户的真实反馈（开发人员）。此工具将使终身时间免费访问开源许可证项目。也可以自由地访问前20位用户。抓住？，你做漏斗。加入我们的DISCORD贡献 discord    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/wake_of_ship       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nsk824/solving_a_real_problem_for_multilingual_dev_teams/</guid>
      <pubDate>Sun, 28 Sep 2025 09:42:53 GMT</pubDate>
    </item>
    <item>
      <title>我从克劳德（Claude</title>
      <link>https://www.reddit.com/r/programming/comments/1nsj1ok/i_switched_from_claude_to_dropstone_and_it/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/santosh_arron       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nsj1ok/i_switched_from_claude_to_dropstone_and_it/</guid>
      <pubDate>Sun, 28 Sep 2025 08:25:24 GMT</pubDate>
    </item>
    <item>
      <title>对哈斯克尔的快速评论</title>
      <link>https://www.reddit.com/r/programming/comments/1nsfsb5/a_quick_review_of_haskell/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   Haskell的模因状态已建立得很好，但是它是一个了解更多有关功能编程的好门户吗？该视频着眼于我的经验使平台启动并运行，我对谁最适合了解这种语言的看法。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/stumblingtowards       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nsfsb5/a_quick_review_of_haskell/</guid>
      <pubDate>Sun, 28 Sep 2025 05:00:48 GMT</pubDate>
    </item>
    <item>
      <title>设计两次并信任您的工作</title>
      <link>https://www.reddit.com/r/programming/comments/1nrz2a0/design_twice_and_trust_in_what_you_do/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/dong2015     [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nrz2a0/design_twice_and_trust_in_what_you_do/</guid>
      <pubDate>Sat, 27 Sep 2025 16:09:00 GMT</pubDate>
    </item>
    </channel>
</rss>