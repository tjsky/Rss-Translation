<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Fri, 26 Sep 2025 12:32:13 GMT</lastBuildDate>
    <item>
      <title>JSON不是跨语言的JSON</title>
      <link>https://www.reddit.com/r/programming/comments/1nqz51x/json_is_not_json_across_languages/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/ludovicianul      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqz51x/json_is_not_json_across_languages/</guid>
      <pubDate>Fri, 26 Sep 2025 11:45:02 GMT</pubDate>
    </item>
    <item>
      <title>您可以在复杂的SaaS应用中使用Vibe代码功能吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1nqyh90/can_you_vibe_code_features_in_a_complex_saas_app/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/garethx      &lt;a href =“ https://www.reddit.com/r/programming/comments/1nqyh90/can_you_vibe_code_features_in_complex_complex_saas_app/”]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqyh90/can_you_vibe_code_features_in_a_complex_saas_app/</guid>
      <pubDate>Fri, 26 Sep 2025 11:09:03 GMT</pubDate>
    </item>
    <item>
      <title>自动化编码代理在构建复杂系统方面的良好程度如何？</title>
      <link>https://www.reddit.com/r/programming/comments/1nqyfxv/how_good_are_automated_coding_agents_at_building/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/zetter      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqyfxv/how_good_are_automated_coding_agents_at_building/</guid>
      <pubDate>Fri, 26 Sep 2025 11:07:03 GMT</pubDate>
    </item>
    <item>
      <title>1位是我们需要的：二进制归一化神经网络</title>
      <link>https://www.reddit.com/r/programming/comments/1nqxo66/1_bit_is_all_we_need_binary_normalized_neural/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/garethx       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqxo66/1_bit_is_all_we_need_binary_normalized_neural/</guid>
      <pubDate>Fri, 26 Sep 2025 10:22:10 GMT</pubDate>
    </item>
    <item>
      <title>线性代数的小书</title>
      <link>https://www.reddit.com/r/programming/comments/1nqxlmq/the_little_book_of_linear_algebra/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/garethx      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqxlmq/the_little_book_of_linear_algebra/</guid>
      <pubDate>Fri, 26 Sep 2025 10:17:51 GMT</pubDate>
    </item>
    <item>
      <title>开发开发人员：我如何将YouTube视图变成潜在客户，而无需在广告上花费</title>
      <link>https://www.reddit.com/r/programming/comments/1nqxjx1/dev_to_dev_how_im_turning_youtube_views_into/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我一直在研究一个帮助跟踪YouTube转换的SaaS项目。不想踢球 - 只是想分享我学到的东西，因为我认为这里的许多开发人员都悄悄地构建了很酷的东西，但没有看到结果。  YouTube非常适合驾驶顶级流量。但是棘手的部分是将冷流量变成温暖，可追踪的线索。大多数创作者在描述中添加了一个链接，并希望最好的。  funnelyt ）显示了哪些视频导致了我学到的一些令人惊讶的知识  ：  “低视图”视频通常会导致最佳的质量线索 观众在观看        运行广告。 It’s all organic. But we’re getting legit leads now because we track what matters: behavior and conversion, not just vanity metrics. Curious if any devs here are doing something similar? Whether you&#39;re building something for yourself or for a client—how do you track ROI from content? Happy to share code setups if anyone’s curious.  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/corealistic-pitch-169      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqxjx1/dev_to_dev_how_im_turning_youtube_views_into/</guid>
      <pubDate>Fri, 26 Sep 2025 10:14:59 GMT</pubDate>
    </item>
    <item>
      <title>我如何用双子座，copilotkit和langgraph构建了两个Fullstack AI代理商</title>
      <link>https://www.reddit.com/r/programming/comments/1nqwwcc/how_i_built_two_fullstack_ai_agents_with_gemini/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好，我花了最后几周对两个实用的全档代理进行黑客攻击：      post generator ：创建LinkedIn/x帖子，该帖子接地在实时Google搜索结果中。它发出了中间的“工具库”，因此UI实时显示每个研究/搜索/生成步骤。  以下是简化的调用顺序：    [用户类型提示] Next.js ui（copilotchat）UI（copilotchat）acemant/api/api/api/api/api/api/api/api/api/api/api→ FastApi后端（/copilotkit）↓（langgraph Workflow）Post Generator Graph节点↓（呼叫→Google Gemini + Web搜索）流响应＆amp; tool‑logs ↓ Frontend UI renders chat + tool logs + final postcards   Stack Analyzer : analyzes a public GitHub repo (metadata, README, code manifests) and provides detailed report (frontend stack, backend stack, database, infrastructure, how-to-run, risk/notes, more).  这是一个简化的调用序列：   [用户粘贴github url]↓Next.js ui（/stack -analyzer）↓/API/COPILOTKIT→FASTAPI碱结构化分析卡  以下是一切拟合在一起的方式：  全堆栈设置   前端将所有内容包裹在＆lt; copiLotchat; copiLotchat; copilotchat＆gt; 中（来自Copilotkit）（来自Copilotkit），并在下一步。该路由通过GraphQl代理到我们的Python FastApi，该python fastapi正在运行代理代码。   langgraph Workfrows   每个代理都将每个代理定义为状态图。 For example, the Post Generator’s graph has nodes like chat_node (calls Gemini + WebSearch) and fe_actions_node (post-process with JSON schema for final posts).    gemini llm   背后是Google gemini（使用官方 Google&gt; Google-genai  SDK）。我将其连接到Langchain（通过 langchain-google-genai 适配器）。对于堆栈分析仪。  实时UI    copilotkit流均每个代理状态更新到UI。由于UI显示了中间的推理，因此可以更轻松地进行调试。 完整详细的文章：这里   这更像是Dev-demo，而不是产品。但是这里使用的模式（状态图，工具绑定，结构化输出）可以为任何建筑代理的人节省很多时间。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/anmolbaranwal     [link]      32;  &lt;a href =“ https://www.reddit.com/r/programming/comments/1NQWWCC/HOW_I_BUILT_TWO_TWO_FULLSTACK_AI_AIED_AIGENTS_AGENTS_WITH_WITH_WITH_WITH_GEMINI/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqwwcc/how_i_built_two_fullstack_ai_agents_with_gemini/</guid>
      <pubDate>Fri, 26 Sep 2025 09:34:27 GMT</pubDate>
    </item>
    <item>
      <title>您的平台可能已经与未来不相容</title>
      <link>https://www.reddit.com/r/programming/comments/1nqwv0f/your_platform_might_already_be_incompatible_with/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在扎达尔的Infobip Shift，Matt Biilmann（Netlify的首席执行官）认为我们正在进入一个新的设计时代 - 超越UX和DX。他的理由是，当AI代理人直接开始使用我们的平台时，真正的挑战不仅是好的用户体验，而且他称之为代理体验（AX） 我们在ahthmag.dev上写了他的演讲。这是一本快速但发人深省的读物，讲述了为什么为人类构建的工具实际上可能会阻止AI系统运行良好，这对于我们设计软件的方式可能意味着什么。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/shift_devs     ＆＃32;   [commist]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqwv0f/your_platform_might_already_be_incompatible_with/</guid>
      <pubDate>Fri, 26 Sep 2025 09:32:06 GMT</pubDate>
    </item>
    <item>
      <title>V0.APP准备就绪或仅用于着陆页面？</title>
      <link>https://www.reddit.com/r/programming/comments/1nqwqb7/is_v0app_productionready_or_just_for_landing_pages/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我一直在测试v0.app，这真的很光滑，因为它可以旋转简单的UI组件，但我对它是否可以处理具有auth，Payments等多键应用程序等类似的东西，付费，付款等。任何人实际上是有一个认真的生产应用程序吗？        &lt;！提交由＆＃32; /u/u/u/sad_worry_5482         [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqwqb7/is_v0app_productionready_or_just_for_landing_pages/</guid>
      <pubDate>Fri, 26 Sep 2025 09:23:28 GMT</pubDate>
    </item>
    <item>
      <title>搜索的演变 - 信息检索的简短历史</title>
      <link>https://www.reddit.com/r/programming/comments/1nqwaod/the_evolution_of_search_a_brief_history_of/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/kushalgoenka       [commistion]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqwaod/the_evolution_of_search_a_brief_history_of/</guid>
      <pubDate>Fri, 26 Sep 2025 08:55:19 GMT</pubDate>
    </item>
    <item>
      <title>🚀开发人员的智能，更快，清洁的软件指南：掌握AI代码代理</title>
      <link>https://www.reddit.com/r/programming/comments/1nqvtwj/a_developers_guide_to_smarter_faster_cleaner/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我一直在测试AI代码代理（Claude，deepseek，被整合到诸如Windsurf或Cursor之类的工具中），我注意到了一些东西： 他们不仅会在写作代码上，他们不仅会在写作代码中“更快地”来改变自己的范围。 BE：   设计模式＆amp; clean architecture SOLID principles, TDD, and clean code Understanding trade-offs in system design  In other words: AI may write the function, but we still need to design the system and enforce quality.   提交由＆＃32; /u/u/factance_insect771     [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqvtwj/a_developers_guide_to_smarter_faster_cleaner/</guid>
      <pubDate>Fri, 26 Sep 2025 08:24:15 GMT</pubDate>
    </item>
    <item>
      <title>如何使用tailwind CSS和Alpinejs创建通知</title>
      <link>https://www.reddit.com/r/programming/comments/1nqvl08/how_to_create_a_notification_with_tailwind_css/</link>
      <description><![CDATA[Want to add clean, animated notifications to your project without heavy dependencies? I wrote a step-by-step tutorial on how to build one using Tailwind CSS + Alpine.js, complete with auto-dismiss, hover pause, and multiple types (success, error, warning, info).  阅读完整的教程并在此处获取代码： https：//lexingttps://lexingtonthemes.com/blog/blog/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/posts/  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/michael_andreuzza     [link]    32;   [注释]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqvl08/how_to_create_a_notification_with_tailwind_css/</guid>
      <pubDate>Fri, 26 Sep 2025 08:07:57 GMT</pubDate>
    </item>
    <item>
      <title>使用Ebitengine（教程）创建和加载TILEMAPS</title>
      <link>https://www.reddit.com/r/programming/comments/1nqvh9v/creating_and_loading_tilemaps_using_ebitengine/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/tslocum      [commist]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqvh9v/creating_and_loading_tilemaps_using_ebitengine/</guid>
      <pubDate>Fri, 26 Sep 2025 08:01:15 GMT</pubDate>
    </item>
    <item>
      <title>Java 25新功能和示例</title>
      <link>https://www.reddit.com/r/programming/comments/1nqupsm/java_25_new_features_with_examples/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   java 25于2025年9月16日正式发布。这是一个长期支持（LTS）版本，其中包括核心Java库，语言规格，安全性和性能的大量增强功能。 Oracle计划至少为Java 25提供支持至少八年，使组织能够以自己的步伐迁移，同时从最新功能中受益，包括提高的AI功能和增强的开发人员生产率。以下是 Java 25新功能带有示例的新功能。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/e erdsingh24      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqupsm/java_25_new_features_with_examples/</guid>
      <pubDate>Fri, 26 Sep 2025 07:10:42 GMT</pubDate>
    </item>
    <item>
      <title>厌倦了凌乱的SQL查询？我写了一个指南，帮助我清理了我的</title>
      <link>https://www.reddit.com/r/programming/comments/1nqupgj/tired_of_messy_sql_queries_i_wrote_a_guide_that/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  这是链接： https://medium.com/@tanmay.bansal20/inside-the-life-of-an-sql-query-from-parsing-to-execution-to-execution-and-veything-i-lear------way-way-way-way-way-way-way-way-way-way-way-cdfc31193b7b    我最近深深地了解了我们所有人都犯的SQL错误 - 从微妙的性能杀手到常见的逻辑错误，并为如何发现和修复它们写了一份实用指南。我还提供了优化的技巧以及希望我之前知道的一些技巧。 您在指南中会发现的某些内容：  简单的错误会如何减慢查询 与加入，分组和subqueries和subqueries       的优化 ul的常见 比它应该（或只是想编写更清洁，更有效的查询），这可能会有所帮助。 很想听听您的想法或您要添加的任何提示。您最近遇到的最糟糕的SQL错误是什么？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/tanmay__13    href =“ https://medium.com/@tanmay.bansal20/inside-the-life-of-an-sql-query-from-parsing-to-execution-an d-everythi-i-eard-the-the-way-cdfc31193b7b？sk = 59793BFF8146F824CD6EB7F5AB4F4F5D7C“&gt; [link]    ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nqupgj/tired_of_messy_sql_queries_i_wrote_a_guide_that/</guid>
      <pubDate>Fri, 26 Sep 2025 07:10:06 GMT</pubDate>
    </item>
    </channel>
</rss>