<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Mon, 18 Aug 2025 12:35:33 GMT</lastBuildDate>
    <item>
      <title>员工+佳能：无权领导工具</title>
      <link>https://www.reddit.com/r/programming/comments/1mtki6p/the_staff_canon_tools_for_leading_without/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/bezomaxo      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mtki6p/the_staff_canon_tools_for_leading_without/</guid>
      <pubDate>Mon, 18 Aug 2025 12:23:02 GMT</pubDate>
    </item>
    <item>
      <title>什么是网络开发引擎Nordcraft</title>
      <link>https://www.reddit.com/r/programming/comments/1mtjw7x/what_is_nordcraft_the_web_development_engine/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  快速介绍Nordcraft，成为Web开发引擎的含义  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/uivid_sign9681       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mtjw7x/what_is_nordcraft_the_web_development_engine/</guid>
      <pubDate>Mon, 18 Aug 2025 11:55:01 GMT</pubDate>
    </item>
    <item>
      <title>在浏览器中键入URL并按Enter时会发生什么</title>
      <link>https://www.reddit.com/r/programming/comments/1mtjgec/what_happens_when_you_type_an_url_in_your_browser/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/electrical_gas4694     [link]    32;  &lt;a href =“ https://www.reddit.com/r/programming/comments/1mtjgec/what_happens_happens_when_you_you_type_type_an_url_in_in_your_your_your_your_browser/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mtjgec/what_happens_when_you_type_an_url_in_your_browser/</guid>
      <pubDate>Mon, 18 Aug 2025 11:33:10 GMT</pubDate>
    </item>
    <item>
      <title>让我们做游戏吧！ 307：战场边界</title>
      <link>https://www.reddit.com/r/programming/comments/1mtiti1/lets_make_a_game_307_battlefield_boundaries/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/apeloverage      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mtiti1/lets_make_a_game_307_battlefield_boundaries/</guid>
      <pubDate>Mon, 18 Aug 2025 11:00:40 GMT</pubDate>
    </item>
    <item>
      <title>Dumper应用</title>
      <link>https://www.reddit.com/r/programming/comments/1mtir04/dumper_app/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   dumper-这是用于创建具有灵活连接和存储设置的各种类型的备份数据库（PostgreSQL，MySQL等）的CLI实用程序。  今天，第一个版本此应用 https://github.com/elkirrs/dumper       有很多想法可以添加新功能。 sc_on-&gt;＆＃32;提交由＆＃32; /u/u/elkirrs       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mtir04/dumper_app/</guid>
      <pubDate>Mon, 18 Aug 2025 10:56:53 GMT</pubDate>
    </item>
    <item>
      <title>2025年基准前端</title>
      <link>https://www.reddit.com/r/programming/comments/1mti1m8/benchmarking_frontends_in_2025/</link>
      <description><![CDATA[Hey r/programming, For a while now, I&#39;ve felt that our standard frontend benchmarks don&#39;t tell the whole story for the kind of complex, data-heavy apps many of us spend our days building.核心Web Vitals非常适合初始负载，并且流行的 JS-FrameWork-benchmark 很有用，但是它在测试时尺度应用程序中有两个主要限制：它禁止虚拟化/缓冲渲染，并且在造成沉重的背景时，它在造成的    &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;  &gt; &gt; &gt; 。 我们的应用程序的弹性。 为了解决这个问题，我在过去的10天里花了一个新的基准测试标准，从而使用剧作家从头开始。目的是创建可以在持续的，同时进行的胁迫下提供可靠，高精度测量的东西。 构建这本身就是一个严肃的工程挑战，我想分享三个关键的经验教训：      是平行的trap：我的第一个本能是我的第一个本能是运行测试。这是一场灾难。最大化浏览器实例之间的CPU争论使结果偏向50％。 Lesson: Accurate performance benchmarking must be run serially (--workers=1). The Latency Chasm: The back-and-forth between the Node.js test runner and the browser introduced too much noise. 课程：测量必须是原子。我必须在单个 page.evaluate（）呼叫中包裹整个测试逻辑（触发操作 - 触发动作 - 等待条件 - 测量时间）  waitfor 函数（像大多数）使用长抽纸，这不足以进行性能测量。您无法使用30ms的轮询间隔测量20ms事件。 课程：不信任投票。我必须使用 mutationObserver 在 Exccent 时刻停止计时器。我创建的框架（neo.mjs）。我声称，从主线程中卸载逻辑可以解决主要的性能瓶颈，社区正确地要求提供证明。该基准是证明。  结果  到目前为止，最有趣的测试是针对行业领先的AG网格的新的Neo.mjs网格（在React App中）。当执行重型操作（例如将视口从50列调整为100,000行）时，结果鲜明：      react + ag react + ag grid： 〜3,000-5,5,500ms UI更新时间。       neo.mjs：   〜400ms Ui time。性能差异，取决于浏览器。 这不是对AG网格的起诉，这是一件很棒的工程。这是一个有力的数据点，显示了一个单线读取范式施加的建筑天花板。即使是一流的组件，最终也受到阻塞的主线程的限制。 这是一个开源项目，我希望开始就我们如何更好地衡量和构建“居住在”中的对话。网络。我很想获得有关方法和结果的反馈。   全文（“为什么”）：  https://tobiasuhlig.medium.com/benchmarking-frontends-in-2025-f6bbf43b7721?source=friends = friends_links_link＆amp; sk = af0f2c6745a7ca49999993bc0ae60ae60ae60ae60AdAdaebb40ebb4   github repo（“如何”  - 代码，方法论，结果）：  https://github.com/neomjs/neomjs/neomjs/neomjs/benchmarks/benchmarks  href =“ https://neomjs.com/dist/production/examples/grid/bigdata/index.html“  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/tobiasuhlig      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mti1m8/benchmarking_frontends_in_2025/</guid>
      <pubDate>Mon, 18 Aug 2025 10:16:25 GMT</pubDate>
    </item>
    <item>
      <title>LLM测试策略，来自OpenAI，Google，拟人化，Meta</title>
      <link>https://www.reddit.com/r/programming/comments/1mthzzm/llm_testing_strategies_from_openai_google/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/azilentech      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mthzzm/llm_testing_strategies_from_openai_google/</guid>
      <pubDate>Mon, 18 Aug 2025 10:13:53 GMT</pubDate>
    </item>
    <item>
      <title>共享个人新密码学范式实验：动态抽象加密 + k中的Kraken-GS实现</title>
      <link>https://www.reddit.com/r/programming/comments/1mtho1g/sharing_a_personal_new_cryptography_paradigm/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/kenbrainniks       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mtho1g/sharing_a_personal_new_cryptography_paradigm/</guid>
      <pubDate>Mon, 18 Aug 2025 09:55:16 GMT</pubDate>
    </item>
    <item>
      <title>经过2年以上的开发，我们刚刚开源了整个AI平台 - 请烘烤我们的代码😅</title>
      <link>https://www.reddit.com/r/programming/comments/1mth1zk/we_just_opensourced_our_entire_ai_platform_after/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  几个月后“我们疯了？” meetings, we finally pulled the trigger and open-sourced WEAM - our team AI platform. What it is: Think ChatGPT but built for teams of 20+ Next.js frontend, Node.js/Python backend Connects to OpenAI, Claude, Gemini, Llama - basically every LLM API Has &quot;Brains&quot; （智能文件夹），自定义代理，RAG管道，现成的AI应用程序实际上已经准备好生产（我们一直在内部使用） 我们正在寻找的内容：代码评论（残酷，我们可以接受🔥）为什么您这样做X？”问题搜索错误（肯定有错误隐藏）功能建议架构决策的一般反馈 为什么要开源？诚实地？我们认为AI平台不应该是黑匣子。另外，社区可能会用它来建立比我们以往任何时候都更凉爽的东西。 - &gt;＆＃32;提交由＆＃32; /u/u/flightslow2085      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mth1zk/we_just_opensourced_our_entire_ai_platform_after/</guid>
      <pubDate>Mon, 18 Aug 2025 09:18:20 GMT</pubDate>
    </item>
    <item>
      <title>验尸的。电子商务网站</title>
      <link>https://www.reddit.com/r/programming/comments/1mtghmm/postmortem_of_ecommerce_site/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/electrical_gas4694     [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mtghmm/postmortem_of_ecommerce_site/</guid>
      <pubDate>Mon, 18 Aug 2025 08:43:08 GMT</pubDate>
    </item>
    <item>
      <title>检查egui_graphs网络演示</title>
      <link>https://www.reddit.com/r/programming/comments/1mtgh5n/check_egui_graphs_web_demo/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  ⭐ project      &lt;！ -  sc_on-&gt; 32;提交由＆＃32; /u/u/u/blitzar90      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mtgh5n/check_egui_graphs_web_demo/</guid>
      <pubDate>Mon, 18 Aug 2025 08:42:14 GMT</pubDate>
    </item>
    <item>
      <title>内容 - 可调的存储（CAS）</title>
      <link>https://www.reddit.com/r/programming/comments/1mtg9rn/contentaddressable_storage_cas/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/vannam0511      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mtg9rn/contentaddressable_storage_cas/</guid>
      <pubDate>Mon, 18 Aug 2025 08:28:53 GMT</pubDate>
    </item>
    <item>
      <title>8个被低估的熊猫功能，可以节省您数小时的编码</title>
      <link>https://www.reddit.com/r/programming/comments/1mtg01n/8_underrated_pandas_functions_that_will_save_you/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  花了太长的时间编写复杂的代码来进行数据操纵，只是发现有内置的熊猫函数可以一行执行此操作。我希望我早些时候知道。这些不是您的典型 .head（）和 .describe（）  - 我们正在谈论的功能，这些功能实际上可以改变您与数据框架的工作方式。 媒介：   是否有人在那一刻发现了您想重写一半旧代码的熊猫功能？您希望早日发现什么功能？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/motor_cry_4380       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mtg01n/8_underrated_pandas_functions_that_will_save_you/</guid>
      <pubDate>Mon, 18 Aug 2025 08:11:37 GMT</pubDate>
    </item>
    <item>
      <title>Ubicloud：AWS的开源替代品</title>
      <link>https://www.reddit.com/r/programming/comments/1mtfihf/ubicloud_open_source_alternative_to_aws/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/top-associate-6276       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mtfihf/ubicloud_open_source_alternative_to_aws/</guid>
      <pubDate>Mon, 18 Aug 2025 07:40:45 GMT</pubDate>
    </item>
    <item>
      <title>NUMA是新网络：每个插座内存模型如何重塑微服务放置</title>
      <link>https://www.reddit.com/r/programming/comments/1mt8qjj/numa_is_the_new_network_how_persocket_memory/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  探讨非统一内存访问（numa）如何重塑微服务放置。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/mqian41     [link]   [commist]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mt8qjj/numa_is_the_new_network_how_persocket_memory/</guid>
      <pubDate>Mon, 18 Aug 2025 01:34:23 GMT</pubDate>
    </item>
    </channel>
</rss>