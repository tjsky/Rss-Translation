<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Mon, 25 Aug 2025 09:19:39 GMT</lastBuildDate>
    <item>
      <title>为什么Scrum是一个失败的实验</title>
      <link>https://www.reddit.com/r/programming/comments/1mzlnkc/why_scrum_is_a_failed_experiment/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   Scrum在1990年代引入，并在2000年代初引起了感觉。那时，它被销售为治疗瀑布的一切错误的方法：交付缓慢，严格的计划，不愉快的开发人员。公司拥抱它，创建了Scrum Master和产品所有者等新角色，并将其视为敏捷性的普遍配方。 二十年后，判决很明确：承诺并没有坚持。 Scrum并没有使团队更快或更适合自适应。在许多地方，它变成了相反的情况。  Scrum假设Sprint积压应保持固定。从理论上讲，这听起来可能是合乎逻辑的，但是实际上要求每隔几天就会发生变化。在本周开始时，似乎最重要的是，到了结束时，这已经是无关紧要的。结果是浪费的工作和沮丧的开发人员。 它也生活在尴尬的中间立场。它没有像瀑布那样完全计划，但也不是像看板那样真正的灵活性。您不会得到一个或另一个流动的清晰度。团队的两全其最差。 这些仪式旨在改善沟通，但很快就会变成拖累。日常站立，计划，回顾展……他们吃时间而没有产生很多价值。他们常常成为状态更新剧院。以及本来可以帮助的角色 -  crum大师，产品所有者 - 扣除官僚主义而不是删除官僚主义。 回顾是一个完美的例子。他们应该推动持续的进步，但实际上，他们重复相同的明显要点，产生没有人跟进的动作项目，并迫使人们进入人造格式，使人感到幼稚。为了“流程”，可以将现场解决的问题推迟。 另一个隐藏的成本是Scrum如何侵蚀专业知识。 “每个人都有声音”的文化听起来包含在内，但这通常意味着专家被淹没了。一遍又一遍地解释了同样的事情后，他们累了，停止战斗。错误的想法最终仅仅是因为它们在会议上浮出水面。随着时间的流逝，这会增加技术债务。  Scrum是作为敏捷性出售的，但实际上，它会减慢团队并奖励流程合规性而不是结果。它优化了用于运行Scrum本身的优化，而不是为了提供价值。  Scrum有其时刻，也许它帮助该行业摆脱了瀑布。但它的年龄还不错。在当今的环境中，它比生产工作软件更频繁地产生浪费，官僚主义和动机。是时候承认了：Scrum是一个失败的实验，我们应该继续前进。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/umage-plastic-5285      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mzlnkc/why_scrum_is_a_failed_experiment/</guid>
      <pubDate>Mon, 25 Aug 2025 09:17:45 GMT</pubDate>
    </item>
    <item>
      <title>这里有人喜欢轻巧的复古工具吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1mzkj3r/anyone_here_prefer_lightweight_retro_tools/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大多数复古工具感到肿了或付费。我们在 evolvedev ，没有设置，只需共享链接并运行。 好奇：您喜欢retros的简单工具，还是偏爱结构化的工具（Miro，Funretro等），我们  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/andrew_tit026      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mzkj3r/anyone_here_prefer_lightweight_retro_tools/</guid>
      <pubDate>Mon, 25 Aug 2025 08:03:21 GMT</pubDate>
    </item>
    <item>
      <title>AI已经从事技术工作。但是，AI住在印度？</title>
      <link>https://www.reddit.com/r/programming/comments/1mzfas3/ai_is_already_taking_tech_jobs_but_ai_lived_in/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  猜猜很多人听说过  这个     印度的技术工作在2025年的20％，ai sc_ sc_ sc_ sc_ sc_ sc_ sc_ sc_ sc_ prage 75 prep   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mzfas3/ai_is_already_taking_tech_jobs_but_ai_lived_in/</guid>
      <pubDate>Mon, 25 Aug 2025 02:55:08 GMT</pubDate>
    </item>
    <item>
      <title>马里奥64个废物的记忆太多</title>
      <link>https://www.reddit.com/r/programming/comments/1mz6obd/mario_64_wastes_so_much_memory/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/bluegoliath      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mz6obd/mario_64_wastes_so_much_memory/</guid>
      <pubDate>Sun, 24 Aug 2025 20:34:00 GMT</pubDate>
    </item>
    <item>
      <title>不要为嵌入式网络选择怪异的子网，请使用VRFS</title>
      <link>https://www.reddit.com/r/programming/comments/1mz4ftg/dont_pick_weird_subnets_for_embedded_networks_use/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/usult-site8626      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mz4ftg/dont_pick_weird_subnets_for_embedded_networks_use/</guid>
      <pubDate>Sun, 24 Aug 2025 19:08:08 GMT</pubDate>
    </item>
    <item>
      <title>在GO中制作游戏：3个月没有LLM与LLM的3天</title>
      <link>https://www.reddit.com/r/programming/comments/1mz4dbc/making_games_in_go_3_months_without_llms_vs_3/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/pinpepnet     [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mz4dbc/making_games_in_go_3_months_without_llms_vs_3/</guid>
      <pubDate>Sun, 24 Aug 2025 19:05:40 GMT</pubDate>
    </item>
    <item>
      <title>github工作流技巧和技巧</title>
      <link>https://www.reddit.com/r/programming/comments/1mz267y/github_workflows_tips_and_tricks/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/nfrankel       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mz267y/github_workflows_tips_and_tricks/</guid>
      <pubDate>Sun, 24 Aug 2025 17:43:13 GMT</pubDate>
    </item>
    <item>
      <title>5核I/O型号每个软件工程师都应该知道</title>
      <link>https://www.reddit.com/r/programming/comments/1myz42u/5_core_io_models_every_software_engineer_should/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我在试图了解Linux中的I/O的工作方式时写了此博客，以及如何在Mordern Software应用程序中使SYSCALL成为SYSCALL。 AI专家预测，大型语言模型（LLM）成为AI炒作中传统编程语言的包装。为什么在编程时我们仍然需要了解低级Linux Syscall，这很无聊。...我争辩说，不仅是因为您可以“做” Vibe编码的工作并不是您擅长的。了解从顶部到底部的整个TechStack就是让您擅长做的事情，而且实际上也很有趣。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/firm-ad208     [link]        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1myz42u/5_core_io_models_every_software_engineer_should/</guid>
      <pubDate>Sun, 24 Aug 2025 15:48:44 GMT</pubDate>
    </item>
    <item>
      <title>让我们做游戏吧！ 312：同伴返回</title>
      <link>https://www.reddit.com/r/programming/comments/1mywzrz/lets_make_a_game_312_companions_returning/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/apeloverage      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mywzrz/lets_make_a_game_312_companions_returning/</guid>
      <pubDate>Sun, 24 Aug 2025 14:26:36 GMT</pubDate>
    </item>
    <item>
      <title>跨Kafka和数据库的确切处理：使用Kafka Transactions + Idempotent Writes</title>
      <link>https://www.reddit.com/r/programming/comments/1mywhub/exactlyonce_processing_across_kafka_and_databases/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/zarinfam       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mywhub/exactlyonce_processing_across_kafka_and_databases/</guid>
      <pubDate>Sun, 24 Aug 2025 14:06:28 GMT</pubDate>
    </item>
    <item>
      <title>LLMS：简单的术语，简单地说明</title>
      <link>https://www.reddit.com/r/programming/comments/1myu7xr/llms_common_terms_explained_simply/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/u/gregorojstersek      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1myu7xr/llms_common_terms_explained_simply/</guid>
      <pubDate>Sun, 24 Aug 2025 12:25:17 GMT</pubDate>
    </item>
    <item>
      <title>如何开始，成长和货币化您的工程新闻通讯</title>
      <link>https://www.reddit.com/r/programming/comments/1mytq7y/how_to_start_grow_and_monetize_your_engineering/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/gregorojstersek      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mytq7y/how_to_start_grow_and_monetize_your_engineering/</guid>
      <pubDate>Sun, 24 Aug 2025 12:00:58 GMT</pubDate>
    </item>
    <item>
      <title>生锈int用更少的说明来生锈枚举</title>
      <link>https://www.reddit.com/r/programming/comments/1myt3rt/rust_ints_to_rust_enums_with_less_instructions/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/levelstar01       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1myt3rt/rust_ints_to_rust_enums_with_less_instructions/</guid>
      <pubDate>Sun, 24 Aug 2025 11:26:55 GMT</pubDate>
    </item>
    <item>
      <title>孩子们还好吗</title>
      <link>https://www.reddit.com/r/programming/comments/1myqkka/the_kids_are_alright/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/desmoulinmichel       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1myqkka/the_kids_are_alright/</guid>
      <pubDate>Sun, 24 Aug 2025 08:54:18 GMT</pubDate>
    </item>
    <item>
      <title>2025软件工程师的上下文工程指南</title>
      <link>https://www.reddit.com/r/programming/comments/1myqcvw/2025_guide_to_context_engineering_for_software/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/strategizeyourcareer      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1myqcvw/2025_guide_to_context_engineering_for_software/</guid>
      <pubDate>Sun, 24 Aug 2025 08:40:36 GMT</pubDate>
    </item>
    </channel>
</rss>