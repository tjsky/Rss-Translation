<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Wed, 20 Aug 2025 18:24:47 GMT</lastBuildDate>
    <item>
      <title>氛围编码实验失败</title>
      <link>https://www.reddit.com/r/programming/comments/1mvmen8/vibe_coding_experiment_failures/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/alsweigart       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mvmen8/vibe_coding_experiment_failures/</guid>
      <pubDate>Wed, 20 Aug 2025 18:05:55 GMT</pubDate>
    </item>
    <item>
      <title>为什么代理探路会变得凌乱：全球计划与本地回避坐标转换</title>
      <link>https://www.reddit.com/r/programming/comments/1mvmas2/why_agent_pathfinding_gets_messy_global_planning/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/scary_competition_11    [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mvmas2/why_agent_pathfinding_gets_messy_global_planning/</guid>
      <pubDate>Wed, 20 Aug 2025 18:02:02 GMT</pubDate>
    </item>
    <item>
      <title>文档：开发人员唯一讨厌的是没有写的东西是没有它</title>
      <link>https://www.reddit.com/r/programming/comments/1mvlwsp/documentation_the_only_thing_developers_hate_more/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  只是花了3个小时，试图集成在GitHub预览中看起来完美的库。读书我说的“简单集成！” with exactly one example that didn&#39;t match my use case. Ended up in their Discord begging for help like some kind of documentation refugee. Got me thinking - we&#39;re living in this weird timeline where:  We have AI that can write entire apps We have tools that auto-deploy to 47 different cloud platforms We have frameworks that热填充比我可以键入  快，但是不知何故，我们仍然陷入觉得自己是由外星人写的其他外星人写的文档。 我的理论？文档是编程的布鲁塞尔芽。 Everyone knows it&#39;s good for you, nobody wants to deal with it, and we&#39;ve all just accepted that it&#39;s going to taste terrible. But what if it didn&#39;t have to? Like, what if your docs could:  Actually stay updated when you change your code (revolutionary, I know) Show examples that work in the real world, not just &quot;hello世界“  让您在那里测试事物，而不是复制到终端 存在实际上是在编码的地方，而不是一些被遗忘的wiki   我一直在看到人们在说“只是在说“ changgpt for docs＆quots”这就像在说“只使用Google翻译作为诗歌”。从技术上讲，它有效，但完全错过了这一点。 也许2025年我们最终解决了这一年吗？或者，也许我只是厌倦了阅读文档，假设我已经知道他们要教我的一切。 您最糟糕的文档恐怖故事是什么？更重要的是，您是否找到了实际运行良好的东西？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/ok-ad7050      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mvlwsp/documentation_the_only_thing_developers_hate_more/</guid>
      <pubDate>Wed, 20 Aug 2025 17:48:27 GMT</pubDate>
    </item>
    <item>
      <title>建立AI驱动的电子商务聊天助理</title>
      <link>https://www.reddit.com/r/programming/comments/1mvjh1g/building_an_aipowered_ecommerce_chat_assistant/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/majestic_wallaby7374      [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mvjh1g/building_an_aipowered_ecommerce_chat_assistant/</guid>
      <pubDate>Wed, 20 Aug 2025 16:21:39 GMT</pubDate>
    </item>
    <item>
      <title>使用Liquibase Pro管理MongoDB数据库更改</title>
      <link>https://www.reddit.com/r/programming/comments/1mvhl0j/managing_mongodb_database_changes_using_liquibase/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/majestic_wallaby7374      [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mvhl0j/managing_mongodb_database_changes_using_liquibase/</guid>
      <pubDate>Wed, 20 Aug 2025 15:14:14 GMT</pubDate>
    </item>
    <item>
      <title>Python并没有死 - 尽管削减了资金，但编程语言能力仍在</title>
      <link>https://www.reddit.com/r/programming/comments/1mvgbla/python_isnt_dead_despite_funding_cuts_programming/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://www.techradar.com/pro/python-isnt-dead-dead-dead-funding-cuts-programming-language-powers-on”&gt; [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mvgbla/python_isnt_dead_despite_funding_cuts_programming/</guid>
      <pubDate>Wed, 20 Aug 2025 14:27:05 GMT</pubDate>
    </item>
    <item>
      <title>什么是系统设计的可伸缩性？</title>
      <link>https://www.reddit.com/r/programming/comments/1mvg8ed/what_is_scalability_in_system_design/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/Inspectionspirited99     [link]     32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mvg8ed/what_is_scalability_in_system_design/</guid>
      <pubDate>Wed, 20 Aug 2025 14:23:37 GMT</pubDate>
    </item>
    <item>
      <title>迈克尔·羽毛（Michael Feathers）如何帮助您的编程纪律</title>
      <link>https://www.reddit.com/r/programming/comments/1mvdi0n/how_unforgiving_tools_help_your_programming/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/goto-con       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mvdi0n/how_unforgiving_tools_help_your_programming/</guid>
      <pubDate>Wed, 20 Aug 2025 12:31:59 GMT</pubDate>
    </item>
    <item>
      <title>大多数公司仍然没有测量AI编码工具</title>
      <link>https://www.reddit.com/r/programming/comments/1mvd8vy/most_companies_still_arent_measuring_ai_coding/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   Github Copilot发起3年后，根据 Leaddev的2025 AI Impact Reports，82％的组织仍未衡量AI编码工具的影响。提交由＆＃32; /u/u/scarey102      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mvd8vy/most_companies_still_arent_measuring_ai_coding/</guid>
      <pubDate>Wed, 20 Aug 2025 12:20:54 GMT</pubDate>
    </item>
    <item>
      <title>从单个数据查询代理到MCP（模型上下文协议）AI分析师</title>
      <link>https://www.reddit.com/r/programming/comments/1mvbq5w/from_single_data_query_agent_to_mcp_model_context/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我们从一个简单的AI代理开始进行数据查询，但很快意识到我们需要更多：根本原因分析，异常检测和新功能。将所有这些代理扩展到所有这些都会使其过于复杂。 ，因此，我们转移到了MCP（模型上下文协议）。这使我们的代理变成了一个模块化AI分析师，该分析师可以实时安全地连接到外部服务。 这就是为什么MCP击败单个代理设置：   1。灵活性    单个代理：每个集成都是自定义的→难以维护的。              ：外部工具的标准协议→插入工具的标准协议，用最小的努力。     port port port pot per pot      &#39;playwright＆quot;：{commet of commate;：&#39;&#39;npx; quord; ]}     2。可维护性    单位代理：紧密耦合的集成意味着大型更新，如果一个工具更改。     mcp ：独立服务器→独立的服务器→模块化且易于交换/out/out。安全＆amp;治理    单一代理：权限可以是复杂且可控制的（代理与所需的许可太多。  &#39;：{premerions;数据代理执行数据分析师和数据科学家通常完成的任务： github-datu-core-datu-core  href =“ http://mcp.so”&gt;  mcp.so    - 一个可用的MCP服务器的大型目录。    mcplink.ai“&gt; mcplink.ai  mcplink.ai    mcpservers.org    - 社区维护的服务器和集成列表。    /u/shalinga123     [link]  href =“ https://www.reddit.com/r/programming/comments/1mvbq5w/from_single_data_query_query_agent_agent_to_mcp_model_context/”&gt; [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mvbq5w/from_single_data_query_agent_to_mcp_model_context/</guid>
      <pubDate>Wed, 20 Aug 2025 11:06:38 GMT</pubDate>
    </item>
    <item>
      <title>客观杂音的四个阶段</title>
      <link>https://www.reddit.com/r/programming/comments/1mva8n8/the_four_stages_of_objectivesmalltalk/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/nsredditshitposter     [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mva8n8/the_four_stages_of_objectivesmalltalk/</guid>
      <pubDate>Wed, 20 Aug 2025 09:41:34 GMT</pubDate>
    </item>
    <item>
      <title>DeepSeek v3.1基地突然推出：在编程中胜过Claude 4，互联网等待R2和V4</title>
      <link>https://www.reddit.com/r/programming/comments/1mv9w9g/deepseek_v31_base_suddenly_launched_outperforms/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/emotional-plum-5970        [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mv9w9g/deepseek_v31_base_suddenly_launched_outperforms/</guid>
      <pubDate>Wed, 20 Aug 2025 09:20:37 GMT</pubDate>
    </item>
    <item>
      <title>流程：LLM编排，及时测试和成本监控</title>
      <link>https://www.reddit.com/r/programming/comments/1mv9qbl/flowrun_llm_orchestration_prompt_testing_cost/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/stays_wing_9573        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mv9qbl/flowrun_llm_orchestration_prompt_testing_cost/</guid>
      <pubDate>Wed, 20 Aug 2025 09:10:29 GMT</pubDate>
    </item>
    <item>
      <title>Vibe编码和AI代理重新定义了Web应用程序在2025年的构建方式 -  [研究结果]</title>
      <link>https://www.reddit.com/r/programming/comments/1mv9beq/vibe_coding_and_ai_agents_redefine_how_web_apps/</link>
      <description><![CDATA[We just wrapped up our fourth annual “Starting Web App” research, and the shift we’re seeing this year feels like a real breaking point in software development. Some highlights:  AI app generators exploded — they jumped to 38% adoption in just one year. “Vibe coding” (tools like Lovable, Bolt, Base44, etc.) went from experimental to mainstream, letting devs “chat” an app into existence. AI agents are starting to handle not just coding, but requirements gathering, schema changes, and even version control. Traditional DEV +低代码仍在这里，但是余额倾向于AI-First的方法。  完整的写入，数据和图表在这里：👉 https://flatlogic.com/starting-com/starting-web-app-n-2025-2025-2025-research-results-results-results-results-results-results 玩具？ 开发人员信任代理人会处理关键的后端 +数据工作，还是现在可以保持前端玩具？ 在接下来的2  -  3年中，这将如何重塑SaaS启动？提交由＆＃32;  /u/flatlogic-generator   [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mv9beq/vibe_coding_and_ai_agents_redefine_how_web_apps/</guid>
      <pubDate>Wed, 20 Aug 2025 08:44:42 GMT</pubDate>
    </item>
    <item>
      <title>博客“设计零信任体系结构：20种开源工具可保护每一层</title>
      <link>https://www.reddit.com/r/programming/comments/1mv91p8/blog_on_designing_a_zero_trust_architecture_20/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/philiplgriffiths88     [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mv91p8/blog_on_designing_a_zero_trust_architecture_20/</guid>
      <pubDate>Wed, 20 Aug 2025 08:27:17 GMT</pubDate>
    </item>
    </channel>
</rss>