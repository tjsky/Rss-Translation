<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Tue, 16 Sep 2025 09:24:06 GMT</lastBuildDate>
    <item>
      <title>爆炸之前的超级袋子600万美元以预测部署爆炸半径</title>
      <link>https://www.reddit.com/r/programming/comments/1nicjxz/overmind_bags_6m_to_predict_deployment_blast/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/jameslaney   href =“ https://www.theregister.com/2025/09/16/overmind_interview/?utm_medium = share＆amp;utm_content = artical = artical＆utm_source; utm_source = ressce = restdit”&gt; [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nicjxz/overmind_bags_6m_to_predict_deployment_blast/</guid>
      <pubDate>Tue, 16 Sep 2025 09:15:51 GMT</pubDate>
    </item>
    <item>
      <title>你们认为我们需要花费多少时间来创建完整的自动自我发展的AI。是否可以？。</title>
      <link>https://www.reddit.com/r/programming/comments/1nicf92/what_do_u_guys_think_how_much_time_will_it_take/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/gainsed_fix8516        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nicf92/what_do_u_guys_think_how_much_time_will_it_take/</guid>
      <pubDate>Tue, 16 Sep 2025 09:07:14 GMT</pubDate>
    </item>
    <item>
      <title>射线与对齐边界框和平面教程的交点</title>
      <link>https://www.reddit.com/r/programming/comments/1nicedl/ray_intersection_with_aligned_bounding_box_and/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/peterbrobby      [commist]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nicedl/ray_intersection_with_aligned_bounding_box_and/</guid>
      <pubDate>Tue, 16 Sep 2025 09:05:45 GMT</pubDate>
    </item>
    <item>
      <title>为什么Protobuf的C ++ API如此笨拙？ Nlohmann/JSON风格的包装器会很有意义吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1nibv4y/why_is_protobufs_c_api_so_clunky_would_a/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   protobuf功能强大且广泛使用，但是与其C ++ API一起使用，感觉不必要地冗长：    -  add_xxx（）零星  将此与`nlohmann :: json&#39;进行比较，您可以在哪里可以做：   cfg [x＆quor x; x; x;] = 42;            cfg [; the idea of​​ writing a `protoc` plugin that generates wrappers so you can use JSON-like syntax, but under the hood it’s still Protobuf (binary, efficient, type-safe). Bonus: wrong types would fail at compile-time. Example: user[&quot;id&quot;] = 123; // compiles      user [iD＆quot; quot; quot; oops＆quot; //编译时错误  您认为这样的库会填补真正的空白，还是官方Protobuf API的详细性是开发人员接受的东西？ 好像听到您的想法吗？提交由＆＃32; /u/u/ushib-plastic-5285       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nibv4y/why_is_protobufs_c_api_so_clunky_would_a/</guid>
      <pubDate>Tue, 16 Sep 2025 08:31:31 GMT</pubDate>
    </item>
    <item>
      <title>如何在GO和Postgres中实现输出模式</title>
      <link>https://www.reddit.com/r/programming/comments/1nibn5b/how_to_implement_the_outbox_pattern_in_go_and/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/der_gopher   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nibn5b/how_to_implement_the_outbox_pattern_in_go_and/</guid>
      <pubDate>Tue, 16 Sep 2025 08:16:47 GMT</pubDate>
    </item>
    <item>
      <title>人类和人工智能的自适应编程系统</title>
      <link>https://www.reddit.com/r/programming/comments/1nibk9s/adaptive_programming_systems_for_humans_and_ai/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  就像建筑物一样，必须构建软件以发展。我的新文章探讨了人类和AI在编程方面合作以及我们如何减轻这些问题以创建更具弹性的生态系统时出现的挑战。   https://gfrison.com/2025/adaptive-programming-systems      &lt;！ -  sc_on--&gt; 32;提交由＆＃32; /u/gfrison       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nibk9s/adaptive_programming_systems_for_humans_and_ai/</guid>
      <pubDate>Tue, 16 Sep 2025 08:11:27 GMT</pubDate>
    </item>
    <item>
      <title>公共静态void main（string [] args）已死</title>
      <link>https://www.reddit.com/r/programming/comments/1ni7j1z/public_static_void_mainstring_args_is_dead/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/bowbahdoe       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ni7j1z/public_static_void_mainstring_args_is_dead/</guid>
      <pubDate>Tue, 16 Sep 2025 04:07:08 GMT</pubDate>
    </item>
    <item>
      <title>对初学者友好的DSA咬合：解释的变量和数据类型</title>
      <link>https://www.reddit.com/r/programming/comments/1ni6xgn/beginnerfriendly_dsa_bite_variables_data_types/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好！ 👋 我正在启动一个名为 dsa bites 的初学者友好的DSA新闻，我一次分解了编程概念和问题一次咬合。今天，我想在这里为所有初学者分享一个小小的“咬人”：变量＆amp;数据类型。 想想变量，例如厨房中的盒子。 🥫  每个盒子都可以存储：糖，大米或香料。 同样，在编程中，可变商店 data 。。一个小示例：   python：    ＃将值存储在变量名称中=＆quot; ＃text/string age = 25＃number/integer isstudent = true＃boolean print（name，age，isstudent）     //字符串让年龄= 25; //编号让Isstudent = true; // boolean console.log（名称，年龄，iSsTudent）;  💡 Mini Challenge for You: Try creating 3 variables:  name (your name) age (your age) isStudent (true/false if you’re currently studying)  然后打印它们以查看其工作方式！ 我很想听听您的解决方案或您用来记住变量和数据类型的任何提示/技巧。随时在下面分享您的代码或想法！ 😄  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/codealignr      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ni6xgn/beginnerfriendly_dsa_bite_variables_data_types/</guid>
      <pubDate>Tue, 16 Sep 2025 03:36:15 GMT</pubDate>
    </item>
    <item>
      <title>编码代理的实际工作方式：OpenCode内部</title>
      <link>https://www.reddit.com/r/programming/comments/1ni3fz1/how_coding_agents_actually_work_inside_opencode/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/usefful_geodist430       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ni3fz1/how_coding_agents_actually_work_inside_opencode/</guid>
      <pubDate>Tue, 16 Sep 2025 00:49:48 GMT</pubDate>
    </item>
    <item>
      <title>破坏亚马逊在消费者硬件上的路由效率：技术深入潜水</title>
      <link>https://www.reddit.com/r/programming/comments/1nhxlt3/breaking_amazons_routing_efficiency_on_consumer/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我构建了一个路线优化器，在个人笔记本电脑上运行大规模的最后一英里交货问题（MacBook Pro M1，16 GB RAM）。基准标准对亚马逊的官方数据集进行了基准标准，它一致地减少了总公里（〜18％），途径（〜12％），〜12％），〜 /〜12％），〜 /〜12％&lt; /〜12％），〜 /〜crip &lt; /〜12％out far /per。 这篇文章解释了以下方法：批处理，并发，缓存和约束意识聚类 - 使城市级路由在消费者硬件上可行。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/tigh_cow_5438     [link]      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nhxlt3/breaking_amazons_routing_efficiency_on_consumer/</guid>
      <pubDate>Mon, 15 Sep 2025 20:44:34 GMT</pubDate>
    </item>
    <item>
      <title>安全的C ++建议没有继续</title>
      <link>https://www.reddit.com/r/programming/comments/1nhwalt/safe_c_proposal_is_not_being_continued/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nhwalt/safe_c_proposal_is_not_being_continued/</guid>
      <pubDate>Mon, 15 Sep 2025 19:56:23 GMT</pubDate>
    </item>
    <item>
      <title>setsum  - 订单不可知，加法，减法校验和</title>
      <link>https://www.reddit.com/r/programming/comments/1nhwak1/setsum_order_agnostic_additive_subtractive/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nhwak1/setsum_order_agnostic_additive_subtractive/</guid>
      <pubDate>Mon, 15 Sep 2025 19:56:20 GMT</pubDate>
    </item>
    <item>
      <title>RIP PTHREAD_CANCEL</title>
      <link>https://www.reddit.com/r/programming/comments/1nhwagp/rip_pthread_cancel/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nhwagp/rip_pthread_cancel/</guid>
      <pubDate>Mon, 15 Sep 2025 19:56:14 GMT</pubDate>
    </item>
    <item>
      <title>GIT 2.51的亮点</title>
      <link>https://www.reddit.com/r/programming/comments/1nhw9wf/highlights_from_git_251/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/initcommit      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nhw9wf/highlights_from_git_251/</guid>
      <pubDate>Mon, 15 Sep 2025 19:55:38 GMT</pubDate>
    </item>
    <item>
      <title>从头开始编写操作系统内核</title>
      <link>https://www.reddit.com/r/programming/comments/1nhw8tv/writing_an_operating_system_kernel_from_scratch/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nhw8tv/writing_an_operating_system_kernel_from_scratch/</guid>
      <pubDate>Mon, 15 Sep 2025 19:54:32 GMT</pubDate>
    </item>
    </channel>
</rss>