<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Tue, 09 Sep 2025 18:20:34 GMT</lastBuildDate>
    <item>
      <title>在纯SQL中构建类似厄运的多人射击游戏</title>
      <link>https://www.reddit.com/r/programming/comments/1ncoxl8/building_a_doomlike_multiplayer_shooter_in_pure/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/avinassh      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncoxl8/building_a_doomlike_multiplayer_shooter_in_pure/</guid>
      <pubDate>Tue, 09 Sep 2025 17:17:39 GMT</pubDate>
    </item>
    <item>
      <title>世界是否需要另一个分布式队列？</title>
      <link>https://www.reddit.com/r/programming/comments/1ncnrfs/does_the_world_need_another_distributed_queue/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我最近在这里看到了一篇文章，正在谈论建立分布式队列。我们在Cloudkitchens建造了自己的建造，它基于内部建造的Sharder和CRDB。它还通过跟踪每个键的消耗，为在线阻塞带来整洁的解决方案，我们称之为钥匙事件队列或keq。认为这就像卡夫卡（Kafka）一样，几乎没有数量的分区。我们已经在生产中运行关键任务工作负载已有近五年的历史，因此进行了战斗证实。  它可以开发事件驱动的系统，这些系统需要一个真正的主动活动多区域拓扑，我可以看到它如何发展为更加可靠和更具成本效益。  我们在内部谈论了开源，但是由于它与我们的内部库相结合，它将需要一些工作才能完成。您认为外面的任何人都会受益/使用这样的系统？团队会喜欢您的反馈。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/alex_cloudkitchens      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncnrfs/does_the_world_need_another_distributed_queue/</guid>
      <pubDate>Tue, 09 Sep 2025 16:34:11 GMT</pubDate>
    </item>
    <item>
      <title>我构建了一个交互式绽放过滤器视觉模拟器，因此您可以更好地了解此数据结构</title>
      <link>https://www.reddit.com/r/programming/comments/1ncnlku/i_built_an_interactive_bloom_filter_visual/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我第一次阅读此概率数据结构我很难理解概率部分，因此最终我陷入了理论，但忘记了它。前几天，我决定在博客上写些什么，然后思考：＆quot，也许如果我使它更具视觉和互动性＆quot＆quot” 。  无论如何，希望您能理解Bloom过滤器更轻松地工作的方式。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/prox_sea     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncnlku/i_built_an_interactive_bloom_filter_visual/</guid>
      <pubDate>Tue, 09 Sep 2025 16:27:57 GMT</pubDate>
    </item>
    <item>
      <title>NPM安全失败的课程</title>
      <link>https://www.reddit.com/r/programming/comments/1ncnhmi/lessons_from_npms_security_failures/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/upeanut       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncnhmi/lessons_from_npms_security_failures/</guid>
      <pubDate>Tue, 09 Sep 2025 16:23:43 GMT</pubDate>
    </item>
    <item>
      <title>Kubernetes不够吗？</title>
      <link>https://www.reddit.com/r/programming/comments/1ncndp2/isnt_kubernetes_enough/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  许多开发人员问我：‘kubernetes还不够吗？’ 我已经做了研究，并把我的想法放在下面，并想在这里分享在这里为了每个人的利益，会喜欢您的想法，并且会喜欢您的想法！  这个5分钟的Visual Explion  href =“ https://youtu.be/hklwecgxohw”&gt; https://youtu.be/hklwecgxohw 展示我们为什么仍然需要API Gateways + Istio-使用有趣的机场类比。 href =“ https://faun.pub/how-api-gateways-and-istio-service-mesh-work-work-work-together-serving-serving-microservices-on-a-k8s-k8s-k8s-8dad951d22d2d0c”&gt; https://faun.pub/how-api-gateways-and-istio-service-mesh-work-work-together-for-servor-servors-servorn-microservices-on-a-k8s-a-k8s-k8s-8dad951d20cd0c     https://medium.com/faun/why-kubernetes-alone-isnt-enough-enough-case-for-api-gateways-and-gateways-and-service-meshes-2ee856ce53a4    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/mmk4mmk_simplifies       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncndp2/isnt_kubernetes_enough/</guid>
      <pubDate>Tue, 09 Sep 2025 16:19:43 GMT</pubDate>
    </item>
    <item>
      <title>让我们做游戏吧！ 324：交换和重新排列变量</title>
      <link>https://www.reddit.com/r/programming/comments/1ncmp2z/lets_make_a_game_324_swapping_and_rearranging/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/apeloverage      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncmp2z/lets_make_a_game_324_swapping_and_rearranging/</guid>
      <pubDate>Tue, 09 Sep 2025 15:54:15 GMT</pubDate>
    </item>
    <item>
      <title>数据管理的最后几十年的简短摘要•HannesMühleisen</title>
      <link>https://www.reddit.com/r/programming/comments/1ncmnj2/a_short_summary_of_the_last_decades_of_data/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/goto-con       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncmnj2/a_short_summary_of_the_last_decades_of_data/</guid>
      <pubDate>Tue, 09 Sep 2025 15:52:39 GMT</pubDate>
    </item>
    <item>
      <title>热烈欢迎ASN.1和der</title>
      <link>https://www.reddit.com/r/programming/comments/1nclsok/a_warm_welcome_to_asn1_and_der/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/u/u/u/perfect-praline3232      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nclsok/a_warm_welcome_to_asn1_and_der/</guid>
      <pubDate>Tue, 09 Sep 2025 15:20:13 GMT</pubDate>
    </item>
    <item>
      <title>工程高性能GO PDF微服务</title>
      <link>https://www.reddit.com/r/programming/comments/1ncl9ws/engineering_a_highperformance_go_pdf_microservice/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   i构建 gopdfsuit ，一种用于生成PDFS的开源Web服务，并希望分享使其变得异常快速有效的技术设计。我的目标是为传统的，资源丰富的PDF解决方案创建一个精益替代方案。 核心技术设计 该服务的核心是基于 go 1.23+和 gin framework    具有高性能和一致性的能力。与许多其他依赖基于磁盘处理的服务不同，GOPDFSUIT是高性能内存PDF Generator 。这种方法对其速度至关重要，因为它完全绕过了慢速磁盘I/O操作，从而导致超毫秒到低毫秒至低毫秒的响应时间。 用于实际的html-to-pdf和html-to-to-image-image-image to-image转换，服务利用了 wkhtmltmlltopdfffffffffffffffffffffffff  wkhtmltoimage 。这使其可以将网页和HTML片段准确地渲染到高质量的PDF和图像中。该项目展示了如何智能整合和管理强大的外部工具，例如 wkhtmltopdf 可以导致高度优化且性能的解决方案。 关键特征和实现详细信息        template demplate-demplate-drick-drive drive drive&gt; drive drive&gt;：gopdfs ：gopdfsiut  json-dref&gt;该设计将数据与演示文稿分开，使得通过仅向REST API发送JSON有效载荷来生成复杂的动态PDF。 It also includes support for AcroForm and XFDF data, enabling the filling out of interactive forms programmatically. Deployment: It&#39;s deployed as a single, statically compiled binary, making it extremely easy to get up and running in any environment, from a local machine to a containerized cloud deployment.  I&#39;m很高兴讨论实施细节，在高持续环境中精心策划 WKHTMLTOPDF 的挑战，或者在内存过程中的设计。        github   ：  https://github.com/chinmay-sawant/gopdfsuit/gopdfsuit          href =“ https://chinmay-sawant.github.io/gopdfsuit/”&gt;  https://chinmay-sawant.githant.github.io/gopdfsuit/                 &lt;！提交由＆＃32; /u/u/chinmay06      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncl9ws/engineering_a_highperformance_go_pdf_microservice/</guid>
      <pubDate>Tue, 09 Sep 2025 15:00:36 GMT</pubDate>
    </item>
    <item>
      <title>我的18个月旅程构建了SaaS应用程序</title>
      <link>https://www.reddit.com/r/programming/comments/1ncl45v/my_18month_journey_building_a_saas_app/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我花了18个月的时间构建RekoSearch，SaaS，可以使您可以在语义上搜索照片，视频，文档和音频。我最初计划只需要3-4个月的一个项目，但是在这里，我们是18个月零60,000个LOC ...  构建它比任何桌面项目都多。我学到了有关基础架构，可扩展性，网络开发，Kubernetes和AWS的信息。 href =“ https://github.com/obscurely/rekosearch-public”&gt; https://github.com/obscurely/rekosearch-public 提交由＆＃32;  /u/CrismarucAdrian   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncl45v/my_18month_journey_building_a_saas_app/</guid>
      <pubDate>Tue, 09 Sep 2025 14:54:20 GMT</pubDate>
    </item>
    <item>
      <title>用弹簧靴在爪哇建造REST API</title>
      <link>https://www.reddit.com/r/programming/comments/1ncl2q0/building_rest_apis_in_java_with_spring_boot/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/majestic_wallaby7374      [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncl2q0/building_rest_apis_in_java_with_spring_boot/</guid>
      <pubDate>Tue, 09 Sep 2025 14:52:46 GMT</pubDate>
    </item>
    <item>
      <title>作为Rails Dev，您必须知道的一件事是涡轮预取</title>
      <link>https://www.reddit.com/r/programming/comments/1nckcok/as_a_rails_dev_one_thing_you_must_know_is_turbo/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/mehdifarsi      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nckcok/as_a_rails_dev_one_thing_you_must_know_is_turbo/</guid>
      <pubDate>Tue, 09 Sep 2025 14:25:03 GMT</pubDate>
    </item>
    <item>
      <title>生锈类型系统的可点击视觉指南</title>
      <link>https://www.reddit.com/r/programming/comments/1ncjtrp/a_clickable_visual_guide_to_the_rust_type_system/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/mmaksimovic      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncjtrp/a_clickable_visual_guide_to_the_rust_type_system/</guid>
      <pubDate>Tue, 09 Sep 2025 14:04:27 GMT</pubDate>
    </item>
    <item>
      <title>Runbooks从存储库或代码评论中捕获上下文，将其与团队的AI提示知识相结合，并使每次使用更聪明。</title>
      <link>https://www.reddit.com/r/programming/comments/1ncjpw3/runbooks_capture_context_from_repositories_or/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/aviator_co      [commist]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncjpw3/runbooks_capture_context_from_repositories_or/</guid>
      <pubDate>Tue, 09 Sep 2025 14:00:23 GMT</pubDate>
    </item>
    <item>
      <title>大规模应用中的通用约束和映射类型</title>
      <link>https://www.reddit.com/r/programming/comments/1ncj2as/generic_constraints_and_mapped_types_in/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/primeentbid2476      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1ncj2as/generic_constraints_and_mapped_types_in/</guid>
      <pubDate>Tue, 09 Sep 2025 13:33:41 GMT</pubDate>
    </item>
    </channel>
</rss>