<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sat, 12 Jul 2025 03:58:01 GMT</lastBuildDate>
    <item>
      <title>将llms的像素 - 艺术风格的图像转换为真像素分辨率资产</title>
      <link>https://www.reddit.com/r/programming/comments/1lxqrbj/convert_pixelartstyle_images_from_llms_into_true/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我创建了一种算法，该算法将诸如GPT-4O（例如GPT-4O）的Pixel-Art风格输出变成可用的资产。  gpt-gpt-4O具有出色的图像生成器，可以将图像变成像素图像的样式。 However, the raw output is generally unusable as an asset due to  High noise High resolution Inconsistent grid spacing Random artifacts  Due to these issues, regular down-sampling techniques do not work, and the only options are to either use a down-sampling method that does not produce a result that is faithful to the original image,或者通过像素来手动重新创建艺术像素。 此外，这些问题使原始输出非常难以编辑和微调。我创建了一种算法，该算法后处理由GPT-4O生成的Pixel-Art-Art风格图像，并将真实分辨率图像作为可用资产输出。它还可以在屏幕截图中使用像素艺术的图像，并修复了被压缩损坏的艺术。 如果您要使用它并且没有获得结果，您希望随时接触！   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/ok-championship-5768        [commist]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lxqrbj/convert_pixelartstyle_images_from_llms_into_true/</guid>
      <pubDate>Sat, 12 Jul 2025 03:44:27 GMT</pubDate>
    </item>
    <item>
      <title>使用Java工程：Digest＃56</title>
      <link>https://www.reddit.com/r/programming/comments/1lxpwqo/engineering_with_java_digest_56/</link>
      <description><![CDATA[ Testing Java Applications With WireMock and Spring Boot API Rate Limits with Spring Boot and Redis Buckets Tracking Failed Attempts with Temporary Block Logic in Spring Boot Top 10 Java Gotchas That Still Catch Developers in 2025 Securing Spring AI MCP使用oauth2  的服务器如何改进Deep Java库（DJL）OSS   和更多   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/decuntional-ad2036      [commist]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lxpwqo/engineering_with_java_digest_56/</guid>
      <pubDate>Sat, 12 Jul 2025 02:58:26 GMT</pubDate>
    </item>
    <item>
      <title>为什么所有的ML型语言都这么难开始？</title>
      <link>https://www.reddit.com/r/programming/comments/1lxota6/why_are_all_mltype_languages_so_hard_to_get/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  请注意，我实际上并不是真正的“真实”程序员---我希望自己是，但是我拖延了多年＆amp;然后，底部从我听到的所有工作中掉下来了，因为我发现我确实确实做到了 享受编码，呵呵。因此，我可能会在几秒钟内能够在几秒钟内处理的事情遇到很多麻烦，而且（因此）这不是对语言（F＃，ocaml，haskell）或提到的工具的任何真正的批评...   ...相反，我只是在某种程度上曾经有过 em&gt; em&gt; em&gt;仅）这些“ ml家庭”感觉自己拥有最不受欢迎的语言困难的设置/配置/工具。 （嗯，f＃还不错---但似乎仅针对经验丰富的c＃ /.net开发人员，而不是新手。）&lt; /p&gt;  我有兴趣听到实际&lt; /em&gt;程序员的观点，关于我的看法是否正确＆amp; amp; amp;这些语言并不完全适合新手……或者我是否只是太愚蠢了，不值得Haskell，Ocaml，＆amp;公司（也很可能）。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/kveldred      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lxota6/why_are_all_mltype_languages_so_hard_to_get/</guid>
      <pubDate>Sat, 12 Jul 2025 02:00:38 GMT</pubDate>
    </item>
    <item>
      <title>编程语言功能是否可以兑现承诺？</title>
      <link>https://www.reddit.com/r/programming/comments/1lxjz8m/do_programming_language_features_deliver_on_their/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lxjz8m/do_programming_language_features_deliver_on_their/</guid>
      <pubDate>Fri, 11 Jul 2025 22:12:25 GMT</pubDate>
    </item>
    <item>
      <title>放置功能</title>
      <link>https://www.reddit.com/r/programming/comments/1lxjz70/placing_functions/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lxjz70/placing_functions/</guid>
      <pubDate>Fri, 11 Jul 2025 22:12:22 GMT</pubDate>
    </item>
    <item>
      <title>重新考虑我们的采用策略[ELM]</title>
      <link>https://www.reddit.com/r/programming/comments/1lxjxzw/rethinking_our_adoption_strategy_elm/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lxjxzw/rethinking_our_adoption_strategy_elm/</guid>
      <pubDate>Fri, 11 Jul 2025 22:10:54 GMT</pubDate>
    </item>
    <item>
      <title>数字过滤器简介</title>
      <link>https://www.reddit.com/r/programming/comments/1lxjxb0/introduction_to_digital_filters/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis     [link]&gt; [link]&gt; [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lxjxb0/introduction_to_digital_filters/</guid>
      <pubDate>Fri, 11 Jul 2025 22:10:06 GMT</pubDate>
    </item>
    <item>
      <title>为游戏程序员制作案例（海盗软件/编码耶稣后果）</title>
      <link>https://www.reddit.com/r/programming/comments/1lxi547/making_a_case_for_game_programmers_pirate/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在所有海盗软件/编码耶稣的东西之后，我以为我会权衡。我从未做过“响应”视频，我的第一个是对响应的回应。我觉得整个过程中的不良结果之一是，程序员和整个公众可能会认为游戏程序员和地球的浮渣，并且不知道他们在做什么。 我觉得我们在这方面应该有更多的同情心。我谈论游戏开发的创意方面以及它与制作智能手机应用程序的根本不同。我们不编写具有光滑边缘的软件，而且本身就是一种艺术形式。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/_michaeljared      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lxi547/making_a_case_for_game_programmers_pirate/</guid>
      <pubDate>Fri, 11 Jul 2025 20:55:28 GMT</pubDate>
    </item>
    <item>
      <title>研究发现，AI工具使经验丰富的程序员慢19％。但这不是最有趣的发现...</title>
      <link>https://www.reddit.com/r/programming/comments/1lxh8ip/study_finds_that_ai_tools_make_experienced/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  昨天发布了一项研究，表明使用AI编码使经验丰富的开发人员19％慢  开发人员平均估计AI使他们更快地估计了它们20％。这是感知的效果与实际结果之间的巨大差距。 从方法描述中，这看起来是关于该主题的最精心设计的研究之一。 要注意的事情：   *参与者是经验丰富的开发人员，具有10多年的经验，具有10多年的经验。并不是第一个结论AI可能没有正常宣传的积极作用的研究。  2024 Dora报告发现了类似的结果。 我们在此处写了一篇博客文章    &lt;！&lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/livid_sign9681     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lxh8ip/study_finds_that_ai_tools_make_experienced/</guid>
      <pubDate>Fri, 11 Jul 2025 20:18:25 GMT</pubDate>
    </item>
    <item>
      <title>一个（几乎）灾难性的OpenZFS虫子和使它成为的人（Rust也在这里）</title>
      <link>https://www.reddit.com/r/programming/comments/1lxg4d7/an_almost_catastrophic_openzfs_bug_and_the_humans/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/ketralnis     [link]    ＆＃32;   [注释]    ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lxg4d7/an_almost_catastrophic_openzfs_bug_and_the_humans/</guid>
      <pubDate>Fri, 11 Jul 2025 19:33:24 GMT</pubDate>
    </item>
    <item>
      <title>稀疏的哈希表的效率</title>
      <link>https://www.reddit.com/r/programming/comments/1lxg436/efficiency_of_a_sparse_hash_table/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/ketralnis      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lxg436/efficiency_of_a_sparse_hash_table/</guid>
      <pubDate>Fri, 11 Jul 2025 19:33:04 GMT</pubDate>
    </item>
    <item>
      <title>HTTP状态代码上的一系列帖子</title>
      <link>https://www.reddit.com/r/programming/comments/1lxg3nr/series_of_posts_on_http_status_codes/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lxg3nr/series_of_posts_on_http_status_codes/</guid>
      <pubDate>Fri, 11 Jul 2025 19:32:37 GMT</pubDate>
    </item>
    <item>
      <title>EBPF：与容器运行时连接</title>
      <link>https://www.reddit.com/r/programming/comments/1lxg2zn/ebpf_connecting_with_container_runtimes/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/ketralnis     [link]    32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lxg2zn/ebpf_connecting_with_container_runtimes/</guid>
      <pubDate>Fri, 11 Jul 2025 19:31:51 GMT</pubDate>
    </item>
    <item>
      <title>关于散用：跟进“人们继续发明众多的树木”</title>
      <link>https://www.reddit.com/r/programming/comments/1lxg2px/regarding_prollyferation_followup_to_people_keep/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/ketralnis       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lxg2px/regarding_prollyferation_followup_to_people_keep/</guid>
      <pubDate>Fri, 11 Jul 2025 19:31:33 GMT</pubDate>
    </item>
    <item>
      <title>Google Research：关系数据的图基础模型</title>
      <link>https://www.reddit.com/r/programming/comments/1lxg2l4/google_research_graph_foundation_models_for/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lxg2l4/google_research_graph_foundation_models_for/</guid>
      <pubDate>Fri, 11 Jul 2025 19:31:24 GMT</pubDate>
    </item>
    </channel>
</rss>