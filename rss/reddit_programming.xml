<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Thu, 24 Jul 2025 06:26:59 GMT</lastBuildDate>
    <item>
      <title>我在扩展程序中添加了LeetCode Premium功能（空闲时间/空间复杂性），该功能将您的解决方案同步到GitHub。</title>
      <link>https://www.reddit.com/r/programming/comments/1m7wgcw/i_added_a_leetcode_premium_feature_free_timespace/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿，大家href =“ https://chromewebstore.google.com/detail/leetpush/fppdnbfkhpmppmppmppmppmppmppmppmmmchnhpnmickbin”&gt;   leetpush     自动向github save save save save save save save save save save save save github。新更新增加了空闲时间＆amp;空间复杂性分析仪（例如LeetCode Premium）和娱乐的编码模因。  像你们中的许多人一样，我一直在 leetcode 为面试做准备。我真的很厌倦了两件事：手动复制我的代码以创建 github portfolio ，并且不知道我的代码效率而不支付高级费用。 ，所以我构建了一个修复它的工具。它称为 leetpush 。  它做什么？        github sync：解决问题吗？ BAM。它立即致力于您的GitHub仓库。这是您最简单的 leetcode github集成您会发现。   [新的]自由复杂性分析仪：这是一个很大的。解决问题后，扩展名向您显示时间和空间复杂性（大o符号）。这是一个改变游戏规定的游戏规则，通常您必须支付的费用。这是用于性能分析的完美 leetcode premium替代。   [新]编码模因：成功提交后，它显示了相关的模因。因为磨碎时为什么不玩得开心？  我致力于保留此工具100％免费和开源。我的目标是帮助学生和开发人员保存其Leetcode Solutions 并更有效地学习。 由于这是一个激情的项目，所以我没有提起薪水。相反，如果您发现该工具对于构建编码组合或免费复杂性分析的真正有用，我已经设置了“给我买咖啡”页面。 任何支持都令人难以置信，并将帮助我支付服务器成本并继续开发新功能。  链接：       在Chrome上安装：  leetpush在Chrome Web Store上详细信息：  github存储库   我很想听听您的反馈。你怎么认为？您想在下一个 LeetCode Automation 更新中看到的任何功能？ 感谢您检查它！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/best-ad7408      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m7wgcw/i_added_a_leetcode_premium_feature_free_timespace/</guid>
      <pubDate>Thu, 24 Jul 2025 05:58:52 GMT</pubDate>
    </item>
    <item>
      <title>“平台工程师启动器套件”  - 您是Sous -Chef，而不是厨师</title>
      <link>https://www.reddit.com/r/programming/comments/1m7w0gb/platform_engineer_starter_kit_youre_the_souschef/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好！ 👋 从第1部分开始（“为什么平台工程很重要”  - 厨房混乱的故事），这是第2部分：实际上是什么平台工程师（扰流板：无工具！）。 🎥 I use the kitchen + sous-chef metaphor to explain the mindset, roles, and key workflows platform engineers build: Golden paths (opinionated pipelines) Self-service portals for dev teams Guardrails, not gates (safety without friction) Treating the platform as a product (with user feedback) Starting小 - 缩放之前的飞行员 我很想听听这个社区的消息：这会引起您的日常工作吗？您要添加或调整的任何子系统或实践？ 🎞️在这里观看第2部分： https：//youtu.be/xeru.be/xer5k7cvw04  href=&quot;https://medium.com/@mmk4mmk.mrani/the-platform-engineer-starter-kit-22a0675c0b7b&quot;&gt;https://medium.com/@mmk4mmk.mrani/the-platform-engineer-starter-kit-22a0675c0b7b  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/mmk4mmk_simplifies        [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m7w0gb/platform_engineer_starter_kit_youre_the_souschef/</guid>
      <pubDate>Thu, 24 Jul 2025 05:33:02 GMT</pubDate>
    </item>
    <item>
      <title>7月3日 - 我们如何丢失矢量数据库（并恢复）</title>
      <link>https://www.reddit.com/r/programming/comments/1m7v43l/july_3rd_how_we_lost_our_vector_database_and/</link>
      <description><![CDATA[在提交由＆＃32; /u/u/u/siddharth-jain99        [注释]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m7v43l/july_3rd_how_we_lost_our_vector_database_and/</guid>
      <pubDate>Thu, 24 Jul 2025 04:41:43 GMT</pubDate>
    </item>
    <item>
      <title>老式Macintosh编程图书馆</title>
      <link>https://www.reddit.com/r/programming/comments/1m7om0r/vintage_macintosh_programming_book_library/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      link&gt; link&gt; link&gt;      32   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m7om0r/vintage_macintosh_programming_book_library/</guid>
      <pubDate>Wed, 23 Jul 2025 23:23:59 GMT</pubDate>
    </item>
    <item>
      <title>我如何使团队富有成效</title>
      <link>https://www.reddit.com/r/programming/comments/1m7ob3u/how_id_make_teams_productive/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/bookofcooks     lincl   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m7ob3u/how_id_make_teams_productive/</guid>
      <pubDate>Wed, 23 Jul 2025 23:10:31 GMT</pubDate>
    </item>
    <item>
      <title>成为每个人都想与之合作的工程领导者</title>
      <link>https://www.reddit.com/r/programming/comments/1m7nvxd/become_an_engineering_leader_everyone_wants_to/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/u/gregorojstersek      ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m7nvxd/become_an_engineering_leader_everyone_wants_to/</guid>
      <pubDate>Wed, 23 Jul 2025 22:52:27 GMT</pubDate>
    </item>
    <item>
      <title>使用OpenTelemetry收集器建造遥测管道</title>
      <link>https://www.reddit.com/r/programming/comments/1m7mgmu/building_telemetry_pipelines_with_the/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/thin nommous       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m7mgmu/building_telemetry_pipelines_with_the/</guid>
      <pubDate>Wed, 23 Jul 2025 21:54:10 GMT</pubDate>
    </item>
    <item>
      <title>让我们在C＃中调试异步/等待</title>
      <link>https://www.reddit.com/r/programming/comments/1m7m2yo/lets_debug_asyncawait_in_c/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我已经看到了许多博客文章，这些博客文章在c＃中完全可以使用异步/等待在c＃中，但是这是一个有趣的观点：而不是只需浏览编译的代码，而是用作者使用调试器来逐步介绍.NET，用于构建用于c＃                          。 可能的。但是，将断点放在异步线上，任务本身是一个很好的技巧。 整体上的视频不错！   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/akeration-level4225     [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m7m2yo/lets_debug_asyncawait_in_c/</guid>
      <pubDate>Wed, 23 Jul 2025 21:38:59 GMT</pubDate>
    </item>
    <item>
      <title>实施茴香和LUA的动态范围</title>
      <link>https://www.reddit.com/r/programming/comments/1m7kvy8/implementing_dynamic_scope_for_fennel_and_lua/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/ketralnis     [link]    32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m7kvy8/implementing_dynamic_scope_for_fennel_and_lua/</guid>
      <pubDate>Wed, 23 Jul 2025 20:52:25 GMT</pubDate>
    </item>
    <item>
      <title>测试Will Wilson于1985年编写的单个节点，单线螺纹，分布式系统</title>
      <link>https://www.reddit.com/r/programming/comments/1m7k4dk/testing_a_singlenode_single_threaded_distributed/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m7k4dk/testing_a_singlenode_single_threaded_distributed/</guid>
      <pubDate>Wed, 23 Jul 2025 20:22:54 GMT</pubDate>
    </item>
    <item>
      <title>使用AtomicDict的自由线程python的聚合和减少</title>
      <link>https://www.reddit.com/r/programming/comments/1m7k4cg/aggregation_and_reduction_in_freethreaded_python/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m7k4cg/aggregation_and_reduction_in_freethreaded_python/</guid>
      <pubDate>Wed, 23 Jul 2025 20:22:52 GMT</pubDate>
    </item>
    <item>
      <title>使用非传统的记忆以娱乐和利润</title>
      <link>https://www.reddit.com/r/programming/comments/1m7k2s6/using_uninitialized_memory_for_fun_and_profit/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m7k2s6/using_uninitialized_memory_for_fun_and_profit/</guid>
      <pubDate>Wed, 23 Jul 2025 20:21:13 GMT</pubDate>
    </item>
    <item>
      <title>让我们做游戏吧！ 293：服从命令</title>
      <link>https://www.reddit.com/r/programming/comments/1m7iq23/lets_make_a_game_293_obeying_orders/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/apeloverage      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m7iq23/lets_make_a_game_293_obeying_orders/</guid>
      <pubDate>Wed, 23 Jul 2025 19:30:06 GMT</pubDate>
    </item>
    <item>
      <title>开源黑客马拉松，$ 5K+奖品池</title>
      <link>https://www.reddit.com/r/programming/comments/1m7fzrp/open_source_hackathon_with_5k_prize_pool/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/glitteringpenalty210        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m7fzrp/open_source_hackathon_with_5k_prize_pool/</guid>
      <pubDate>Wed, 23 Jul 2025 17:47:22 GMT</pubDate>
    </item>
    <item>
      <title>基于躯干的开发的好处</title>
      <link>https://www.reddit.com/r/programming/comments/1m7dbdf/the_benefits_of_trunkbased_development/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/ketralnis      ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m7dbdf/the_benefits_of_trunkbased_development/</guid>
      <pubDate>Wed, 23 Jul 2025 16:06:11 GMT</pubDate>
    </item>
    </channel>
</rss>