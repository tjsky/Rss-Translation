<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sun, 10 Aug 2025 12:33:15 GMT</lastBuildDate>
    <item>
      <title>软件现代化项目难题：三思而后行 - 焦点是说没有</title>
      <link>https://www.reddit.com/r/programming/comments/1mmh9ze/software_modernization_projects_dilemma_think/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://medium.com/@hobokendays/software-modernization-projects-dilemma-part-part-2-7f6002c4b6f1”&gt; [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmh9ze/software_modernization_projects_dilemma_think/</guid>
      <pubDate>Sun, 10 Aug 2025 12:27:40 GMT</pubDate>
    </item>
    <item>
      <title>免费地球电视 - 全球免费电视频道</title>
      <link>https://www.reddit.com/r/programming/comments/1mmgnvb/free_globe_tv_worldwide_free_tv_channels/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿，大家，我一直在我的空闲时间从事一个个人项目，一个可以让您浏览并观看来自不同国家/地区的免费，公开可用的直播电视频道。 查看有关网站和流源的更多信息，以获取有关该网站和流源 https://globetv.app.app/about/     &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/usspectormelodic3117       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmgnvb/free_globe_tv_worldwide_free_tv_channels/</guid>
      <pubDate>Sun, 10 Aug 2025 11:56:50 GMT</pubDate>
    </item>
    <item>
      <title>功能颜色代表不同的执行上下文</title>
      <link>https://www.reddit.com/r/programming/comments/1mmfakw/function_colors_represent_different_execution/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/shadowys     ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmfakw/function_colors_represent_different_execution/</guid>
      <pubDate>Sun, 10 Aug 2025 10:38:57 GMT</pubDate>
    </item>
    <item>
      <title>☝️撰写像高级工程师一样的验尸</title>
      <link>https://www.reddit.com/r/programming/comments/1mmb7br/write_a_postmortem_like_a_senior_engineer/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/strategizeyourcareer   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mmb7br/write_a_postmortem_like_a_senior_engineer/</guid>
      <pubDate>Sun, 10 Aug 2025 06:17:12 GMT</pubDate>
    </item>
    <item>
      <title>[P]我通过编码含义而不是数据完成了5000：1的压缩</title>
      <link>https://www.reddit.com/r/programming/comments/1mm6t2s/p_i_accomplished_50001_compression_by_encoding/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我找到了一种压缩含义（不是数据）的方法，即AI系统可以以不可能的比率进行解压缩。 传统压缩：10：1最大值（Shannon&#39;s Entropoy ottopy Limit）（Shannon&#39;s Entropoy limit）语义压缩：5000：1 per（17,500：1 p&gt;） href =“ https://docs.google.com/document/d/1xcbmxiu1rrsrsrsrsrsrsr0itw-ju85b_lyxkvk4ju6r0aekovti8/edit?usp = drive_link”将其参与完整的实现，因为他们理解含义，而不仅仅是数据模式。 乐于回答问题或在评论中提供更多示例。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/barphite       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mm6t2s/p_i_accomplished_50001_compression_by_encoding/</guid>
      <pubDate>Sun, 10 Aug 2025 02:14:38 GMT</pubDate>
    </item>
    <item>
      <title>Java 25 RC1现在可用</title>
      <link>https://www.reddit.com/r/programming/comments/1mm4hid/java_25_rc1_builds_now_available/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/bluegoliath      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mm4hid/java_25_rc1_builds_now_available/</guid>
      <pubDate>Sun, 10 Aug 2025 00:18:22 GMT</pubDate>
    </item>
    <item>
      <title>最小Python Secp256K1 + ECDSA实施</title>
      <link>https://www.reddit.com/r/programming/comments/1mm4bj4/minimal_python_secp256k1_ecdsa_implementation/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  写下了SECP256K1椭圆形曲线 + ECDSA签名/验证的微小的Python实施。 包括：   -secp256k1 curve Math验证  repo： https://github.com/0xmouiz/0xmouiz/python-secp256k1 提交由＆＃32; /u/u/mou3iz_edd      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mm4bj4/minimal_python_secp256k1_ecdsa_implementation/</guid>
      <pubDate>Sun, 10 Aug 2025 00:10:24 GMT</pubDate>
    </item>
    <item>
      <title>从零到生产：一个免费的平台来掌握真正的框架挑战</title>
      <link>https://www.reddit.com/r/programming/comments/1mm3p0s/from_zero_to_production_a_free_platform_for/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/safe-ball4818       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mm3p0s/from_zero_to_production_a_free_platform_for/</guid>
      <pubDate>Sat, 09 Aug 2025 23:39:58 GMT</pubDate>
    </item>
    <item>
      <title>MCP vs SDK：LLM驱动的可扩展性的两条途径</title>
      <link>https://www.reddit.com/r/programming/comments/1mlwrlc/mcp_vs_sdk_two_paths_to_llmpowered_extensibility/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在早期，“软件饮食世界”意味着真正的力量归功于可以通过编写自己的程序或脚本编写他们使用的程序来弯腰工具的人。现在，有了大型语言模型，问题不仅是您的应用程序开箱即用了什么，而且您允许AI工具可以处理的内容。 在这篇文章中，我研究了两个清晰的模式：      llm可以直接调用您的应用程序的函数  两者都具有优势，权衡和在大多数严重产品中的位置。钥匙是决定绘制线路的位置 - 并确保打开的门与用户（及其AIS）实际工作的方式匹配。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/wifeeyedfascination      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mlwrlc/mcp_vs_sdk_two_paths_to_llmpowered_extensibility/</guid>
      <pubDate>Sat, 09 Aug 2025 18:37:46 GMT</pubDate>
    </item>
    <item>
      <title>前体宣言：为什么上下文体系结构在AI开发中迅速工程</title>
      <link>https://www.reddit.com/r/programming/comments/1mlvpgb/the_precursor_manifesto_why_context_architecture/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大多数AI编码项目都遵循相同的模式：有希望的开始，随着复杂性的增长而完全崩溃。 作为主要软件工程师，我已经意识到问题不是AI，不是AI，它是我们在AI助手的情况下放弃的基本软件原理。 “构建我一个todo应用程序”   问题：将AI视为魔术而不是应用系统的开发实践。   解决方案：上下文架构，结构化的JSON文档，可为AI提供全面的，可读的上下文（例如，我们将shectrure for Datientabase contrucy contrution for Datientabase and Pacture cranders and Pertabise and Percute and Percute and Percantife and Pestrie for Dactabase and Pestabise&gt;   ）不是聊天历史。该方法将可靠的工程原理应用于AI开发：结构化计划，版本控制的上下文文档和扩展的系统过程。   核心洞察力： 80％通过上下文体系结构进行计划，通过AI编码执行20％。好奇哪种方法在保持较大的AI辅助项目中保持一致性有用。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/cgvas     [link]        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mlvpgb/the_precursor_manifesto_why_context_architecture/</guid>
      <pubDate>Sat, 09 Aug 2025 17:53:48 GMT</pubDate>
    </item>
    <item>
      <title>让我们做游戏吧！ 300：阻止同伴</title>
      <link>https://www.reddit.com/r/programming/comments/1mltg0v/lets_make_a_game_300_blocking_companions/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/apeloverage      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mltg0v/lets_make_a_game_300_blocking_companions/</guid>
      <pubDate>Sat, 09 Aug 2025 16:20:27 GMT</pubDate>
    </item>
    <item>
      <title>Novaxis：更聪明的BF ***</title>
      <link>https://www.reddit.com/r/programming/comments/1mlr604/novaxis_a_smarter_bf/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   novaxis。 有史以来最愚蠢的eslang，但至关现代。  novaxis是我的个人项目，我的个人项目在Python工作了2-3周。一条以下300行Python解释了基于Brainf ***启发的范式胶带的Esolang，就像BF一样，基于磁带，运行极轻，但并没有将其解释为Python（我知道疯狂），并具有扩展的语法，并且可以接受。解释器的速度和手柄能力将其用法稍微扩展到Brainf ***  如果有人想了解更多的方向  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/no_garbage_3120       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mlr604/novaxis_a_smarter_bf/</guid>
      <pubDate>Sat, 09 Aug 2025 14:45:34 GMT</pubDate>
    </item>
    <item>
      <title>第59天：如何从JavaScript中的数组中删除重复对象？</title>
      <link>https://www.reddit.com/r/programming/comments/1mlqvfq/day_59_how_do_you_remove_duplicate_objects_from/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/myssiriouseye8494     [link]      &lt;a href =“ https://www.reddit.com/r/programming/comments/1mlqvfq/day_59_how_how_do_do_you_remove_remove_duplicate_object_objects_from/”]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mlqvfq/day_59_how_do_you_remove_duplicate_objects_from/</guid>
      <pubDate>Sat, 09 Aug 2025 14:32:40 GMT</pubDate>
    </item>
    <item>
      <title>第13天：RXJS中的多播 - 分享，共享和发布解释</title>
      <link>https://www.reddit.com/r/programming/comments/1mlqq1z/day_13_multicasting_in_rxjs_share_sharereplay_and/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/myssiriouseye8494     [link]       &lt;a href =“ https://www.reddit.com/r/programming/comments/1mlqq1z/day_13_13_multicasting_in_rxjs_share_share_sharee_shareereplay_and/”]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mlqq1z/day_13_multicasting_in_rxjs_share_sharereplay_and/</guid>
      <pubDate>Sat, 09 Aug 2025 14:25:57 GMT</pubDate>
    </item>
    <item>
      <title>WRKFLW v0.6.0</title>
      <link>https://www.reddit.com/r/programming/comments/1mlqoxw/wrkflw_v060/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好！ 兴奋地宣布wrkflw v0.6.0的发布！ 🎉 对于那些不熟悉的人，wrkflw是一种命令行工具，旨在帮助您在本地工作验证，执行和触发github操作。  v0.6.0中的新功能是什么？允许！  改进的调试：更好的容器保存和失败工作流的检查功能。   &lt;代码&gt;＃＃＃安装并尝试一下！货物安装wrkflw＃与podman wrkflw run -runtime podman .github/workflows/ci.yml＃或使用tui wrkflw tui - -runtime podman    在 https://github.com/bahdotsh/wrkflw   我很想听听您的反馈！如果您遇到任何问题或对将来的改进提出建议，请在Github上打开一个问题。总是欢迎贡献！ 感谢您的支持！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/new-blacksmith8524       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1mlqoxw/wrkflw_v060/</guid>
      <pubDate>Sat, 09 Aug 2025 14:24:38 GMT</pubDate>
    </item>
    </channel>
</rss>