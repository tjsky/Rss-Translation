<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Sun, 20 Jul 2025 09:17:09 GMT</lastBuildDate>
    <item>
      <title>PostgreSQL CTE和窗口功能：高级查询技术🧩</title>
      <link>https://www.reddit.com/r/programming/comments/1m4jprb/postgresql_ctes_window_functions_advanced_query/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;       &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/questary_depth_2491       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4jprb/postgresql_ctes_window_functions_advanced_query/</guid>
      <pubDate>Sun, 20 Jul 2025 08:21:06 GMT</pubDate>
    </item>
    <item>
      <title>为什么要F＃？</title>
      <link>https://www.reddit.com/r/programming/comments/1m4iy60/why_f/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/Active-Fuel-49   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4iy60/why_f/</guid>
      <pubDate>Sun, 20 Jul 2025 07:30:37 GMT</pubDate>
    </item>
    <item>
      <title>GPU分析和优化简介</title>
      <link>https://www.reddit.com/r/programming/comments/1m4hl0p/an_introduction_to_gpu_profiling_and_optimization/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/daniel_kleinstein   [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4hl0p/an_introduction_to_gpu_profiling_and_optimization/</guid>
      <pubDate>Sun, 20 Jul 2025 06:04:16 GMT</pubDate>
    </item>
    <item>
      <title>Xenity引擎 -  PSP，PlayStation 3，PS Vita和Modern Platforms的开源游戏引擎</title>
      <link>https://www.reddit.com/r/programming/comments/1m498bc/xenity_engine_opensource_game_engine_for_psp/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/r_retrohacking_mod2        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m498bc/xenity_engine_opensource_game_engine_for_psp/</guid>
      <pubDate>Sat, 19 Jul 2025 22:43:48 GMT</pubDate>
    </item>
    <item>
      <title>可测试Python代码的简易模式</title>
      <link>https://www.reddit.com/r/programming/comments/1m4740o/easy_patterns_for_testable_python_code/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  &#39;补丁是失败的迹象。 -Michael Python Library的创建者Michael Foord  “模拟夫妇您的测试与实施详细信息，并干扰了重构。” -Martin Fowler  本文分享了4个用于编写可测试代码的简单模式，因此您不必使用补丁程序和复杂模拟来尝试测试其他不可测试的代码。 （我删除了上一篇文章，因为文本有点误导）  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/gaeioran      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m4740o/easy_patterns_for_testable_python_code/</guid>
      <pubDate>Sat, 19 Jul 2025 21:08:41 GMT</pubDate>
    </item>
    <item>
      <title>为什么我在2025年与AI代理商押注（尽管建造了）</title>
      <link>https://www.reddit.com/r/programming/comments/1m46lfb/why_im_betting_against_ai_agents_in_2025_despite/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ukanwat      &lt;a href =“ https://www.reddit.com/r/programming/comments/1m46lfb/1m46lfb/why_im_betting_against_ai_ai_aigents_in_iin_2025_depte/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m46lfb/why_im_betting_against_ai_agents_in_2025_despite/</guid>
      <pubDate>Sat, 19 Jul 2025 20:45:56 GMT</pubDate>
    </item>
    <item>
      <title>英特尔宣布，在开源十年后，它将关闭Clear Linux</title>
      <link>https://www.reddit.com/r/programming/comments/1m46fyd/intel_announces_its_shutting_down_clear_linux/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   此开源Linux发行版在X86_64硬件上提供了开箱即用的性能。 根据公告，它会立即有效，即没有更多的安全补丁等。因此，如果您依靠它，请依靠它，请务必依靠并寻找其他选择。   &#39;经过多年的创新和社区合作，我们将最终支持Clear Linux OS。立即有效，英特尔将不再为Clear Linux OS提供安全补丁，更新或维护，并且Clear Linux OS GITHUB存储库将在仅阅读模式下存档。因此，如果您目前使用Clear Linux OS，我们强烈建议您尽快计划迁移到另一个积极维护的Linux分发，以确保持续的安全性和稳定性。＆quort”    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/horovits       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m46fyd/intel_announces_its_shutting_down_clear_linux/</guid>
      <pubDate>Sat, 19 Jul 2025 20:39:14 GMT</pubDate>
    </item>
    <item>
      <title>使用VFS覆盖隐藏文件</title>
      <link>https://www.reddit.com/r/programming/comments/1m42laq/hide_files_using_vfs_overlay/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  好吧，我正在阅读有关“了解Linux内核”中的文件系统，并遇到了一个非常有趣的事实。如果我将文件系统覆盖在Linux中的现有目录上，则该目录的现有内容已隐藏，直到文件系统被卸载为止。我认为这非常酷，所以考虑了分享。  周末快乐，家伙🥂  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;  /u/pirate_husky   [link] ＆＃32;   [commist]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m42laq/hide_files_using_vfs_overlay/</guid>
      <pubDate>Sat, 19 Jul 2025 17:57:36 GMT</pubDate>
    </item>
    <item>
      <title>大师sql智能的方式 - 在您身边的AI</title>
      <link>https://www.reddit.com/r/programming/comments/1m404c5/master_sql_the_smart_way_with_ai_by_your_side/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://www.firebird-technologies.com/p/master-sql-the-smart-way-with-ai-”&gt; [link]  ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m404c5/master_sql_the_smart_way_with_ai_by_your_side/</guid>
      <pubDate>Sat, 19 Jul 2025 16:15:24 GMT</pubDate>
    </item>
    <item>
      <title>了解GO中的抽象工厂模式：实用指南</title>
      <link>https://www.reddit.com/r/programming/comments/1m3ye5f/understanding_the_abstract_factory_pattern_in_go/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  抽象工厂最终为我点击。这不仅是“设计模式绒毛”，而且当您需要交换整个相关组件（例如Windows vs Mac UI，AWS vs Azure SDK等）时，它非常方便。一个工厂交换，您的整个应用程序保持一致。没有if-else混乱。没有类型的泄漏。 当您的应用开始增长时，有助于保持一切清洁。我希望我早日使用它。 在这里检查一下： https://medium.com/design-bootcamp/understanding-the-abstract-factory-pattory-pattern-in-go-a-paractical-guide-d575fb58df90    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/priyankchheda15     [link]       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m3ye5f/understanding_the_abstract_factory_pattern_in_go/</guid>
      <pubDate>Sat, 19 Jul 2025 15:03:14 GMT</pubDate>
    </item>
    <item>
      <title>Brett Cannon在Python，人类...和包装</title>
      <link>https://www.reddit.com/r/programming/comments/1m3xkx2/brett_cannon_on_python_humans_and_packaging/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/alicedu06       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m3xkx2/brett_cannon_on_python_humans_and_packaging/</guid>
      <pubDate>Sat, 19 Jul 2025 14:28:27 GMT</pubDate>
    </item>
    <item>
      <title>链接：我如何教LLM写Q/KDB+：嵌套的AI编排</title>
      <link>https://www.reddit.com/r/programming/comments/1m3u8wl/link_how_i_taught_llms_to_write_qkdb_nested_ai/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/nvg291     [link]  &lt;a href =“ https://www.reddit.com/r/programming/comments/1m3u8wl/1m3u8wl/link_how_i_i_taught_llms_to_to_write_qkdb_nested_ai/”]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m3u8wl/link_how_i_taught_llms_to_write_qkdb_nested_ai/</guid>
      <pubDate>Sat, 19 Jul 2025 11:46:21 GMT</pubDate>
    </item>
    <item>
      <title>Casey Muatori关于编程的三十五年错误的惊人谈话</title>
      <link>https://www.reddit.com/r/programming/comments/1m3thxa/amazing_talk_from_casey_muatori_about/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/hamza12700     linct   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m3thxa/amazing_talk_from_casey_muatori_about/</guid>
      <pubDate>Sat, 19 Jul 2025 11:03:08 GMT</pubDate>
    </item>
    <item>
      <title>Node.js采访问答：第21天</title>
      <link>https://www.reddit.com/r/programming/comments/1m3sybh/nodejs_interview_qa_day_21/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/myssiriouseye8494     [link]  ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m3sybh/nodejs_interview_qa_day_21/</guid>
      <pubDate>Sat, 19 Jul 2025 10:29:03 GMT</pubDate>
    </item>
    <item>
      <title>构建2D字符管道：从概念到代码集成</title>
      <link>https://www.reddit.com/r/programming/comments/1m3sweo/building_a_2d_character_pipeline_from_concept_to/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/terryc_indiegamedev      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1m3sweo/building_a_2d_character_pipeline_from_concept_to/</guid>
      <pubDate>Sat, 19 Jul 2025 10:25:31 GMT</pubDate>
    </item>
    </channel>
</rss>