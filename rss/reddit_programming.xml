<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Thu, 02 Oct 2025 15:17:50 GMT</lastBuildDate>
    <item>
      <title>您相信p == np吗？为什么或为什么不呢？</title>
      <link>https://www.reddit.com/r/programming/comments/1nw6jsb/do_you_believe_pnp_why_or_why_not/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我是  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/tieconnect3072      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nw6jsb/do_you_believe_pnp_why_or_why_not/</guid>
      <pubDate>Thu, 02 Oct 2025 15:14:37 GMT</pubDate>
    </item>
    <item>
      <title>当前AI围绕AI的炒作掩盖了其真正的实用性</title>
      <link>https://www.reddit.com/r/programming/comments/1nw6g6e/the_current_hype_around_ai_is_overshadowing_its/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/gurraman      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nw6g6e/the_current_hype_around_ai_is_overshadowing_its/</guid>
      <pubDate>Thu, 02 Oct 2025 15:10:53 GMT</pubDate>
    </item>
    <item>
      <title>Backstage.io实际上为您带来了回报吗？来自20多个团队的数据点</title>
      <link>https://www.reddit.com/r/programming/comments/1nw6dxg/has_backstageio_actually_paid_off_for_you_data/</link>
      <description><![CDATA[Hey Redditors,  I&#39;ve been chatting with a lot of Backstage teams lately, from companies of all sizes, and thought I&#39;d share some of what I&#39;ve learned in this article, which should hopefully help newcomers get started (and understand what they are getting themselves into haha​​)  There&#39;s no denying the hype around Spotify&#39;s open-source framework for建筑开发人员门户。但这只是一个 *框架 *  - 不是免费门户。您仍然必须构建东西。  成功的团队有真正的业务需求，并且可以显示ROI。可能是分散的文档，板缓慢的服务或摇摇欲坠的DevOps标准 - 但是，用用例以激光为中心且比您花费的时间更有价值。 我分享了文章中工程师和领导者的一堆有益的报价。好奇您是否同意这些观点。我错过了任何重要的事情吗？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/ketchupanmustard      [commist]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nw6dxg/has_backstageio_actually_paid_off_for_you_data/</guid>
      <pubDate>Thu, 02 Oct 2025 15:08:31 GMT</pubDate>
    </item>
    <item>
      <title>学习Python编程•Fabrizio Romano和Naomi Ceder</title>
      <link>https://www.reddit.com/r/programming/comments/1nw6b0t/learning_python_programming_fabrizio_romano_naomi/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/goto-con       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nw6b0t/learning_python_programming_fabrizio_romano_naomi/</guid>
      <pubDate>Thu, 02 Oct 2025 15:05:32 GMT</pubDate>
    </item>
    <item>
      <title>全球黑客马拉松机会：与卡尔达诺一起在峰会黑客马拉松</title>
      <link>https://www.reddit.com/r/programming/comments/1nw4fi4/global_hackathon_opportunity_build_with_cardano/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   Cardano Foundation与即将举行的Cardano Summit 2025在柏林一起运行全球黑客马拉松。     hackathon（“ lay up”）的任何人都是为想要：  实验的开发人员，在现实世界中的区块链基础架构实验  使用开放式dapp，工具，工具或集成在区块链开发人员社区中获得30,000美元的奖金和可见性，  应用程序开放，直到 2025年10月30日。 如果您有兴趣为区块链开发做出贡献，请探索Cardano的utxo型号，或者只是想在/u/u/u/jakob_cf      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nw4fi4/global_hackathon_opportunity_build_with_cardano/</guid>
      <pubDate>Thu, 02 Oct 2025 13:53:54 GMT</pubDate>
    </item>
    <item>
      <title>我学到了构建一个在部署前运行的AI代码审查工具（无PRS）</title>
      <link>https://www.reddit.com/r/programming/comments/1nw4dml/what_i_learned_building_an_ai_code_review_tool/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我看到的大多数AI代码评论工具我都将挂钩引入拉动请求中。如果您的工作流程严格基于PR，但是在快速移动或独奏创始人设置中，代码通常直接转到MAIN。 我想看看是否可以在部署之前运行AI检查，而无需PR。这个想法很简单，但是挑战不是：   上下文是混乱的：在每次推动下奔跑意味着捕获正确的差异并将其链接回产品票。没有PR元数据，我不得不弄清楚如何仍然提供有意义的反馈。   performance ：仅仅因为LLM在想，您就无法在10分钟内放慢部署。我不得不缓存分析并运行异步步骤，同时保持开发人员的经历。  信号vs噪声：LLMS喜欢过度报告。平衡有用的警告（边缘案例，安全风险，风格不一致）与避免“虚假警报疲劳”需要大量的反复试验。    集成权衡：在CI/CD管道中构建某些东西，在本地工作流程上直接在某种程度上提出了一个有趣的问题，该方法实际上是在dev中遇到了一个有趣的问题。部署之前，浮出问题，并且根本不依赖PR。边缘仍然很粗糙，但是仅凭技术课程就值得。 好奇这里是否有人尝试过在通常的PR流程之外尝试AI-Driven的评论。什么对您有用，什么无？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/sysy-heat-7000      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nw4dml/what_i_learned_building_an_ai_code_review_tool/</guid>
      <pubDate>Thu, 02 Oct 2025 13:52:00 GMT</pubDate>
    </item>
    <item>
      <title>Cube是OSS语义层背后的供应商，它推出了本机BI</title>
      <link>https://www.reddit.com/r/programming/comments/1nw2zi8/cube_the_vendor_behind_the_oss_semantic_layer/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/keydunov      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nw2zi8/cube_the_vendor_behind_the_oss_semantic_layer/</guid>
      <pubDate>Thu, 02 Oct 2025 12:54:48 GMT</pubDate>
    </item>
    <item>
      <title>2025年的快速国际化</title>
      <link>https://www.reddit.com/r/programming/comments/1nw2ubu/quick_internationalization_in_2025/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  咬合大小的书面写入如何在2025年快速翻译生锈应用程序。  &lt;！&lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/urandomd       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nw2ubu/quick_internationalization_in_2025/</guid>
      <pubDate>Thu, 02 Oct 2025 12:48:37 GMT</pubDate>
    </item>
    <item>
      <title>我在YouTube上找到了C＃课程。它涵盖的主题是否足够？ （El</title>
      <link>https://www.reddit.com/r/programming/comments/1nw2nr2/i_found_this_c_course_on_youtube_are_the_topics/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;    olim   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/7zxn      [注释]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nw2nr2/i_found_this_c_course_on_youtube_are_the_topics/</guid>
      <pubDate>Thu, 02 Oct 2025 12:40:22 GMT</pubDate>
    </item>
    <item>
      <title>Kubernetes编排不仅仅是一袋YAML</title>
      <link>https://www.reddit.com/r/programming/comments/1nw25v6/kubernetes_orchestration_is_more_than_a_bag_of/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/davidmdm      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nw25v6/kubernetes_orchestration_is_more_than_a_bag_of/</guid>
      <pubDate>Thu, 02 Oct 2025 12:17:46 GMT</pubDate>
    </item>
    <item>
      <title>每个API开发人员都应该了解的九个HTTP边缘案例</title>
      <link>https://www.reddit.com/r/programming/comments/1nw1yhf/nine_http_edge_cases_every_api_developer_should/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/ludovicianul      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nw1yhf/nine_http_edge_cases_every_api_developer_should/</guid>
      <pubDate>Thu, 02 Oct 2025 12:07:51 GMT</pubDate>
    </item>
    <item>
      <title>了解GO中的对象池设计模式：实用指南</title>
      <link>https://www.reddit.com/r/programming/comments/1nw1vf8/understanding_the_object_pool_design_pattern_in/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  🚀刚刚发布了对象池设计模式的深入研究 - 示例！ 对象池是那些被低估的模式之一，当您使用昂贵到昂贵的资源（如DB连接，baster of for-profers of Contractions of Cornection for-profers of Cression）时，可以极大地提高性能。 模式实际解决的问题（以及为何重要）   懒惰与渴望初始化所解释的 使用Golang内置的Sync.pool有效地使用 有效地使用IT   ＆amp;并发注意事项（带代码段）  如果您曾经想知道为什么GO的数据库/SQL在负载下如此有效 - 这是因为在引擎盖下汇总！    👉 href =“ https://medium.com/design-bootcamp/understanding-the-the-boot-pool-design-pattern-pattern-in-go-a-co-a-partical-guide-6eb9715db014”&gt; https://medium.com/design-bootcamp/understanding-the-boot-pool-design-pattern-pattern-in-go-a-po-a-practical-guide-6eb9715db014   会喜欢社区的反馈。您是否在GO项目中使用过对象池，或者您喜欢依靠GC并让其处理分配？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/priyankchheda15     [link]    32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nw1vf8/understanding_the_object_pool_design_pattern_in/</guid>
      <pubDate>Thu, 02 Oct 2025 12:03:47 GMT</pubDate>
    </item>
    <item>
      <title>＃关于在JavaScript与其他语言中提升的问题</title>
      <link>https://www.reddit.com/r/programming/comments/1nw1aon/a_question_on_hoisting_in_javascript_vs_other/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  链接（在）帖子中有一个很好的解释！一个问题 - 为什么“提升”在JavaScript中，与其他语言不同？ 在诸如Java，Python等语言中的如此特殊的话题，只需要记住两个直接规则中的任何一个之一 - “您在定义它之前无法调用函数”。或＆quot“在您的代码中定义程序中的何处都没有关系。对于变量，它始终是“您不能在声明变量之前使用变量”。如果您声明该变量但不提供值，则将与“&#39; ”提供默认值/未定义的值。提交由＆＃32; /u/fossterer   href =“ https://www.linkedin.com/posts/iamryanyu_frontend-javascript-hoisting-737910419378868224-- ge9？ut m_source = share＆amp; utm_medium = member_android＆amp; rcm = acoaaAmowsgb06Kllb4dtavywct68nn7rutahvzg“&gt; [link]    ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nw1aon/a_question_on_hoisting_in_javascript_vs_other/</guid>
      <pubDate>Thu, 02 Oct 2025 11:34:41 GMT</pubDate>
    </item>
    <item>
      <title>没有评论，但是代码中的摘要呢？</title>
      <link>https://www.reddit.com/r/programming/comments/1nw11gw/no_comments_but_what_about_summaries_in_code/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我正在观看YouTube视频，内容涉及您应该编写两年前创建的毫无意外代码的原因，但是我有一个问题可以使用一些专业知识。在Visual Studio中使用C ++或C＃等语言的摘要呢？摘要更适合IntelliSense，可以说我正在编写您将来必须使用的库。我没有发表评论，但我只是添加摘要，代码应该说明自己。但是，当您必须调用功能时，您是否想查看函数/方法的摘要？我们需要提供什么参数以及原因。完成后返回了什么？我只想伸出援手，看看您的最佳体验  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/standard_apple7147      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nw11gw/no_comments_but_what_about_summaries_in_code/</guid>
      <pubDate>Thu, 02 Oct 2025 11:21:10 GMT</pubDate>
    </item>
    <item>
      <title>数据工程中有趣的链接 -  2025年9月</title>
      <link>https://www.reddit.com/r/programming/comments/1nw0wq8/interesting_links_in_data_engineering_september/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/rmoff     link&gt; link&gt; link&gt;      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1nw0wq8/interesting_links_in_data_engineering_september/</guid>
      <pubDate>Thu, 02 Oct 2025 11:14:19 GMT</pubDate>
    </item>
    </channel>
</rss>