<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Fri, 11 Jul 2025 12:34:55 GMT</lastBuildDate>
    <item>
      <title>功能中的无限参数???</title>
      <link>https://www.reddit.com/r/programming/comments/1lx5426/infinite_parameters_in_function/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/upeacter_lie656      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lx5426/infinite_parameters_in_function/</guid>
      <pubDate>Fri, 11 Jul 2025 12:04:23 GMT</pubDate>
    </item>
    <item>
      <title>什么是Lambda？</title>
      <link>https://www.reddit.com/r/programming/comments/1lx53il/what_is_lambda/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/upeauty_lie656      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lx53il/what_is_lambda/</guid>
      <pubDate>Fri, 11 Jul 2025 12:03:40 GMT</pubDate>
    </item>
    <item>
      <title>python中的切换箱？？？</title>
      <link>https://www.reddit.com/r/programming/comments/1lx537i/switch_case_in_python/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/beautch_lie656      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lx537i/switch_case_in_python/</guid>
      <pubDate>Fri, 11 Jul 2025 12:03:13 GMT</pubDate>
    </item>
    <item>
      <title>耳朵：低音提升，等式任何音频！不再起作用，因为版本是旧的</title>
      <link>https://www.reddit.com/r/programming/comments/1lx4er9/ears_bass_boost_eq_any_audio_doesnt_work_any_more/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   是否有任何编码器在清单3下重写Prog并不难？否则请参阅此程序的类似物   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/sling_768     [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lx4er9/ears_bass_boost_eq_any_audio_doesnt_work_any_more/</guid>
      <pubDate>Fri, 11 Jul 2025 11:27:44 GMT</pubDate>
    </item>
    <item>
      <title>python heapq.nlargest vs List.Sort</title>
      <link>https://www.reddit.com/r/programming/comments/1lx384k/python_heapqnlargest_vs_listsort/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   tl; dr; dr：不要微调。    i nerd nipsnipsnip snip snip snip snip senker，以不同的方式来获取python列表中最大元素的方法。我做了一些漂亮的地块，并取得了一些有趣的结果。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/ddaanet       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lx384k/python_heapqnlargest_vs_listsort/</guid>
      <pubDate>Fri, 11 Jul 2025 10:18:11 GMT</pubDate>
    </item>
    <item>
      <title>2025年6月（版本1.102）</title>
      <link>https://www.reddit.com/r/programming/comments/1lx1drb/june_2025_version_1102/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/feross       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lx1drb/june_2025_version_1102/</guid>
      <pubDate>Fri, 11 Jul 2025 08:16:08 GMT</pubDate>
    </item>
    <item>
      <title>Onellm-更好的打开路由器？</title>
      <link>https://www.reddit.com/r/programming/comments/1lx1ah2/onellm_better_open_router/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  烤我的打开路由器克隆（最小支持RN）  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/beardy4906       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lx1ah2/onellm_better_open_router/</guid>
      <pubDate>Fri, 11 Jul 2025 08:09:52 GMT</pubDate>
    </item>
    <item>
      <title>我该如何排卵？</title>
      <link>https://www.reddit.com/r/programming/comments/1lx15xv/how_do_i_ovecome_this/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我一直在尝试学习 ereact 一个星期，但是我仍然无法让自己的自我打开 vs code ，即使我渴望开发一些应用程序，也可以开始friggin学习。我只是觉得这是一个很长的过程。 tbh开始感觉像是一种疾病，因为我无法控制我的大脑或总结如何解释这一点。  请帮助我    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/hammad_777_77_77        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lx15xv/how_do_i_ovecome_this/</guid>
      <pubDate>Fri, 11 Jul 2025 08:01:27 GMT</pubDate>
    </item>
    <item>
      <title>牛奶等代码年龄</title>
      <link>https://www.reddit.com/r/programming/comments/1lx09yi/code_ages_like_milk/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/chilipepperhott      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lx09yi/code_ages_like_milk/</guid>
      <pubDate>Fri, 11 Jul 2025 07:02:31 GMT</pubDate>
    </item>
    <item>
      <title>设计实时聊天应用程序</title>
      <link>https://www.reddit.com/r/programming/comments/1lwzv8r/designing_a_real_time_chat_application/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  诸如WhatsApp，Telegram和Slack之类的实时聊天应用程序已经改变了我们的交流方式。它们可以在设备和位置进行即时消息传递。这些消息传递平台必须处理数百万个并发连接，以最小的延迟传递消息，并提供诸如消息同步，通知和媒体共享之类的功能。这是如何设计实时聊天应用程序？   &lt;！ -  sc_on-&gt; 32;提交由＆＃32; /u/u/u/erdsingh24      [commist]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lwzv8r/designing_a_real_time_chat_application/</guid>
      <pubDate>Fri, 11 Jul 2025 06:36:33 GMT</pubDate>
    </item>
    <item>
      <title>分解零单击的AI漏洞，通过十一级语音助手在日历邀请中实现数据效果</title>
      <link>https://www.reddit.com/r/programming/comments/1lwya0v/breaking_down_the_zeroclick_ai_vulnerability/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/rudrakash-112     [link]    32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lwya0v/breaking_down_the_zeroclick_ai_vulnerability/</guid>
      <pubDate>Fri, 11 Jul 2025 05:00:25 GMT</pubDate>
    </item>
    <item>
      <title>磨机构建工具v1.0.0释放亮点</title>
      <link>https://www.reddit.com/r/programming/comments/1lwy0mc/mill_build_tool_v100_release_highlights/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/lihaoyi       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lwy0mc/mill_build_tool_v100_release_highlights/</guid>
      <pubDate>Fri, 11 Jul 2025 04:45:13 GMT</pubDate>
    </item>
    <item>
      <title>我建立了一个实时的语音助手，像chatgpt这样的交谈 - 从头开始</title>
      <link>https://www.reddit.com/r/programming/comments/1lwvpgi/i_built_a_realtime_voice_assistant_that_talks/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我最近构建了一个实时的语音助手，其工作方式像chatgpt，但具有实际的语音输入/输出。它聆听，检测到何时说话（无按钮），使用更快的旋转器转录，并立即使用GTTS或PYTTSX3进行回复。 我使用FastApi构建了后端，使用FastApi，使用了用于音频流的Websockets，并将所有内容集成到Next.js.js.js.js.js.它像您与实际AI交谈一样实时工作。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/azad_11014       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lwvpgi/i_built_a_realtime_voice_assistant_that_talks/</guid>
      <pubDate>Fri, 11 Jul 2025 02:43:56 GMT</pubDate>
    </item>
    <item>
      <title>测试的Claude 4 Opus vs Grok 4在15个生锈编码任务上</title>
      <link>https://www.reddit.com/r/programming/comments/1lwrj4g/tested_claude_4_opus_vs_grok_4_on_15_rust_coding/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  通过在30k行锈代码库上面临相同的编码挑战来运行这两个模型。数据是数据显示的：  错误检测： grok 4抓住了每一个比赛状况和僵局。 Opus错过了几个，包括Tokio :: RWLock死锁和螺纹下降，阻止了恐慌钩执行。  速度： grok平均9-15秒，每次请求13-24秒。       COUD： $ 4.50 vs $ 13每项任务。但是Grok的定价在128K代币后加倍。  速率限制： grok的限制是残酷的。测试期间不断撞墙。 Opus没有这样的问题。  工具调用：均以JSON模式为99％的精度。 XML降至83％（Opus）和78％（Grok）。  规则以下规则： opus遵循我的自定义编码规则。格罗克（Grok）在2/15任务中忽略了他们。  单次启示成功： 9/15 grok，opus。   底线： grok grok更快，更便宜，更便宜，更适合查找硬虫。但是速率限制令人发指，偶尔会忽略说明。 Opus较慢，价格较慢，但可预测且可靠。 预算中的bug狩猎：Grok。对于可靠性重要的生产工作流程：opus。 其他人在真实代码库上测试了这些功能吗？对其他语言的体验感到好奇。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/west-Chocaly2977     [link]   ＆＃32;  &lt;a href =“ https://www.reddit.com/r/programming/comments/1lwrj4g/tested_claude_4_4_4_opus_vs_grok_4_4_4_4_15_rust_coding/]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lwrj4g/tested_claude_4_opus_vs_grok_4_on_15_rust_coding/</guid>
      <pubDate>Thu, 10 Jul 2025 23:23:44 GMT</pubDate>
    </item>
    <item>
      <title>Rejigs：制作正则表达式人类可读</title>
      <link>https://www.reddit.com/r/programming/comments/1lwqn1r/rejigs_making_regular_expressions_humanreadable/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/usernamecanbenull    href =“ https://medium.com/@omarzawahry/rejigs-making-regular-expressions-human-erable-1fad37cb3eae”&gt; [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lwqn1r/rejigs_making_regular_expressions_humanreadable/</guid>
      <pubDate>Thu, 10 Jul 2025 22:45:30 GMT</pubDate>
    </item>
    </channel>
</rss>