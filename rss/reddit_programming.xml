<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Wed, 09 Jul 2025 03:53:16 GMT</lastBuildDate>
    <item>
      <title>作为键入对象的文件 - 带有flemagram语言的加载，添加，RM和重命名。</title>
      <link>https://www.reddit.com/r/programming/comments/1lv7gvp/files_as_typed_objects_with_add_rm_and_rename_on/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿 - 我们正在使用一种称为 flogram 的编程语言，该语言 ，该语言的重点是使代码易于使用AI帮助，尤其是针对团队。这是一种通用语言，具有很强的打字，但是我们还会重新思考常见的工作流程，例如使用文件，更简单，更灵活。 我们正在探索的一个想法是将文件视为处理文件，就像它们只是结构化的对象一样，它们只是结构化的对象，但也不允许安全型                    i. database: object User: age: I32 add dob: Date = Jan 1st 1970 # Add this if missing rm profession: String # Remove this field if it exists  A Taste of the Syntax: object User: firstName: String lastName: String age: I32 fn main(): # Create file from object type CreateFile {user}（&#39;Alice.user; user; quot; quot; quat file：= file {user}（&#39;alice.user; user; user; quort; quirstName =; alice =＆quort; file.lastname =＆quot; smith; quot; file.age = 25＃后来，我们进化了类型对象用户：名称：字符串添加dob：date = date 1970 rm age：i32重命名的名称名称读取：= file {user}（＆quot; alice.user＆quot; user; user＆quot）draw（&#39;name; name：＆queting; name; name}，dob pred of dob：{使用，防止多个程序用冲突的模式突变文件。 我们很喜欢您对这个想法是实用，混淆还是令人兴奋的 的反馈 - 尤其是您曾经在文件进化或避免了由于兼容的范围而遇到的范围或更重要的是值得？   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/holudy_gold9071      [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lv7gvp/files_as_typed_objects_with_add_rm_and_rename_on/</guid>
      <pubDate>Wed, 09 Jul 2025 02:28:36 GMT</pubDate>
    </item>
    <item>
      <title>任何其他程序员都会发现Epsein细胞记录被剪切的特定时间是可疑的，但并非出于这个原因？</title>
      <link>https://www.reddit.com/r/programming/comments/1lv689n/any_other_programmer_find_the_specific_time_the/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  不是此subreddit上的典型帖子，但嘿，这很重要。因此，对于那些不想单击链接的人，录音在11:59:00削减，并在12:00:00恢复。我的第一个想法是程序员决定在11:59:59结束视频流，以每天具有不同的文件名（从开始使用的方法不好的方法），但忘了添加秒数。类似的东西pseudocode    byte [] record（）     {        var stream = var stream = new Videorecordersodefting（） 11:59 pm＆amp;＆amp; time＆gt; 00:00）//应为11:59:59或日期检查，而不是时间        stream.stoprocording（）savefile（file，name =昨天的日期）;       record&gt; record（）;      }   idk这是半生的，但你明白了。另外，不要误会我的意思，我不是要捍卫橙色男人。我只是认为录音中的剪辑可能是由于半烘烤的代码而成为红鲱鱼。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/fuzzylittlemanpeach8     [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lv689n/any_other_programmer_find_the_specific_time_the/</guid>
      <pubDate>Wed, 09 Jul 2025 01:27:32 GMT</pubDate>
    </item>
    <item>
      <title>> XIT</title>
      <link>https://www.reddit.com/r/programming/comments/1lv33rw/xit/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/usigh_equal_2129      [link]       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lv33rw/xit/</guid>
      <pubDate>Tue, 08 Jul 2025 23:01:34 GMT</pubDate>
    </item>
    <item>
      <title>当技术债务实际上是一件好事时</title>
      <link>https://www.reddit.com/r/programming/comments/1lv1qu5/when_technical_debt_is_actually_a_good_thing/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/heave-elk8273       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lv1qu5/when_technical_debt_is_actually_a_good_thing/</guid>
      <pubDate>Tue, 08 Jul 2025 22:02:49 GMT</pubDate>
    </item>
    <item>
      <title>地球编程| Lambda天2024年</title>
      <link>https://www.reddit.com/r/programming/comments/1lv1ekd/programming_for_the_planet_lambda_days_2024/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;  /u/considerealization   [link] ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1lv1ekd/programming_for_the_planet_lambda_days_2024/</guid>
      <pubDate>Tue, 08 Jul 2025 21:48:54 GMT</pubDate>
    </item>
    <item>
      <title>使用MongoDB的关系迁移者构建春季靴子CRUD应用程序</title>
      <link>https://www.reddit.com/r/programming/comments/1luzxls/building_a_spring_boot_crud_application_using/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/majestic_wallaby7374      [link]    32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1luzxls/building_a_spring_boot_crud_application_using/</guid>
      <pubDate>Tue, 08 Jul 2025 20:49:44 GMT</pubDate>
    </item>
    <item>
      <title>外壳的考拉基准：表征和含义</title>
      <link>https://www.reddit.com/r/programming/comments/1luzq97/the_koala_benchmarks_for_the_shell/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/mttd      [commist]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1luzq97/the_koala_benchmarks_for_the_shell/</guid>
      <pubDate>Tue, 08 Jul 2025 20:41:40 GMT</pubDate>
    </item>
    <item>
      <title>辩护掉期：共同的误解（2018年）</title>
      <link>https://www.reddit.com/r/programming/comments/1luxu2t/in_defence_of_swap_common_misconceptions_2018/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1luxu2t/in_defence_of_swap_common_misconceptions_2018/</guid>
      <pubDate>Tue, 08 Jul 2025 19:27:38 GMT</pubDate>
    </item>
    <item>
      <title>自动包装Haskell库作为Swift Binary XCFrameWork</title>
      <link>https://www.reddit.com/r/programming/comments/1luxt43/automatically_packaging_a_haskell_library_as_a/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/ketralnis     [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1luxt43/automatically_packaging_a_haskell_library_as_a/</guid>
      <pubDate>Tue, 08 Jul 2025 19:26:35 GMT</pubDate>
    </item>
    <item>
      <title>使用CGP编程Rust的可扩展数据类型 - 第1部分：模块化应用结构和可扩展的构建器</title>
      <link>https://www.reddit.com/r/programming/comments/1luxt27/programming_extensible_data_types_in_rust_with/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1luxt27/programming_extensible_data_types_in_rust_with/</guid>
      <pubDate>Tue, 08 Jul 2025 19:26:32 GMT</pubDate>
    </item>
    <item>
      <title>缓存无处不在</title>
      <link>https://www.reddit.com/r/programming/comments/1luxszq/caching_is_everywhere/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1luxszq/caching_is_everywhere/</guid>
      <pubDate>Tue, 08 Jul 2025 19:26:28 GMT</pubDate>
    </item>
    <item>
      <title>Jepsen＆​​Tigerbeetle</title>
      <link>https://www.reddit.com/r/programming/comments/1luxsie/jepsen_tigerbeetle/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/ketralnis     [link]    32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1luxsie/jepsen_tigerbeetle/</guid>
      <pubDate>Tue, 08 Jul 2025 19:25:56 GMT</pubDate>
    </item>
    <item>
      <title>应用加密：在创意共享下发布的全面，新颖的课程材料</title>
      <link>https://www.reddit.com/r/programming/comments/1luxryr/applied_cryptography_comprehensive_novel_course/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis     [link&gt; [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1luxryr/applied_cryptography_comprehensive_novel_course/</guid>
      <pubDate>Tue, 08 Jul 2025 19:25:24 GMT</pubDate>
    </item>
    <item>
      <title>统一的内存管理</title>
      <link>https://www.reddit.com/r/programming/comments/1luxrpm/unified_memory_management/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1luxrpm/unified_memory_management/</guid>
      <pubDate>Tue, 08 Jul 2025 19:25:09 GMT</pubDate>
    </item>
    <item>
      <title>Errno的有限性质在UNIX中发生了什么</title>
      <link>https://www.reddit.com/r/programming/comments/1luxqvq/what_is_going_on_in_unix_with_errnos_limited/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/ketralnis       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1luxqvq/what_is_going_on_in_unix_with_errnos_limited/</guid>
      <pubDate>Tue, 08 Jul 2025 19:24:16 GMT</pubDate>
    </item>
    </channel>
</rss>