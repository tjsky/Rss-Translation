<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：Opensource</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>所有与开源相关的所有内容的子reddit（在此上下文中，我们在此处删除开源的定义http://en.wikipedia.org/wiki/open_source）</description>
    <lastBuildDate>Sat, 30 Aug 2025 15:16:55 GMT</lastBuildDate>
    <item>
      <title>IROH -SSH -SSH没有IP后面的IP</title>
      <link>https://www.reddit.com/r/opensource/comments/1n43zoh/irohssh_ssh_without_ip_behind_any_nat/</link>
      <description><![CDATA[       &lt;！ -  sc_off- sc_off-&gt;  介绍：iroh-sssh  用例后备（请参阅 iRoh ）。   我的问题：您的SSH工作流如何？您正在积极使用的iroh-ssh缺少哪些参数和子命令？您想看到什么实现？ 一些示例用法：  ＃＃ IROH-SSH服务器-Persist连接到这台计算机：IROH-SSH MY-USER@bb8e1a5661a6dfa9ae2DD978922F30F30F30F524F524F6F6FD8C99B3DE021C53F29292AAEAE74330＃在客户端上IROH-SSH用户@BB8E1A5661A6DFA9AE2DD97892F30F524F524F6FD8C99B3DE021C53F292AAE74330＃或证书＆gt; IROH-SSH -I〜/.ssh/id_rsa_my_cert my-user@bb8e1a5661a6dfa9ae2dd9789222f30f30f30f334f524f6f6fd8c99b3de021c53f29292aae744330   /u/zbnone       [注释]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n43zoh/irohssh_ssh_without_ip_behind_any_nat/</guid>
      <pubDate>Sat, 30 Aug 2025 15:08:34 GMT</pubDate>
    </item>
    <item>
      <title>我为SCP粉丝进行了开源浏览器扩展程序，以跟踪他们阅读的内容</title>
      <link>https://www.reddit.com/r/opensource/comments/1n43lz8/i_made_an_opensource_browser_extension_for_scp/</link>
      <description><![CDATA[    [link]     [注释]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n43lz8/i_made_an_opensource_browser_extension_for_scp/</guid>
      <pubDate>Sat, 30 Aug 2025 14:53:09 GMT</pubDate>
    </item>
    <item>
      <title>10GB的大麻/应变图像可供下载</title>
      <link>https://www.reddit.com/r/opensource/comments/1n43cew/10gb_of_cannabisstrain_images_available_for/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  对于任何需要应变图像的人：我将一个带有各种大麻菌株图像的存储库放在一起。 所有图像均按应变名称组织，非常适合视觉参考，帖子或研究。 href =“ https://github.com/linhacanabica/images-strains-weed”&gt; https://github.com/linhacanabica/linhacanabica/images-strains-strains-weed-weed    提交由＆＃32; /u/u/gustavospalencia    href =“ https://www.reddit.com/r/opensource/comments/1n43cew/10gb_of_cannabisstrain_images_images_available_for/”&gt; [link]       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n43cew/10gb_of_cannabisstrain_images_available_for/</guid>
      <pubDate>Sat, 30 Aug 2025 14:42:19 GMT</pubDate>
    </item>
    <item>
      <title>Mocky Balboa：任何SSR框架的服务器端模拟工具</title>
      <link>https://www.reddit.com/r/opensource/comments/1n40gkn/mocky_balboa_a_serverside_mocking_tool_for_any/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  您是否曾经为服务器端渲染的应用程序编写终端测试而努力？这是我几年前与之争吵的事情。我搜寻了互联网以寻求解决方案，我不是第一个解决这个问题的人。解决方案范围从应用程序中的分支逻辑，代理服务器到完全绕过SSR。我觉得有更好的方法。 我构建的解决方案启发了一个新工具 Mocky Balboa 我想今天分享。它是对主要SSR框架的一流支持的框架不可知论。柏树和剧作家也有一流的支持。如果您未列出框架，则可以选择构建服务器和客户端软件包的自定义集成。 易于设置和直观的使用。模拟API遵循与剧作家的Route API非常相似的模式。模拟在您的测试旁边声明地编写，如果需要模拟二进制响应，则支持服务文件。 以下是playwright文档页面上的摘要：    import {test，test，test，test，test，test，firce}，@playwright/playwright/test test＆quot; quot;;从“@mocky-balboa/playwright”中导入{createClient}; test（“我的页面加载”，async（{pag，context}）=＆gt; {//创建我们的Mocky Balboa客户端，并与服务器const contsclient =等待createClient（上下文）建立连接路线。 //在浏览器等待页面中访问我们的应用程序的页面。   我会喜欢反馈，希望其他人在为您的SSR前端编写测试时发现它和我一样有用。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1n40gkn/mocky_balboa_a_a_serverside_mocking_mocking_mocking_tool_for_any/&gt; [link]   [注释]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n40gkn/mocky_balboa_a_serverside_mocking_tool_for_any/</guid>
      <pubDate>Sat, 30 Aug 2025 12:31:59 GMT</pubDate>
    </item>
    <item>
      <title>我为自己的项目建立了一个带有安全的API的开源许可管理系统，现在您也可以使用它。</title>
      <link>https://www.reddit.com/r/opensource/comments/1n40c06/i_built_an_opensource_license_management_system/</link>
      <description><![CDATA[        &lt;！ -  sc_off-&gt;  嘿，大家， 我想分享一个我一直在研究的项目：一个完整​​的开放式许可证管理系统。我最初是为自己的应用程序构建的，但我认为它对其他独立开发人员或需要管理软件许可证而无需支付昂贵服务的任何人可能很有用。 以下快速介绍它的作用：   两个主要门户： *  *  admin portal： 您在其中管理一切。它具有一个仪表板，可快速概述总用户，活动许可证和即将到期的许可。您可以创建用户，为他们生成许可证密钥，设置有效期，甚至撤销许可证。 * 用户门户：这是一个简单，干净的接口，适合您的客户。他们可以使用唯一的哈希登录您，并查看其所有许可证，检查到期日期并复制其密钥。  安全的API是核心功能：最重要的部分是许可证验证API。它的端到端加密。 *  AES加密：应用程序和API之间的所有通信均已加密。请求有效载荷已加密，并且API发送了加密响应。这样可以防止许可键和其他数据安全地被窥探。 * 硬件绑定：这很酷。您可以选择将许可证绑定到用户的硬件ID。他们第一次成功验证许可证时，系统可以将该钥匙锁定在其机器上。如果其他人试图在另一台机器上使用相同的密钥，则验证将失败。这是防止休闲许可共享的坚实方法。 我试图使其尽可能简单地设置。它使用PostgreSQL数据库，整个过程都可以自我托管。我包含了有关如何将API与Jav​​aScript，C＃和Python中的示例集成到您自己的应用程序中的详细文档。 它已获得许可，因此请随时使用它，分叉并做出贡献。我总是接受反馈和建议。 您可以在下面查看实时演示和GitHub repo。让我知道您的想法！    live demo：  https://license-management-management-symagement-symagement-system-system-sand-sand-sand.ver.ver.ver.app/  href =“ https://github.com/killcod3/killcod3/license-management-system”&gt; https://github.com/killcod3/killcod3/license-management-system 提交由＆＃32; /u/u/u/lostmathematician621       [注释]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n40c06/i_built_an_opensource_license_management_system/</guid>
      <pubDate>Sat, 30 Aug 2025 12:25:41 GMT</pubDate>
    </item>
    <item>
      <title>OpenSyte-开源Hubspot＆Zoho替代品</title>
      <link>https://www.reddit.com/r/opensource/comments/1n3yuvy/opensyte_an_opensource_hubspot_zoho_alternative/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我正在开发一个名为OpenSyte的开源，一为opensyte的企业管理软件，该软件旨在作为HubSpot和Zoho的替代方案。我在短短一个月内完成了约40％的功能。  是什么设置与HubSpot和Zoho和Zoho？     -   simplicity ：opensyte：opensyte更简单，更简单地使用，在一个位置中都可以使用serg and serge and sermirder of siment usirime of sirder nirder nirnd     界面：开孔的用户界面与其他业务管理平台明显不同。所有功能均在侧边栏中组织，使用户可以轻松地在它们之间切换。清楚地布置了一切，因此您无需成为专家即可使用该平台！   -  用户管理＆amp;访问控制：我已经付出了巨大的努力，以确保此功能在其他平台中脱颖而出。我们的用户管理＆amp;访问控制系统是高度可定制的。您可以使用预定义的权限集创建自定义角色，并管理用户可以查看和访问的功能。 您现在可以立即看到从下面的github链接实现了哪些功能。    github链接：  https://github.com/opensyte/opensyte/opensyte     &lt;！ -  sc_on-提交由＆＃32; /u/u/dagermohamed2     [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n3yuvy/opensyte_an_opensource_hubspot_zoho_alternative/</guid>
      <pubDate>Sat, 30 Aug 2025 11:05:59 GMT</pubDate>
    </item>
    <item>
      <title>建立VAPI的开源替代品 - 寻求社区意见🚀</title>
      <link>https://www.reddit.com/r/opensource/comments/1n3y0kd/building_an_open_source_alternative_to_vapi/</link>
      <description><![CDATA[]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n3y0kd/building_an_open_source_alternative_to_vapi/</guid>
      <pubDate>Sat, 30 Aug 2025 10:14:00 GMT</pubDate>
    </item>
    <item>
      <title>几周前创建了一个简单的图像压缩工具（PC/Mac），因此共享</title>
      <link>https://www.reddit.com/r/opensource/comments/1n3xa7u/created_a_simple_image_compression_tool_pcmac/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/raghav4882    href =“ https://www.reddit.com/r/wordpress/comments/1n3n0qc/created_a_a_simple_image_compression_compression_tool_pcmac/”&gt; [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n3xa7u/created_a_simple_image_compression_tool_pcmac/</guid>
      <pubDate>Sat, 30 Aug 2025 09:25:40 GMT</pubDate>
    </item>
    <item>
      <title>我们开源代理的故事！</title>
      <link>https://www.reddit.com/r/opensource/comments/1n3woa7/the_story_of_our_open_source_agent/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿 u/opensource 👋 我想分享几天的旅程href =“ http://www.droidrun.ai”&gt; droidrun ，我们用于自动化真实Android Apps的开放式代理框架。 我们开始构建Droidrun，因为我们感到沮丧：自动化和代理技术中的所有东西似乎都陷入了Browserer中。但是人们住在手机和应用程序上是围墙的花园。因此，我们建立了一个可以实际利用，滚动和交互的代理，就像人类一样。 几周前，我们发布了一个简短的演示无音调，只是一个运行真实Android UI的代理。在48小时内：  我们达到了 xxxx+ github     获得了Devs加入我们的devord      在投资者的雷达 after  What worked for us:  We led with a real demo, not a roadmap Posted in the right communities, not product forums Asked for feedback, not attention And open-sourced from day one, which gave us credibility +动量  我们还处于早期，还有很多吨要弄清楚。但是到目前为止，最大的一课是：  不要等待抛光。如果核心很强，就会运送怪异，破碎，原始的东西。提交由＆＃32; /u/u/petesneaknex     [link]    ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n3woa7/the_story_of_our_open_source_agent/</guid>
      <pubDate>Sat, 30 Aug 2025 08:44:43 GMT</pubDate>
    </item>
    <item>
      <title>寻求RTCIO的反馈：现代的，类型的安全WEBRTC库，带有脱钩的信号器</title>
      <link>https://www.reddit.com/r/opensource/comments/1n3uyjq/seeking_feedback_on_rtcio_a_modern_typesafe/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在过去的几周中，我一直在一个名为 rtcio 的新开源库。我的目标是创建一个具有简单，高级的API类似于 socket.io 的简单，高级的API ，但要与现有解决方案更灵活。 API设计以及您可能会看到的任何潜在改进。   github repo：   注意：这不是主分支上的 ，因为这是我几年前在此问题上进行的一次尝试的广泛重构。从那时起，我就已经成为开发人员了很多，认为重新做​​这个库是值得的，这样我就可以在不久的将来在一个项目中使用它。如果您想向自己大笑，您可以检查主分支的当前实现：）  “为什么”为什么     ，而像 simple&gt; simple-peer 之类的图书馆很棒，我想要在现代，模块化项目中更觉得在家中感觉到的东西。我的主要目标是：   真正的信号者不可知论：我想要一个与任何特定的信号传输无关的库（例如socket.io）。     第一级类型安全    ：一个完全符合的库，一般的库是必不可少的   密钥架构＆amp;打字稿的决定  这是我最感谢您的反馈的地方。   1。解耦的信号层库的核心通过 clientsignaler 接口（@rtcio/signding ）完全从信号服务器与信号服务器解耦。这意味着您可以编写（或使用）任何信号实现（Websockets， socket.io ，graphQl等），并将其插入主 rtc  Manager。这使库非常灵活且易于测试。   2。类型安全的通用事件系统我在事件系统上花费了很多时间。  RTC 管理器和单个 P2PConnection 实例是通用的。您可以通过定义自定义P2P事件的接口传递，并且使用 .on（）和 .emit（）。      //定义您的自定义事件interface Appevents Appevents {ChatMessage：chatMessage：chatMess：（chatMess）= cant，messags：string）=＆gt;空白; gamestate ：（状态：gameStateObject）=＆gt;空白; } const rtc = new rtc＆lt; appevents＆gt;（Signaler，&#39;my-room&#39;）; //“ peer”现在已与您的事件rtc.on（&#39;connected&#39;，（peer）=＆gt; {//自动完成&#39;chatmessage&#39;&#39;&#39;和&#39;gameState&#39;在这里peer.on（&#39;chatmessage&#39;，&#39;chatmessage&#39;，（来自，message）=＆gt; gt;     3。带有NPM工作区的Monorepo＆amp;项目参考  该项目的构造是带有软件包/*的monorepo，我正在使用Typescript的项目参考来管理核心，信号界面和信号器实现软件包之间的依赖关系。这可以使一切保持清洁并有效地建造。 请求反馈  我正在寻找：   api设计：RTC Manager和P2PConnection api api Intuitive contuitive contore        type  一般代码质量：您看到的任何事情都可以做得更好？   感谢您抽出宝贵的时间来查看！我期待您的评论！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/joe-diertay     [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n3uyjq/seeking_feedback_on_rtcio_a_modern_typesafe/</guid>
      <pubDate>Sat, 30 Aug 2025 06:53:18 GMT</pubDate>
    </item>
    <item>
      <title>🚀开源AI智能手表项目 - 寻找合作者！</title>
      <link>https://www.reddit.com/r/opensource/comments/1n3u8jj/open_source_ai_smartwatch_project_looking_for/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;     tl; dr：构建智能手表的开放课程AI模型作为附带项目。我正在学习时，我正在学习寻找此项目 这是我创建一个开源的AI-Power智能手表平台的热情方面的项目。我不是该领域的专家，但是我非常致力于一起学习和建立有意义的东西。寻找志趣相投的人，他们想探索可穿戴的AI技术！ 我们正在构建的 一个开源AI驱动的智能手表平台，使可穿戴的智能民主化。 Our goal is to create accessible, privacy-focused AI models that can run efficiently on smartwatch hardware while providing meaningful insights and interactions. What We Need 🧠 AI/ML Engineers - Model optimization, edge AI, TinyML 📊 Data Scientists - Health analytics, user insights 📚技术作家  - 文档，教程 其他学习者  - 任何兴奋地一起探索和学习的人！ 我的承诺     总是学习，我一直在学习  - 我正在积极地学习em emperable this ai ai emp eart ai emp this ai emperable  br/&gt;   附带项目，我一直致力于一致的进步 长期视觉  - 不仅是周末骇客 - 我为此付出了很长的时间    Open Communication   - 定期更新，透明挑战和进度和进度 为什么要加入我们的范围？ freely available ✅ Learn Together - Perfect for anyone wanting to dive into edge AI and wearables ✅ No Pressure Environment - We&#39;re all learning and figuring this out together ✅ Real Impact - Build something people will actually use and benefit from ✅ Flexible Commitment - Contribute as much or as little as your schedule allows ✅投资组合构建器  - 展示您不断增长的技能 当前状态   🔥早期阶段 - 塑造项目方向📋定义架构和技术要求 的绝佳时机，您是...   是一个学生或专业的学生，​​想探索可穿戴的AI  具有愿意指导和指导和指导的专业知识的人 一个初学者兴奋地与他人一起学习   相关领域中具有基本技能的人      dm me或评论！     也是这些东西的新事物？完美！让我们一起学习和建立。我相信最好的项目来自热情的人，他们愿意在他们走时弄清楚事情。 让我们建立可穿戴AI的未来 - 一次付诸实践！ 🤝  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/skillsalt9362     [link]     [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n3u8jj/open_source_ai_smartwatch_project_looking_for/</guid>
      <pubDate>Sat, 30 Aug 2025 06:08:23 GMT</pubDate>
    </item>
    <item>
      <title>寻找贡献者：C ++和Rust的早期国际象棋引擎</title>
      <link>https://www.reddit.com/r/opensource/comments/1n3shfc/looking_for_contributors_earlystage_chess_engine/</link>
      <description><![CDATA[       ＆＃32;提交由＆＃32; /u/u/u/kyoshiyoshi     link”   [注释]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n3shfc/looking_for_contributors_earlystage_chess_engine/</guid>
      <pubDate>Sat, 30 Aug 2025 04:26:42 GMT</pubDate>
    </item>
    <item>
      <title>我们构建并开源了一个远程对编程应用程序</title>
      <link>https://www.reddit.com/r/opensource/comments/1n3j6ei/we_build_and_opensourced_a_remote_pair/</link>
      <description><![CDATA[       &lt;！ -  sc_off-&gt;   hey  hopp，一种开源远程对编程工具，无法在质量和预算之间进行选择。     repo可在：  https://github.com/gethopp/hopp/hopp/hopp     促使我们疯狂的问题使我们疯狂    我们都是远程工程师（我在Grafana实验室中，我们都在 价格过高的替代方案。没有中型启动可以证明每月每月有数十美元的合理性。  我们尝试了所有事情。没有什么让我们“坐在彼此相邻的地方”。  所以我们没有破坏银行。我们认为，每个开发人员都应该获得平滑的配对编程，不仅是那些拥有无限工具预算的FAANG公司的配对编程。 我们受到ZED所做的一切的启发 - 公开建立，让社区塑造产品。 We&#39;re not VC-backed (by choice), so we can focus on what developers actually need. Tech stack:  Desktop: Tauri + React/TypeScript (native performance, tiny bundle) Backend: GoLang Real-time: Built on LiveKit with our own WebRTC optimizations   是什么与众不同：    sub-100ms潜伏期 - 真正的本地  🎮完全遥控 - 两个人都可以同时编码   📱跨平台 -  MacOS和Windows  -  MacOS和Windows，我们希望获得Linux Support  li&gt;           💰自我主持 - 您可以自主甚至拜克（带上自己的livekit）   尝试一下！ 🎯  我们正在积极寻找Beta测试人员和贡献者！请确保检查我们的回购并参与其中！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/kostakos14       [注释]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n3j6ei/we_build_and_opensourced_a_remote_pair/</guid>
      <pubDate>Fri, 29 Aug 2025 21:02:49 GMT</pubDate>
    </item>
    <item>
      <title>方案驱动的异步后端模拟器（编码之前设计）</title>
      <link>https://www.reddit.com/r/opensource/comments/1n3iknv/scenariodriven_simulator_for_async_backends/</link>
      <description><![CDATA[Hello! I’d like to share AsyncFlow, an open-source scenario-driven simulator for asynchronous distributed backends. With AsyncFlow you can do something like: Declare a topology (users → client → load balancer → servers) → Run it → Inspect results (latency, queues, RAM, failures). That’s the core idea: simulate your async system before it exists in production. 🔹 What AsyncFlow Does? • Scenario-driven simulations → inject network RTT, jitter, outages, or resource caps. • Event-loop aware servers → CPU块，RAM保持分配，I/O产量像真实的异步框架一样。 •网络边缘→型号延迟分布，尖峰或退化链接。 •box→p95/p99延迟，plyptime→posock 什么是动态（流量峰值，服务器崩溃，链接降解）。 🔹🔹是谁是？  repo： https://github.com/asyncflow-sim/asyncflow    我会在：               •哪些指标最能为您提供最大的帮助？ •文档和示例上有任何OSS提示。 谢谢，很高兴回答问题。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/dired_remove8731     [link]        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n3iknv/scenariodriven_simulator_for_async_backends/</guid>
      <pubDate>Fri, 29 Aug 2025 20:38:19 GMT</pubDate>
    </item>
    <item>
      <title>Java项目贡献</title>
      <link>https://www.reddit.com/r/opensource/comments/1n3ckjy/java_project_to_contribute/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿，大家我是Prakash，是Oracle的软件开发人员，拥有约2年的经验。我非常有兴趣为OpenSearch做出贡献，并想从一个既适合初学者友好又提供良好学习机会的项目/模块开始。 我最初尝试潜入Main  OpenSearch  repo，但发现它有点不知所措。您能否建议一些良好的子项目，插件或新贡献者通常开始并可以有效学习的领域？ 我的首要任务是为基于 Java的项目做出贡献。   &lt;！ -  sc_on- sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/delperate_ability655     [link]    32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n3ckjy/java_project_to_contribute/</guid>
      <pubDate>Fri, 29 Aug 2025 16:46:49 GMT</pubDate>
    </item>
    </channel>
</rss>