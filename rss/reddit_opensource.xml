<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：Opensource</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>所有与开源相关的所有内容的子reddit（在此上下文中，我们在此处删除开源的定义http://en.wikipedia.org/wiki/open_source）</description>
    <lastBuildDate>Tue, 29 Jul 2025 18:27:33 GMT</lastBuildDate>
    <item>
      <title>我已经构建了一个开源Python软件测试MCP服务器，我需要您的帮助。</title>
      <link>https://www.reddit.com/r/opensource/comments/1mcizd7/ive_build_an_opensource_python_software_testing/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我是构建开源项目的新手，但我只是要潜水（希望大家都可以帮助我浏览空间）。  我长期以来一直对LLMS执行软件测试或识别错误的能力持怀疑态度，我想构建工具来帮助那些使用LLMS编写代码的人进行更有效的软件测试。我的愿景是为LLMS配备能够智能利用传统软件测试工具的能力；因此，我已经开发了MCP服务器。  这是我的开放式项目的链接 -   https://github.com/jazzberry-azzberry-aiz/jazzberry-aftware-tware-testware-testing-testesting-mcp   -        我需要很多帮助。就像我无法表达我在开源社区中在维护这样的项目方面所做的事情一样。您可以给我的任何建议或技巧都是巨大的。  我既紧张又兴奋地看到这种情况的去向。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/perigh-aardvark9850     [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mcizd7/ive_build_an_opensource_python_software_testing/</guid>
      <pubDate>Tue, 29 Jul 2025 18:13:54 GMT</pubDate>
    </item>
    <item>
      <title>有人尝试过Camel AI的新开源多代理劳动力吗？</title>
      <link>https://www.reddit.com/r/opensource/comments/1mchh2a/anyone_tried_camel_ais_new_opensource_multiagent/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  刚刚看到骆驼AI社区发布了一种称为特征的东西，这是一个开源的多代理劳动力框架，可以在本地运行。 ，而不是依靠单个代理，它可以让您可以创建多个专用代理，可以在复杂的任务中运行复杂的任务。每个代理都可以在您自己的设备上处理代码执行，Web搜索，文档处理或终端操作之类的内容。 它看起来像是通用药物的更透明，更模块化的替代品，并有更多的自定义和人类控制的空间。 有人在这里尝试过吗？好奇设置有多容易以及它是否足够灵活，对于真实的工作流程。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/ok_pass_2818      [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mchh2a/anyone_tried_camel_ais_new_opensource_multiagent/</guid>
      <pubDate>Tue, 29 Jul 2025 17:18:47 GMT</pubDate>
    </item>
    <item>
      <title>要学习Kotlin，我构建了一个在服务器和客户端上都可以使用的深层电子邮件验证库。它只是击中了v1.0.0，我很喜欢您的反馈。</title>
      <link>https://www.reddit.com/r/opensource/comments/1mchawk/to_learn_kotlin_i_built_a_deep_email_validation/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/mbalatsko     [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mchawk/to_learn_kotlin_i_built_a_deep_email_validation/</guid>
      <pubDate>Tue, 29 Jul 2025 17:12:41 GMT</pubDate>
    </item>
    <item>
      <title>DIY AI劳动力？刚刚找到了一个开源工具，可让您在桌面上运行多个AI代理</title>
      <link>https://www.reddit.com/r/opensource/comments/1mch7ro/diy_ai_workforce_just_found_an_opensource_tool/</link>
      <description><![CDATA[My friend is a contributor in CAMEL AI, he told me that they just launched something called Eigent, an open-source multi-agent system designed to automate workflows on your desktop. It breaks down tasks into subtasks, assigns them to different agents, and runs them in parallel - locally.没有云，没有API杂耍，只是一个轻巧的系统来构建您自己的“ AI团队”。“  感觉就像是转向更加自定义，离线首先AI工具的开始。好奇地看到人们如何使用（或扩展）。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/dustwest1425     [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mch7ro/diy_ai_workforce_just_found_an_opensource_tool/</guid>
      <pubDate>Tue, 29 Jul 2025 17:09:34 GMT</pubDate>
    </item>
    <item>
      <title>开源AI图像检测器与AI Waifus作战</title>
      <link>https://www.reddit.com/r/opensource/comments/1mcfo9s/opensource_ai_image_detector_to_fight_the_ai/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嗨，大家好，在过去的几个月中，AI生成的图像变得非常好，现在主要与人眼无法区分。因此，我已经训练并正在开源AI图像检测模型，该模型击败了SOTA商业检测器。 您可以在此处找到所有信息和演示：较小的版本（〜200m参数）甚至可以在手机上的浏览器中运行（请参阅演示）！我还使用javascript/node和python代码添加了本地运行/通过我的API（免费但限制）的代码。 分类精度：sighengine.com似乎是最好的商业解决方案（ https://arxiv.org/pdf/2404.14581 ）纸，他们也在网站上引用。当然，他们樱桃挑选了结果，并要求98.3％的精度，而仅在整个数据集中获得82.8％（仍然令人印象深刻）。我已经下载了论文中使用的数据集并针对它测试了我的模型。回购代码中包括用于运行测试的代码以及数据集的可用版本（原始版本是从OneDrive下载的很大痛苦）。我发布的最佳模型可以实现83.2％的精度，但我认为这仍然可以改进（未来几天将发布更好的型号）。 我很高兴看到您可以为此构建什么！如果您有任何很酷的想法，请发表评论并享用：）  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/e3ntity      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mcfo9s/opensource_ai_image_detector_to_fight_the_ai/</guid>
      <pubDate>Tue, 29 Jul 2025 16:12:59 GMT</pubDate>
    </item>
    <item>
      <title>现在比以往任何时候都容易加密</title>
      <link>https://www.reddit.com/r/opensource/comments/1mcez0h/encryption_now_easy_than_ever/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  如果您正在寻找一种简单而可靠的方式来加密您的数据，例如照片，视频，pdfs，excel电子表格，甚至.rar文件格式 我建议您在excryptor上进行python prokection  expry  ，这是一个最佳的python provect  网站：   https://github.com/logand.com/logand166/cencryptor/encryptor/tree/tree/tree/v2.0      提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1mcez0h/encryption_now_easy_easy_than_ever/”&gt; [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mcez0h/encryption_now_easy_than_ever/</guid>
      <pubDate>Tue, 29 Jul 2025 15:47:02 GMT</pubDate>
    </item>
    <item>
      <title>我建立了一个营销辅助代理，因为我需要帮助，并且无法雇用一个</title>
      <link>https://www.reddit.com/r/opensource/comments/1mcexd1/i_built_a_marketing_assistent_agent_cause_i/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我在一个小型AI创业公司中工作，就像许多早期团队一样，我们没有专职营销人员。这意味着我最终写了从博客文章和启动电子邮件到社交副本和网站更新的所有内容。 GPT工具有所帮助，但我厌倦了重写相同的东西，试图将所有内容保持在品牌上。内存有限，大多数工具要么太通用，要么太贵了。 因此，我最终建立了一个小型的营销助理代理，以使自己更容易，并认为这对他人也可能有用。它基于 mcp-agent，，它使您可以连接不同的MCP服务器和工具并构建可构成的代理工作流程。  助手的作用：  记住您品牌的语气，措辞和结构 从文件中拉出过去的内容（BIOS，帖子，产品副本） 生成并从 中 从 How it works (MCP servers used):  Memory: Stores tone, phrasing, and brand examples for reuse Filesystem: Reads local content (e.g. bios, blog posts) for context Fetch: Pulls external web content to supplement inputs markitdown: Cleans and formats messy input for better LLM处理 评估器：检查输出是否匹配品牌音调和质量，如果不是，它会迭代，直到它  计划计划集成概念MCP服务器，以便它可以读取营销日历并根据即将出现的内容来建议内容的想法。 如果您不需要整理，或者只需依靠一个依据，或者只需依次一致。会喜欢反馈或关于下一步要添加的内容的想法。  repo： https://github.com/lastmile-ai/mcp-agent/tree/main/main/examples/usecases/mcp_marketing_assistant_agent_agent    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1mcexd1/i_built_a_marketing_assistent_agent_agent_cause_i/”&gt; [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mcexd1/i_built_a_marketing_assistent_agent_cause_i/</guid>
      <pubDate>Tue, 29 Jul 2025 15:45:20 GMT</pubDate>
    </item>
    <item>
      <title>开源AI驱动的RPG基于文本的引擎</title>
      <link>https://www.reddit.com/r/opensource/comments/1mcepjj/open_source_ai_powered_rpg_text_based_engine/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  构建基于AI的基于AI的RPG引擎并寻求帮助/反馈。到目前为止href =“ https://github.com/humbrol2/ai-rpg-agent”&gt; https://github.com/humbrol2/ai-rpg-agent 提交由＆＃32; /u/u/humbrol2     [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mcepjj/open_source_ai_powered_rpg_text_based_engine/</guid>
      <pubDate>Tue, 29 Jul 2025 15:36:51 GMT</pubDate>
    </item>
    <item>
      <title>我已经构建了开源轨道力学模拟引擎，我需要您的反馈。</title>
      <link>https://www.reddit.com/r/opensource/comments/1mcdc0b/ive_built_an_opensource_orbital_mechanics/</link>
      <description><![CDATA[I&#39;m a 17-year-old high schooler from Vietnam, and for the past year I&#39;ve been building what I&#39;m proud to call my life&#39;s work: an open-source, high-performance, real-time spaceflight simulation engine called Astrocelerate. It’s written from scratch in C++ and Vulkan with modularity, visual fidelity, and engineering precision as core principles. MVP发行版具有基于CPU的轨道物理，基于GPU的渲染以及对基本2体物理学的支持，所有这些都是实时的，交互式的，并且可以最大程度地减少阻止主线程。&lt; /p&gt; 我在Github上发布了第一个公共发行版： https://github.com/ButteredFire/Astrocelerate/releases/tag/v0.1.0-alpha To anyone who decides to even try my engine in the first place, first总的来说，我非常感谢您所做的。其次，我想要您的残酷诚实，可操作的反馈。工程师，业余爱好者，开发人员，如果您尝试一下并告诉我什么是破碎，缺失，混乱或有前途的东西，这对我来说意味着世界。 您完成测试引擎时，请在此处给予反馈： https://forms.gle/1dptfa5lrjgdqnyk6    我会在阅读所有评论，br/&gt;的情况下，我会在 p.    注意！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/nick_zacker     [link]       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mcdc0b/ive_built_an_opensource_orbital_mechanics/</guid>
      <pubDate>Tue, 29 Jul 2025 14:44:23 GMT</pubDate>
    </item>
    <item>
      <title>Termix 1.0发布！它将Confix和Tunnelix结合到用于服务器管理的一个荣耀工具（SSH终端，反向SSH隧道和SSH配置编辑）！</title>
      <link>https://www.reddit.com/r/opensource/comments/1mcc2xi/termix_10_release_it_combines_confix_and_tunnelix/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   repo： https：//github.com/lukegus/termix/termix/termix   href =“ https://docs.termix.site/docs”&gt; https://docs.termix.site.site/docs   你好！今天，我很高兴地宣布Termix版本1.0的发行版，该版本将我的几种工具结合在一起。 Termix is a clientless web-based server management platform with SSH terminal, tunneling, and file editing capabilities. Features:  SSH Terminal Access - Full-featured terminal with split-screen support (up to 4 panels) and tab system SSH Tunnel Management - Create and manage SSH tunnels with automatic reconnection and health monitoring Remote Config编辑器 - 用语法突出显示和文件管理直接在远程服务器上编辑文件  ssh主机管理器 - 使用标签和文件夹和文件夹 用户身份验证 - 用管理员控制   现代UI-与Recess   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/vizekarma     [link]   [commist]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mcc2xi/termix_10_release_it_combines_confix_and_tunnelix/</guid>
      <pubDate>Tue, 29 Jul 2025 13:54:48 GMT</pubDate>
    </item>
    <item>
      <title>Newelle 1.0发布：迷你应用程序</title>
      <link>https://www.reddit.com/r/opensource/comments/1mcbrtm/newelle_10_released_mini_apps/</link>
      <description><![CDATA[        &lt;！ -  sc_off-&gt;   newelle 1.0.0已发布！该AI助理的巨大发布。 📱迷你应用程序支持！现在，扩展名可以在侧边栏上显示自定义的迷你应用程序 🌐添加了集成的浏览器迷你应用程序：直接在newelle中浏览网络并附上网页 📁改进了整合的文件管理器，支持多个文件操作           intimation File eDitor：editial editor and Codeblock semitial neweli in neweli in newelly in newell/p P.直接在newelle中的终端 💬可编程提示：在条件和随机字符串的提示中添加动态内容 ✍️ ✍️添加了手动编辑聊天名称           直接在app  ✨聊天上的新动画 在flathub上获取新动画：  https://github.com/qwersyk/qwersyk/newelle/releases/releases/tag/tag/tag/1.0.0.0.0.0.0.0.0.0.0.0.0.0.0 提交由＆＃32; /u/u/itzsilver_yt      [注释]           ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mcbrtm/newelle_10_released_mini_apps/</guid>
      <pubDate>Tue, 29 Jul 2025 13:42:05 GMT</pubDate>
    </item>
    <item>
      <title>小实验：从GPX文件生成Google Maps链接</title>
      <link>https://www.reddit.com/r/opensource/comments/1mc9gty/small_experiment_generating_google_maps_links/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好！我最近需要与一些不使用Komoot或Strava这样的应用程序的朋友分享一条自行车路线。目的是让他们仅使用Google Maps轻松地遵循路径 - 不需要额外的应用程序或所需的帐户。 因此，只是为了娱乐，我整理了一个小脚本，该脚本将拿一个GPX文件，并生成带有10个路点的Google Maps链接（这是极限映射允许的允许）。它选择了沿途的代表点，以使其简单。 该应用在意大利语中（我供个人使用），但是即使您不会说语言，它也应该是清晰可用的。 它不是完美的，但是它可以奏效，但是它可以构建一个有趣的辅助项目。触发垃圾邮件过滤器）。对于类似工具，可能是一个有用的起点！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1mc9gty/small_experiment_generating_google_maps_links/”&gt; [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mc9gty/small_experiment_generating_google_maps_links/</guid>
      <pubDate>Tue, 29 Jul 2025 11:58:56 GMT</pubDate>
    </item>
    <item>
      <title>夜间自动关闭资源（DEV/QA）自动化的任何开源/专用工具</title>
      <link>https://www.reddit.com/r/opensource/comments/1mc7v4n/any_opensourceproprietory_tool_to_automate/</link>
      <description><![CDATA[＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/aws/comments/1mc6grl/any_opensourceproprietory_tool_tool_to_automate/”&gt; [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mc7v4n/any_opensourceproprietory_tool_to_automate/</guid>
      <pubDate>Tue, 29 Jul 2025 10:30:28 GMT</pubDate>
    </item>
    <item>
      <title>邮寄电子邮件的轻网客户端</title>
      <link>https://www.reddit.com/r/opensource/comments/1mc70mu/light_web_client_for_maildir_emails/</link>
      <description><![CDATA[       &lt;！ -  sc_off-&gt;  我刚刚在尝试找到适合我需求的一个非常轻巧的电子邮件客户端。每当检测到运动时，我想检查一下我的摄像机发送到特定地址的电子邮件，并能够快速浏览它们。这是我想到的 - 开源，包括屏幕截图。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/pergament_io       [注释]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mc70mu/light_web_client_for_maildir_emails/</guid>
      <pubDate>Tue, 29 Jul 2025 09:37:09 GMT</pubDate>
    </item>
    <item>
      <title>我如何花13个月的时间重写一个项目，以及为什么值得</title>
      <link>https://www.reddit.com/r/opensource/comments/1mc62yy/how_i_spent_13_months_rewriting_a_project_and_why/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在2024年底，Moonshine V3发布了 - 一个管理面板，是作为Laravel Projects的自定义管理员开始的，并成长为框架-Agnoftic解决方案。在这篇文章中，我分享了我在一个大型开源项目上工作的经验。我敢肯定，您还可以分享开源的经验。 ，Moonshine。简短的进化历史记录：   v1：创建了一个受Nova文档，遗产代码启发的管理面板“一起抛弃”，“   v2：脱离雄辩的贡献者团队，   v3：laravel-foreve ofers forne fornavel of to laravel，fornavel fore nover of to laravel forne of toters of to p&gt; i          一年多了，并完全重写了平台。以下是几个关键方向：✅技术进化：phpstan从1级到6，添加了突变测试✅架构清洁度：带有单独软件包（AssetManager，Menumanager，ui等）的monorepo。  痛苦的教训和意外发现：&lt; /strong&gt; ❌不是每个人都想参加开源。当定期贡献者开始出现时，我希望在2024年底之前由100多个开发人员组成的团队，但实际上我主要是独自工作的。❌良好的文档比代码更难。我自己写了90％的月光文档（而且我认为它比Laravel的文档更大！），尽管我希望社区能够处理这一点。❌❌不要在有限的时间内设定过度雄心勃勃的目标。发行前的最后6个月，我生活了这个项目：跌落并醒来时，我的脑海中醒了，最终不得不推迟发布并因截止日期而削减计划的功能。  在我的经验中，对开源的效果很好：      您需要一个项目想法。没有人会花时间在一个无用的项目上。但是，即使这个想法是好的，也要做好准备，即人们大多只需使用该项目，只有在真正需要实施某些东西的情况下才真正参与开发。准备单独进行项目。 快速回应问题并在聊天中提供帮助。社区成长的基础。开源中最重要的是让社区确信项目的支持和开发不会停止，可以信任它，在错误和社区建设方面有工作。 支持。捐款（尽管显然还不足以部分支付人工成本），对主要资源的评论，甚至Github Stars也非常有动力继续工作。开源保持免费，如果需要经济支持，通常是通过咨询和基于该项目的其他产品实现的。  ，但所有困难都使我受益。这并不容易，但值得。我将重点介绍要点：  专业成长，无论是个人的还是为组织技能做出贡献的人。定期会议，项目任务，聊天支持，商品，实时流 - 所有这些都需要组织和监控以执行。如果有兴趣，我可以写一篇有关此主题的其他文章。  对于那些尚不熟悉该项目的人： github：和建议。还要讨论您在开源中工作的经验。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1mc62yy/how_i_i_spent_13_months_months_eredriting_a_project_a_project_project_and_and_and_why/”&gt; [links]        [注释]       ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mc62yy/how_i_spent_13_months_rewriting_a_project_and_why/</guid>
      <pubDate>Tue, 29 Jul 2025 08:36:27 GMT</pubDate>
    </item>
    </channel>
</rss>