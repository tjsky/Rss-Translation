<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：Opensource</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>所有与开源相关的所有内容的子reddit（在此上下文中，我们在此处删除开源的定义http://en.wikipedia.org/wiki/open_source）</description>
    <lastBuildDate>Thu, 25 Sep 2025 15:20:23 GMT</lastBuildDate>
    <item>
      <title>开源的，分散的操作系统，又称世界计算机。</title>
      <link>https://www.reddit.com/r/opensource/comments/1nq96tr/an_opensourced_decentralized_operating_system_aka/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  链接只是一个代理，显示了普通互联网用户的内容。任何人还可以下载实际的客户端以绕过需要使用代理。操作系统需要几秒钟才能启动。  OS的外观图像：   https://preview.redd.it/umm-decentralized-operating-systems-world-computer-v0-ztiyop5xobpf1.png ？width = 1080＆amp; crop = smart＆amp; auto = webp＆amp; s = 37831CA1B2E057488618340B357489AD603AFF95     &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://anttp.antnest.site/2bf0fe581569230260A9123A7853D1B42ECEE71EC13B06E582CB82CB8AF079C29C294/   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nq96tr/an_opensourced_decentralized_operating_system_aka/</guid>
      <pubDate>Thu, 25 Sep 2025 15:03:55 GMT</pubDate>
    </item>
    <item>
      <title>在Blogr中介绍新闻通讯支持 - 一个由生锈的静态站点生成器</title>
      <link>https://www.reddit.com/r/opensource/comments/1nq91la/introducing_newsletter_support_in_blogr_a/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我很高兴分享 blogr ，一种内置的开源静态站点生成器，现在包括综合的新闻通讯功能。  blogr是一种快速，轻巧的静态站点生成器，专门为博客设计。它提供了基于Markdown的内容创建，具有实时预览的内置终端编辑器以及在GitHub页面上的一定命令部署。您可以在 https://blog.gokuls.in/ 上看到它，完全是由Blogr构建用于管理订户请求的交互式批准界面   从流行服务（MailChimp，ConvertKit，替代等）导入/导出外部集成的REST API  发送    可靠的交付     smtp与速率限制的集成 测试电子邮件功能 与进度跟踪发送的批次发送      关键命令键&gt;          Setup Newsletter functionality与您现有的Blogr博客无缝集成。只需在 blogr.toml 与IMAP/SMTP设置中配置中启用它，您就可以开始收集订阅者。 该系统通过监视订阅请求的专用电子邮件地址，提供批准接口，然后使用SMTP配置来监视                  https://github.com/bahdotsh/blogr     &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/new-blacksmith8524      [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nq91la/introducing_newsletter_support_in_blogr_a/</guid>
      <pubDate>Thu, 25 Sep 2025 14:58:36 GMT</pubDate>
    </item>
    <item>
      <title>Playlister  - 开源Spotify Vibe Playlist Builder</title>
      <link>https://www.reddit.com/r/opensource/comments/1nq8mmv/playlister_an_open_source_spotify_vibe_playlist/</link>
      <description><![CDATA[    src =“ https://external-preview.redd.it/dwjr9wmneaku2wjhg-39f78qjjkcngwmm5zk6t2wokc.jpeg ？ title =“ Playlister  - 开源Spotify Vibe Playlist Builder”/&gt;    &lt;！&lt;！ -  sc_off-&gt;    hiya team！ - 我为Spotify的Vibe播放列表经理🎶它使您可以快速添加 /删除当前的播放曲目中的多个播放列表，以便您可以保持流程凝聚力，而不是依靠混乱的混乱。 href =“ https://dethbird.com/playlister-an-open-source-source-source-source-vibe-vibe-playlist-builder/”&gt; https://dethbird.com/dethbird.com/playlister-an-open-an-open-source-spotify-spotify-spotify-spotify-spotify--vibe-vibe-vibe-vibe-vibe-vibe-vibe-playlist-builder/ href =“ https://github.com/dethbird/playlister”&gt; https://github.com/dethbird/playlister    喜欢Spotify Power with Power +Devs。    &lt;！ -  sc_on--&gt;＆sc_on-&gt;＆＃32;提交由＆＃32; /u/u/dethbird      [注释]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nq8mmv/playlister_an_open_source_spotify_vibe_playlist/</guid>
      <pubDate>Thu, 25 Sep 2025 14:42:18 GMT</pubDate>
    </item>
    <item>
      <title>我正在开发GLIF，因为我还没有找到有效的开源替代方案</title>
      <link>https://www.reddit.com/r/opensource/comments/1nq8lzy/im_developing_glif_because_i_havent_found_valid/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿，伙计！ 我很高兴分享我的最新侧面项目， glif ，一个简单而快速的在线QR QR代码生成器。 我真的开始开发它，因为我真的找不到满足我的需求，所以我可以满足我的需求，所以我决定构建一个我自己的我自己！ （因为我是软件开发人员🙃）  引擎盖下的内容：      框架：  nuxt 4            生成标准QR码。  下一步是什么？  下一个主要步骤是集成 firebase 以解锁一些非常酷的新功能！我现在不想破坏太多，但我们只想说，它将大大扩展您可以使用生成的代码来做的事情。敬请关注！ 🔥 我很想听听您对技术堆栈的想法以及对该概念的任何初步反馈。作为一个开源项目，都非常欢迎任何贡献或想法！   repo链接：  https://github.com/github.com/domet99/glif         Cheers！ 🍻  ps： hacktoberfest 即将来临，因此我们欢迎每个 pr 现在都比以往任何时候都更加重要！ ✨  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/toofast4carramba     &lt;a href =“ https://www.reddit.com/r/opensource/comments/1nq8lzy/im_developing_glif_glif_because_i_i_havent_found_valid_valid/]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nq8lzy/im_developing_glif_because_i_havent_found_valid/</guid>
      <pubDate>Thu, 25 Sep 2025 14:41:38 GMT</pubDate>
    </item>
    <item>
      <title>TestLemon现在是开源 -  API测试自动化工具</title>
      <link>https://www.reddit.com/r/opensource/comments/1nq5oz6/testlemon_is_now_open_source_api_test_automation/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好！ 我很高兴分享经过1。5年的开发，TestLemon现在是开源的。引擎，Docker Image，MCP Server和GitHub操作的所有代码在我们的存储库中公开可用： https://github.com/testlemon   href =“ https://app.testlemon.com/”&gt; https://app.testlemon.com/     TestLemon可帮助您自动化API测试。它支持测试响应状态代码，响应时间和身体内容而无需编码。 You can also do test chaining, manage variables and secrets, and—recently added—automatically generate tests from an OpenAPI specification. Generate tests from OpenAPI spec example:  docker run --rm itbusina/testlemon -c https://api.apis.guru/v2/openapi.yaml  Run测试集合的测试： Docker Run -rm itbusina/testlemon -c; $（＆lt; collection.yaml）;   您可以在文档中找到有关测试收集，验证器和集成的完整详细信息： https://docs.testlemon.com/ 反馈非常欢迎。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/kbahdanovich     [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nq5oz6/testlemon_is_now_open_source_api_test_automation/</guid>
      <pubDate>Thu, 25 Sep 2025 12:40:54 GMT</pubDate>
    </item>
    <item>
      <title>Interactive React应用程序以设计自定义的网格图并使用探路算法可视化解决方案。</title>
      <link>https://www.reddit.com/r/opensource/comments/1nq59sm/interactive_react_app_to_design_custom_grid_maps/</link>
      <description><![CDATA[       &lt;！ -  sc_off-&gt;  我很想获得反馈和建议  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/clear_meringue3464       [注释]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nq59sm/interactive_react_app_to_design_custom_grid_maps/</guid>
      <pubDate>Thu, 25 Sep 2025 12:21:37 GMT</pubDate>
    </item>
    <item>
      <title>Swetrix V4 [OSS Google Analytics（分析替代）]  - 新UI，OIDC，项目共享等等！</title>
      <link>https://www.reddit.com/r/opensource/comments/1nq375w/swetrix_v4_oss_google_analytics_alternative_new/</link>
      <description><![CDATA[    src =“ https://external-preview.redd.it/3_iwyyr8zgbkjeygmfs4iing42usrye5a897grvzghk.png？宽度= 640＆amp; crop = smart＆amp; auto = webp＆amp＆amp; s = 8E731F153E3198978C52BC7BA4999AA67CED41336“ title =“ Swetrix V4 [OSS Google Analytics（分析替代）]  - 新UI，OIDC，项目共享等等！” /&gt;    &lt;！ -  sc_off-&gt;  大家好，今天，Swetrix CE V4已发布，它是一种开源和隐私的Google-fort google-First Analytics（分析方法），这是我自2021年以来一直在构建的。 我已经花在了这一年的发行版中，并在我们的发行版中工作，并且我们的整体效率很高，这是我们的一项最大的一部分。它包括完整的UI重新设计，可自定义的OIDC/SSO支持，帐户系统＆amp;网站共享，主机跟踪等等！ 总体而言，Swetrix的关键特征是：  📈流量分析，带有高级统计数据，例如城市级别分析，自定义事件，用户流量        the Ortive      li&gt; li&gt; li&gt; li&gt; li&gt; li&gt; li&gt; li&gt; li&gt; li&gt; li&gt;的网站速度 元数据和堆栈痕迹（如哨兵，但带有简单的UI） 🫂项目共享，团队管理，API访问 ⏱️实时仪表板   这个项目可以很容易地与Docker一起进行自我设计，我试图将其设计为直觉和简单！ 网站 - ＆GT;  https://swetrix.com    github repo-＆gt;  https://github.com/swetrix/swetrix/swetrix     &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/sensiduct     [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nq375w/swetrix_v4_oss_google_analytics_alternative_new/</guid>
      <pubDate>Thu, 25 Sep 2025 10:32:00 GMT</pubDate>
    </item>
    <item>
      <title>proxmox-gitops  - “一切 - 代码”容器自动化</title>
      <link>https://www.reddit.com/r/opensource/comments/1nq36mu/proxmoxgitops_everythingascode_container/</link>
      <description><![CDATA[         &lt;！ -  sc_off-&gt;    hello  我想通过介绍我的Proxmox-Gitops，通过一般的整个Homelab来介绍我的Project proxmox-gitops，themelt of the homelab abor homelab abor a homel abiors a soperuct 人工制品。这是一个自托管平台，它使用递归gitops模型来提供，配置和管理自身。 它以来自本地（相同的）Docker环境的单个命令开始，该命令将控制平面（Gitea，Act Rainner）恢复到Proxmox ve上。从那时起，系统是自给自足的：您将代码推到其自己的gitea实例，然后将管道递归配置并将所需状态配置在PVE LXC容器上。  https://github.com/stevius10/Proxmox-GitOps   Recursive Self-Management: The most important concept is that the CI/CD pipeline runs inside the containers it manages.这使整个系统可再现并防止配置漂移，因为它可以单独从存储库中引导。   git作为真理的单一来源： git monorepo代表整个Homelab的当前所需状态。更新，回滚和备份是通过标准GIT操作（ commit ，还原， clone ）。    one-command bootstrap： ）。这启动了一个本地的Docker容器，使用Proxmox API部署核心，并在新的Gitea实例中创建拉动请求。合并它会触发第一个递归部署  惯例可扩展：要添加新服务，您可以复制现有容器定义并应用您的配置（例如，简单的Chef/cinc/cinc Cookbook），并提交更改。管道处理其余的。  该项目是为Proxmox VE 8.4-9.0设计的，使用Debian 13每默认值13。我很想听听您对Homelab容器管理方法和递归体系结构的想法。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/stevius10       [注释]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nq36mu/proxmoxgitops_everythingascode_container/</guid>
      <pubDate>Thu, 25 Sep 2025 10:31:13 GMT</pubDate>
    </item>
    <item>
      <title>开源项目ESP32公交海盗 - 一种说明每个协议的硬件黑客工具</title>
      <link>https://www.reddit.com/r/opensource/comments/1npz7ac/open_source_project_esp32_bus_pirate_a_hardware/</link>
      <description><![CDATA[       &lt;！&lt;！ -  sc_off-&gt;       ESP32-bus-pirate ：： https://github.com/geo-tp/ep32-bus-pirate       目前，它支持各种协议和设备，包括I²C，SPI，UART，1-WIRE，CAN，RISRARED，SMARTCARDS等。它还与无线电协议进行通信，例如Subghz，RFID，RF24，WiFi，蓝牙。 与现有解决方案相比，重点是：    可访问性  - 在廉价的ESP32-S3硬件上运行，   。   可扩展性  - 开源和模块化，使添加新的协议支持变得易于添加。  我相信这对硬件黑客，安全研究人员和业余爱好者来说可能是有用的。提交由＆＃32; /u/u/u/geo_tp      [注释]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1npz7ac/open_source_project_esp32_bus_pirate_a_hardware/</guid>
      <pubDate>Thu, 25 Sep 2025 06:12:27 GMT</pubDate>
    </item>
    <item>
      <title>分享一些我发现的随机跨平台开源软件</title>
      <link>https://www.reddit.com/r/opensource/comments/1npwm3f/sharing_some_random_cross_platform_open_source/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/duse_bat_7662     [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1npwm3f/sharing_some_random_cross_platform_open_source/</guid>
      <pubDate>Thu, 25 Sep 2025 03:41:31 GMT</pubDate>
    </item>
    <item>
      <title>评估Apache Pulsar Pros，Cons和许可证（我的XP用于数据摄入用例）</title>
      <link>https://www.reddit.com/r/opensource/comments/1npvppn/evaluating_apache_pulsar_pros_cons_and_license_my/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   背景：我已经成功使用了postgres作为事件流式用例，缩放到100k事件/秒。它为我们的用例提供了最佳的性能/成本比率（从各种应用程序/网站收集客户事件数据，以及到达数百种产品/营销/业务工具API和仓库的路线）， 我喜欢Apache Pulsar：    不再有单一的失败点（跨读书的数据复制数据）：数据在两个书中都在两个书中复制了数据。这使我们在数据丢失方面变得更加可靠。  租户隔离非常好，自动负载平衡效果很好：到目前为止，我们迄今尚未经历过影响他人的健谈租户。我们使用相同的集群来摄取所有客户的数据（每个地区，一个地区，一个在欧盟中）。多材料以及群集自动缩放使我们能够包含成本。  维护更容易：不再单一的主约束了，这简化了许多Infra维护（想象一下必须将邮政pod移动到另一个EC2节点中 StreamNative licensing costs were significant Network costs considerably increased with multi-AZ + replication Learning curve was steeper than expected, also it was more complex to debug  Would love to hear your experience with Pulsar or any other Open Source alternative.请分享您对我用例的方法/挑战的意见或见解。   P.S。我坚信要保持简单，使用可信赖和可靠的工具在运行最有光泽的工具之后。同时，我愿意积极尝试使用新工具，将其评估为我的用例（强烈关注性能/成本）。我希望这种对话能够帮助社区中的其他人作为评估开源技术和许可的学习机会，随时问我任何事情。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/ephemeral404     [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1npvppn/evaluating_apache_pulsar_pros_cons_and_license_my/</guid>
      <pubDate>Thu, 25 Sep 2025 02:54:17 GMT</pubDate>
    </item>
    <item>
      <title>Echo Music版本1.4现在已经发布了！</title>
      <link>https://www.reddit.com/r/opensource/comments/1nptitl/echo_music_version_14_is_out_now/</link>
      <description><![CDATA[       This update brings a cleaner look, more customization, and some long-awaited fixes. What’s New •Material You Theme → Enable it in Settings → Visual •Music Transfer → Move your songs from other services into Echo Music in Settings → Account → Music转移 •最小单行器选项→从设置中隐藏上一个曲目按钮→Visual（默认情况下） 改进•重新设计的llibrary部分为清洁度，更温和的外观 错误修复了  bug修复了该应用程序或崩溃    press   frone  。 href =“ https://github.com/iad1tya/echo-music”&gt; https://github.com/iad1tya/echo-music      &lt;！ -  sc_on-提交由＆＃32; /u/u/iad1tya      [注释]            ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nptitl/echo_music_version_14_is_out_now/</guid>
      <pubDate>Thu, 25 Sep 2025 01:07:55 GMT</pubDate>
    </item>
    <item>
      <title>音频编辑器</title>
      <link>https://www.reddit.com/r/opensource/comments/1nprgyn/audio_editor/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我正在为音频编辑器提出一些建议，以增强我需要用于法院的呼叫。我尝试了几次，但我不喜欢它，或者它不让我上传音频剪辑。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/cb_801_ut      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nprgyn/audio_editor/</guid>
      <pubDate>Wed, 24 Sep 2025 23:30:55 GMT</pubDate>
    </item>
    <item>
      <title>联邦GIT服务Forgeed发生了什么？</title>
      <link>https://www.reddit.com/r/opensource/comments/1npqk6v/what_happened_to_forgefed_a_federated_git_service/</link>
      <description><![CDATA[While Git protocol is distributed, it is not federated, i.e., if you self-host a Git platform like GitLab, you cannot federate and interact with other instances. I believe that this would help the open source community immensely, since right now it gets occasional hurdles because some repos get taken down by certain countries&#39; laws, like YouTube-dl,绕行付费墙等，或github和gitlab帐户的毯子暂停从伊朗IP访问了网站的帐户，这些网站会影响整个人而不是目标。 旁路薪水旁的薪水是俄罗斯管理的git服务，我自然而然地拥有一定数量的贡献者，我相信我会求助于 pl&gt; pl&gt; pp     我只发现福特德（Forgeded）在开发开始后没有得到太多的吸引力。为什么？是否有这样一个项目获得吸引力的前景？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/utiminati   href =“ https://www.reddit.com/r/opensource/comments/1npqk6v/what_happened_to_to_forgefed_a_federated_git_service/”&gt; [link]  &lt;a href =“ https://www.reddit.com/r/opensource/comments/1npqk6v/what_happened_to_forgefed_a_federated_git_service/]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1npqk6v/what_happened_to_forgefed_a_federated_git_service/</guid>
      <pubDate>Wed, 24 Sep 2025 22:50:06 GMT</pubDate>
    </item>
    <item>
      <title>我建立了一个开源LLM代理，该代理可以控制您的操作系统而无需计算机视觉</title>
      <link>https://www.reddit.com/r/opensource/comments/1nplopc/i_built_an_opensource_llm_agent_that_controls/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;     github链接我研究了自动化和建立的raya，它是一种AI raya，它是一种AI代理，它是一种生活系统，尽管它的基本形式是 github链接已连接  &lt;！&lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/ibz04     [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nplopc/i_built_an_opensource_llm_agent_that_controls/</guid>
      <pubDate>Wed, 24 Sep 2025 19:33:33 GMT</pubDate>
    </item>
    </channel>
</rss>