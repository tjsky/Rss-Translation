<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：Opensource</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>所有与开源相关的所有内容的子reddit（在此上下文中，我们在此处删除开源的定义http://en.wikipedia.org/wiki/open_source）</description>
    <lastBuildDate>Mon, 28 Jul 2025 15:21:58 GMT</lastBuildDate>
    <item>
      <title>FOSS替代框架电视</title>
      <link>https://www.reddit.com/r/opensource/comments/1mbj39k/foss_alternative_to_frame_tv/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嗨，所以我喜欢三星框架电视的概念；如果您不知道，这是一台非常平坦的哑光电视，可以在待机中显示静态图像（“艺术模式”），因此它看起来像是墙上的一件艺术品。当然，唯一的问题是三星框架，您将其锁定在他们的固件中。另外，您需要付费订阅才能访问“他们”展示艺术图书馆。我读到，您可以从技术上使用艺术模式而无需订阅艺术模式，但显然看起来更糟（并且毁了哑光的“幻想”。我知道市场上还有其他哑光电视，例如TCL NXTVISION和HESENSE CANVASTV，但是根据我阅读的内容（如果我错了，请纠正我），他们在将您锁定到专有固件中也有类似的问题，并且需要永久订阅基本功能。我已经想到了一些潜在的解决方法，但是我想知道这些中的任何一个是多么可行：  越狱是标准的哑光电视并安装福斯固件 - 这是最简单的选择 - 但是我不知道该如何做，我不知道有人不知道该固件是否与raspberry pi with a Rapberry pi hosed terike native tve tvertip-我不确定如何使用这种方法模仿ART模式功能，除非可以永久离开电视并使用静态墙纸设置为RPI输入   使用带有哑光哑光显示屏的Raspberry Pi-此选项对我而言最有意义。从本质上讲，这将是DIY智能框架。有人尝试过这种方法吗？我不确定在哪里可以找到模仿哑光电视艺术模式幻想的显示类型。 买一台Foss Matte TV-如果已经存在  无论如何，是否有人对如何在这里进行任何想法？有人尝试过类似的事情吗？有人认为这值得追求吗？我很想听听您的想法！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/training-home-1601     [link]    32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mbj39k/foss_alternative_to_frame_tv/</guid>
      <pubDate>Mon, 28 Jul 2025 15:21:36 GMT</pubDate>
    </item>
    <item>
      <title>介绍北极星：一种开源引擎，以实现不可能的想法</title>
      <link>https://www.reddit.com/r/opensource/comments/1mbirod/introducing_polaris_an_open_source_engine_for/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  如果下一个伟大的科学飞跃不是来自实验室……但是来自开放式互联网？ 北极星是激进理论，投机物理学，投机性物理学和未构造的开源框架，旨在帮助思想家，tinker and the the the Iffure Science of Science P.   改变世界的想法。 北极星建立在四个支柱上：1。Forge - 提交和构造大胆的想法（例如熵供电的电池，神经外部uscles或量子自适应材料）2。坩埚 - 一种模拟引擎 - 一种模拟引擎，用于测试针对已知科学的这些理论（计划）3。 Polaris Ideas4。Vel的“回声”  - 一种未来的警报系统，它通知贡献者何时现实开始赶上 🧩 🧩是什么使Polaris与众不同？ •这不是关于货币化的想法，而是要解放它们•每个想法都是在“人类优先许可”下获得许可的 - 可以自由建立，共享，混音或启发•每次提交以平淡的英语和科学形式记录在有远见的人和科学的形式上 - 向我们   我们目前都在构建一个真正的概念，即构建一个现实的概念。思考：GPT驱动的PubMed警报符合未来的预测引擎。    🔗贡献，叉子，或关注：github.com/rocketshon/rocketsshon/polarkis-idea-eengine-eengine       矢量•熵引擎 - 一种投机性系统，使用熵梯度从寒冷的环境中提取能量•拟人加速理论 - 将普遍扩展与熵增加的假设联系在一起，而不是深色能量•神经控制的外部肌肉系统 - 直接的脑部到脑之间的脑部到合成的肌肉互动，绕过生物学限制      科幻建筑商 - 如果您曾经有一个“如果？”想法，无处可言…… 北极星是实验室的笔记本。 喜欢反馈，叉子或贡献。   -  d&#39;shons。   &lt;！ -  sc_on- sc_on-&gt;＆＃32;提交由＆＃32; /u/u/prigious-wrap2341      [link]        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mbirod/introducing_polaris_an_open_source_engine_for/</guid>
      <pubDate>Mon, 28 Jul 2025 15:09:32 GMT</pubDate>
    </item>
    <item>
      <title>开源图标库：66个城市（首先），清洁，最小的SVG</title>
      <link>https://www.reddit.com/r/opensource/comments/1mbimsl/open_source_icon_library_66_cities_for_a_start_as/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  从客户端项目中启动这一点 - 简约的城市图标，每个图标都通过一个独特的符号代表一个位置。目前，它以干净的黑白界线方式覆盖了66个城市（首先）。 SVG格式，可搜索的UI。 实时网站： cities.partdirector.ch   github： github.com/anto1/city-icons     开放，以向反馈，拉请求或为城市添加的建议。计划保持这种成长。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1mbimsl/1mbimsl/open_source_icon_icon_library_66_cities_for_for_for_a_start_as/”&gt; [link]  &lt;a href =“ https://www.reddit.com/r/opensource/comments/1mbimsl/1mbimsl/open_source_icon_icon_library_66_cities_for_for_for_a_start_as/”]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mbimsl/open_source_icon_library_66_cities_for_a_start_as/</guid>
      <pubDate>Mon, 28 Jul 2025 15:04:24 GMT</pubDate>
    </item>
    <item>
      <title>我写了一个轻巧的Go Cron包</title>
      <link>https://www.reddit.com/r/opensource/comments/1mbgpsx/i_wrote_a_lightweight_go_cron_package/</link>
      <description><![CDATA[      ＆＃32;提交由＆＃32; /u/u/pardnchiu     [link]&gt; [link]   [注释]            ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mbgpsx/i_wrote_a_lightweight_go_cron_package/</guid>
      <pubDate>Mon, 28 Jul 2025 13:50:34 GMT</pubDate>
    </item>
    <item>
      <title>[项目]从头开始的分布式文件系统 - 开放供款</title>
      <link>https://www.reddit.com/r/opensource/comments/1mbdeki/project_distributed_file_system_from_scratch_in/</link>
      <description><![CDATA[]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mbdeki/project_distributed_file_system_from_scratch_in/</guid>
      <pubDate>Mon, 28 Jul 2025 11:15:37 GMT</pubDate>
    </item>
    <item>
      <title>🧠Python中的简单CLI任务管理器（基于JSON）</title>
      <link>https://www.reddit.com/r/opensource/comments/1mbcdex/simple_cli_task_manager_in_python_jsonbased/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   hi！我在python中构建了最小 cli任务跟踪器  - 没有数据库，只是local  tasks.json 。您可以直接从终端添加，列出，完成，删除和过滤任务。 🔗github：        mit。反馈和想法欢迎！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/prodohey     [link]   [commist]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mbcdex/simple_cli_task_manager_in_python_jsonbased/</guid>
      <pubDate>Mon, 28 Jul 2025 10:16:13 GMT</pubDate>
    </item>
    <item>
      <title>我建造了富含反应的富含反应的：一个sonner风格的吐司API</title>
      <link>https://www.reddit.com/r/opensource/comments/1mbca2y/i_built_reactnativerichtoast_a_sonnerstyle_toast/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿，伙计们！ 👋 我刚刚发布了一个新的反应本机软件包：富含反应的含量  这是一个轻巧的包装器，围绕反应&gt;反应&gt;，，但具有清洁的，sonner-sonner-sonner-sonner-sonner-pi-insner-pi api。 href =“ https://github.com/laurentcodes/reaect-native-rich-toast”&gt; https://github.com/laurentcodes/react-native-native-rich-teast-rich-teast    href =“ https://snack.expo.dev/@stlaurent/react-native-rich-teast”&gt; https://snack.expo.dev/@stlaurent/@stlaurent/reactlaurent/react-native-native-native-native-native-rich-toast    sc_on-&gt;＆＃32;提交由＆＃32; /u/u/stlaurentgod     [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mbca2y/i_built_reactnativerichtoast_a_sonnerstyle_toast/</guid>
      <pubDate>Mon, 28 Jul 2025 10:10:47 GMT</pubDate>
    </item>
    <item>
      <title>[q]是否有能够输出ODT或任何其他可编辑格式的开源OCR软件？</title>
      <link>https://www.reddit.com/r/opensource/comments/1mbbiza/q_is_there_any_open_source_ocr_software_able_to/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  很多年前，我拥有一台HP打印机，该打印机配备了一个可以从扫描文档中生成Word文件的OCR软件。尽管它的准确性不是最好的，但它能够识别标题，大胆的文本，表格等。结果，输出文档具有与原始版本相同的布局和格式（您仍然需要对其进行审核，但它很有帮助）  ocr现在已经有了很多改进（Tesseract的准确性都可以得到很多识别的工具，我可以找到识别的工具。能够生成可编辑的文档非常适合数字化旧书，因为它可以更新它们或创建电子书 您知道是否有这样的工具或任何其他方法可以部分自动化该过程？   &lt;！ -  sc_on- sc_on-&gt;＆＃32;提交由＆＃32; /u/u/no_mongoose6172      [link]    [注释]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mbbiza/q_is_there_any_open_source_ocr_software_able_to/</guid>
      <pubDate>Mon, 28 Jul 2025 09:23:43 GMT</pubDate>
    </item>
    <item>
      <title>Amadeus桌面版本的开发</title>
      <link>https://www.reddit.com/r/opensource/comments/1mbakl5/development_of_amadeus_desktop_version/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好，我只是一个新手的程序员，是斯坦斯大门的狂热粉丝，我只是想分享我最骄傲的项目之一，它叫做amadeus，它是一个桌面应用程序，旨在为Steins in Steins; Gate; Gate 0，更具体地在台式上复制epter eptrian for Victriria for Victriria for Victriria for Victria for Victriria for Victriria for Victriria for Victriria for Victriria for Victiry for。 我的项目是开源的，我想要的是聚集志趣相投的人和/或所述动漫的粉丝，他们可以帮助我开发该项目 我只是一个新手开发人员，我仍然缺乏许多领域，但我渴望学习和获得经验，如果您对我的项目访问，请访问我的项目，这是我的Project访问github repo： href =“ https://github.com/senkuuuuuuu u/amadeus”&gt; https://github.com/senkuuuuuuu y/amadeus      此外href =“ https://ko-fi.com/makisekurisu22217”&gt; https://ko-fi.com/makisekurisu22217      /&gt;  - 💖通过ko-fi  捐赠，谢谢您的时间，谢谢  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/exotic_razzmatazz_49      [link]      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mbakl5/development_of_amadeus_desktop_version/</guid>
      <pubDate>Mon, 28 Jul 2025 08:20:34 GMT</pubDate>
    </item>
    <item>
      <title>我构建了一个免费的开源桌面提醒应用程序（Rust，vue.js）</title>
      <link>https://www.reddit.com/r/opensource/comments/1mbafor/i_built_a_free_open_source_desktop_reminder_app/</link>
      <description><![CDATA[      I&#39;ve been meaning to learn the basics of Rust, build my first desktop application ever and replace with it the only 2 desktop reminder apps I&#39;ve known to fulfill my requirements, as both are 15 years+ old at this point. 这仍然是一项正在进行的工作，但是经过数周的开发，我觉得我已经获得了首次版本的可接受状态。 我的主要用例让我想起了自己的事物，我肯定会忽略我使用的Google日历或类似的推送/浏览器通知的应用程序（例如，付款的账单，付费等）。我确实有ADHD，您怎么知道？ 它是完全免费的，开源的，您的数据永远不会离开您的计算机（请参阅README中的隐私章节）。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/tack1234      &lt;a href =“ https://www.reddit.com/r/opensource/comments/1mbafor/i_built_a_a_free_open_source_desktop_reminder_app/]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mbafor/i_built_a_free_open_source_desktop_reminder_app/</guid>
      <pubDate>Mon, 28 Jul 2025 08:11:20 GMT</pubDate>
    </item>
    <item>
      <title>我构建了Webnami  - 快速，轻巧，优化的开源博客网站生成器</title>
      <link>https://www.reddit.com/r/opensource/comments/1mba0av/i_built_webnami_a_fast_lightweight_seooptimized/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好， 我最近完成了构建Webnami，这是一种轻巧的博客工具，它可以快速且易于友好地友好地开箱即用，并希望在此处分享它以获取一些反馈。  功能：      -  toil tript your markdey in tripty predy pectery predypedy p。静态生成。   - 专注于性能 - 完美的核心Web Vitals和最小的膨胀。   - 包括SEO功能，例如站点地图，元标记，典范链接，canonical Links，rss fef，RSS Feed开箱即用。它甚至在构建过程中进行SEO审核以检测SEO问题。   - 具有一个干净，响应式默认的博客模板，您可以自定义。  demo博客： https://github.com/webnami-dev/webnami    我建立了这个，我建立了这个，因为我对繁重的博客平台感到沮丧，但想要一些轻松的博客，但是seo-frylylylylylylyly。提交由＆＃32; /u/u/pydevlog     [link]     [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mba0av/i_built_webnami_a_fast_lightweight_seooptimized/</guid>
      <pubDate>Mon, 28 Jul 2025 07:43:48 GMT</pubDate>
    </item>
    <item>
      <title>发布开源软件</title>
      <link>https://www.reddit.com/r/opensource/comments/1mb8khk/publishing_open_source_software/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在过去的一年中，我一直在与一所知名大学一起从事开源项目，最近我完成了它。我有兴趣发布它，并且正在研究期刊，并遇到了开源软件杂志。 很快，仅在某些上下文中，这个项目是利基市场的，并且在法律领域有帮助。它是一个网站和其他两个程序（用于数据提取的程序）。它解决了这个利基法律领域的一个主要问题。 我想知道（1）本期刊是否好/有任何已出版或有经验的人的建议，以及（2）我可能还想在发布论文之前（是否还有其他插座（是期刊，写作样式等））在发布论文之前。提交由＆＃32; /u/u/ttvby_the_way      [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mb8khk/publishing_open_source_software/</guid>
      <pubDate>Mon, 28 Jul 2025 06:12:12 GMT</pubDate>
    </item>
    <item>
      <title>使用本地存储并支持iOS的FOSS看板软件</title>
      <link>https://www.reddit.com/r/opensource/comments/1mb6qii/foss_kanban_software_that_uses_local_storage_and/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  缩短了长话短说，在开源世界中有很多斜视选择，但是我想知道是否有一个同时提供a）本地存储和b）iOS支持，其中人们可以使用像同步的东西同步笔记本电脑和手机。也许，如果实际上可以访问iPhone上的索引ddb文件（我不确定最终用户是否可以看到它们）  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/limemill     [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mb6qii/foss_kanban_software_that_uses_local_storage_and/</guid>
      <pubDate>Mon, 28 Jul 2025 04:22:38 GMT</pubDate>
    </item>
    <item>
      <title>为什么开源软件这么好？</title>
      <link>https://www.reddit.com/r/opensource/comments/1mb65wc/why_is_open_source_software_so_good/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  只是我突然有一个随机的想法：   为什么您会如此自由，社区制造，开源软件制作得如此精心？ 您会认为，数十亿美元的公司会认为，与他们最终相比，      人们是否只是圣徒聚在一起并免费创建好的节目的人？我本来以为拥有数百名六位数程序员的公司可以做得更好。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1mb65wc/why_is_open_source_source_software_so_good/”&gt; [link]        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mb65wc/why_is_open_source_software_so_good/</guid>
      <pubDate>Mon, 28 Jul 2025 03:52:03 GMT</pubDate>
    </item>
    <item>
      <title>github- amuta/kumi：一种声明的DSL，将业务逻辑转换为静态检查的依赖图图</title>
      <link>https://www.reddit.com/r/opensource/comments/1mb4tk8/github_amutakumi_a_declarative_dsl_that/</link>
      <description><![CDATA[       ＆＃32;提交由＆＃32; /u/mutzas     [link&gt; [link]   [注释]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mb4tk8/github_amutakumi_a_declarative_dsl_that/</guid>
      <pubDate>Mon, 28 Jul 2025 02:42:55 GMT</pubDate>
    </item>
    </channel>
</rss>