<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：Opensource</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>所有与开源相关的所有内容的子reddit（在此上下文中，我们在此处删除开源的定义http://en.wikipedia.org/wiki/open_source）</description>
    <lastBuildDate>Tue, 12 Aug 2025 15:20:10 GMT</lastBuildDate>
    <item>
      <title>项目货架 - 项目详细信息守护者</title>
      <link>https://www.reddit.com/r/opensource/comments/1moafyg/project_shelf_a_project_details_keeper/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿， 在我的开发旅程中，我创建了多个小型/中等应用程序，过了一会儿，我忘记了它们的位置，或者我购买了域的位置（这些只是两个示例）。我使用了一段时间来跟踪它们，但我真的不喜欢它。 我创建了一个跟踪项目的小应用程序，在我准备好码头时，我只是想在这里分享。 Maybe it will help someone else. The app is called Project Shelf. https://ibb.co/1tC6nTP5 What it actually does:  - Track your projects with simple statuses (Planning →正在进行中→完成）   - 多用户支持（非常适合具有多个开发人员的团队或家庭）   - 干净的，清洁的现代界面，这些界面不会陷入困境   - 用于用户管理的内置管理          Project Shelf允许您为每个条目创建一个条目，跟踪其当前状态（例如，“计划中”“正在进行的“正在进行”，“已完成”，“已完成”，添加有关其托管，域，域，关键技术或任何其他您想记住的其他重要详细信息的注释。这是您的集中式仪表板，可以快速回顾一下一切的位置和当前状态。 CSS，Prisma，Sqlite  我真的很想获得您的反馈，建议甚至贡献！你怎么认为？您想看到任何功能吗？ 谢谢！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/minimal_dex     [link]        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1moafyg/project_shelf_a_project_details_keeper/</guid>
      <pubDate>Tue, 12 Aug 2025 14:35:55 GMT</pubDate>
    </item>
    <item>
      <title>Supabase JS操场</title>
      <link>https://www.reddit.com/r/opensource/comments/1moadpz/supabase_js_playground/</link>
      <description><![CDATA[Introducing Supabase JS Playground 🪄 A free and open source tool to run and debug your Supabase JS client code with real data - no setup, no boilerplate. Inspired by the SQL playground in the Supabase dashboard, but built for testing Supabase JS client直接查询。 Quickly check what your JS client code is going to return, without needing to setup a full fledged app. Example: You have this `await supabase.from(&#39;todos&#39;).select()` in your app, you can navigate to the playground, and put in this snippet in the Database Query tab and run the query.使用“ Anon”密钥时，您将看到此片段返回的内容。您可以添加服务密钥并切换以使用它，并查看使用服务密钥返回的方法（在后端工作时非常有用）。您还可以通过单击模仿用户按钮并提供用户的电子邮件来模仿用户。现在，相同的查询将返回该用户可以看到的数据。 这就是为什么它有用的原因： ✅立即测试您的客户端代码 🔐检查什么Anon＆amp; service key can access 👤 Impersonate users to debug RLS policies and to see what data can they access 🧠 Call your RPC functions directly 🔑 Supports legacy and new API keys 🛡️Note: Supabase API url and keys are stored in the browsers local storage.没有存储/发送到我们的服务器的数据。 在此处尝试 -   htttps://supabase-js-playclay.vercel..vercel..vercel.app/ href =“ https://github.com/dineshs91/supabase-js-playground”&gt; https://github.com/dineshs91/supabase-js-js-playground    提交由＆＃32; /u/dineshs91     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1moadpz/supabase_js_playground/</guid>
      <pubDate>Tue, 12 Aug 2025 14:33:30 GMT</pubDate>
    </item>
    <item>
      <title>Koncentro：带有pomodoro计时器的生产力应用程序，带有集成网站阻止器</title>
      <link>https://www.reddit.com/r/opensource/comments/1mo9e7k/koncentro_a_productivity_app_with_a_pomodoro/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   koncentro是一个由QT构建的生产力应用程序，将时间框与pomodoro技术和集成的网站阻止程序结合在一起。 网站阻止器支持一个blocker Blocker支持一个blocklist（您想要阻止的站点）和一个允许列表（仅允许）（仅特定的站点）。您可以使用工作空间将工作和个人目标分开。每个工作区都有自己的设置集，网站阻止器配置和任务。对于Linux，Koncentro可作为Flatpak提供： Flatpak install flathub com.bishwasaha.koncentro 。 DEB和RPM软件包在GitHub版本上也可用。可以从 github发行   github repo： koncentro    屏幕截图可用here Note: Windows SmartScreen might prevent the installer from starting because the app isn’t code signed yet.当代码签署证书花费金钱时，此步骤尚未完成。您仍然可以通过选择“更多信息”来运行它。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/bits-hyd-throwaway   href =“ https://www.reddit.com/r/opensource/comments/1mo9e7k/koncentro_a_productivity_app_app_app_app_a_a_pomodoro/”&gt; [link]    [注释]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mo9e7k/koncentro_a_productivity_app_with_a_pomodoro/</guid>
      <pubDate>Tue, 12 Aug 2025 13:54:55 GMT</pubDate>
    </item>
    <item>
      <title>我建立了一个工具来自动转录和翻译中国的闭路电视新闻</title>
      <link>https://www.reddit.com/r/opensource/comments/1mo8hk5/i_built_a_tool_to_autotranscribe_and_translate/</link>
      <description><![CDATA[       &lt;！ -  sc_off-&gt;  我创建了一个自动下载，转录，转录和翻译CCTV的python工具（新闻联播） - 中国最观看的每日新闻节目 - 进入英语字幕。 非常适合想要使用真实新闻内容练习的中文学习者。翻译是忠实且背景的，使理解正式 /政治中国词汇变得更加容易。&lt; /p&gt;   - 以中文优化的ASR模型（funasr paraformer）  - 用于翻译的openROUTER API（deepseek v3-0324）  - 全部使用现代化的br /brm&gt; uv frf，typerf， yt-dlp生成现成的“燃烧”带有字幕和处理的视频。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;  /u/Acanthisitta-Sea   [link] ＆＃32;   [注释]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mo8hk5/i_built_a_tool_to_autotranscribe_and_translate/</guid>
      <pubDate>Tue, 12 Aug 2025 13:17:32 GMT</pubDate>
    </item>
    <item>
      <title>OpenSource音乐播放器下载linux和Windows</title>
      <link>https://www.reddit.com/r/opensource/comments/1mo8b6t/opensource_music_player_download_for_linux_and/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  一个新的OpenSource音乐播放器可以在SourceForge下载。 它开始是作为一个尝试制作一个随机的音乐播放器，它从未停止播放5年前的音乐，我开始在C＃中使用C＃，但现在可以在python中使用python和lin for Windows  lin&gt;           https://sourceforge.net/projects/prom-jukebox/   提交由＆＃32; /u/ofm2     [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mo8b6t/opensource_music_player_download_for_linux_and/</guid>
      <pubDate>Tue, 12 Aug 2025 13:10:07 GMT</pubDate>
    </item>
    <item>
      <title>跟踪和可视化存储库趋势，带有reddit提及和发布时间表的新更新</title>
      <link>https://www.reddit.com/r/opensource/comments/1mo79c8/tracking_and_visualising_repository_trends_new/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  不久前，我共享 我没有在第一篇文章以来就没有发布有关新发行的信息，但是最近 v0.0.0.7 更新，我认为可能值得一提：现在，该项目列出 释放恒星时间表：现在您可以看到项目的释放与明星历史并绘制。   移动移动友好型访问：添加了一个按钮以快速切换到该网站的移动设备版本。 href =“ https://github.com/emanuelef/daily-stars-explorer”&gt; https://github.com/emanuelef/emanuelef/emanuelef/daily-stars-explorer    一如既往，一如既往，在进度，反馈和思想中仍然是良好的范围。我认为他们仍然可以表现出一些有趣的趋势。就我个人而言，我经常出演一个项目，只是为了向维护者表示感谢。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/efumagal     [link]     [commist]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mo79c8/tracking_and_visualising_repository_trends_new/</guid>
      <pubDate>Tue, 12 Aug 2025 12:23:54 GMT</pubDate>
    </item>
    <item>
      <title>Android卷轴/电影下载器？</title>
      <link>https://www.reddit.com/r/opensource/comments/1mo4x7q/android_reelsmovie_downloader/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  非常感谢Android卷轴/电影下载器，牙线/开源OFC的建议。谢谢。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/bestzucchini5995      [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mo4x7q/android_reelsmovie_downloader/</guid>
      <pubDate>Tue, 12 Aug 2025 10:22:24 GMT</pubDate>
    </item>
    <item>
      <title>可以创建Spotify的替代方案吗？</title>
      <link>https://www.reddit.com/r/opensource/comments/1mo400v/would_it_be_possible_to_create_an_alternative_to/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  最近有消息称，Spotify首席执行官Daniel Ek投资了AI武器公司，我觉得现在该是时候真正与Spotify竞争并支付他们应得的东西了。考虑到艺术家的想法。每流每年支付3.5亿美元的$ 0.0003，这是非常错误的。 搁置了使音乐行业站在一边的后勤工作，是否有可能像开源软件有效的方式创建竞争对手吗？许多人共同努力，以保持其运行，每个人被付款，没有一个人拿到所有钱。 全面披露。我不是开发人员，因此在这一领域知识很少，但只厌倦了这些技术兄弟百万富翁。是时候进行更改了。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1mo400v/would_it_it_be_possible_to_create_create_an_alternative_to/”&gt; [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mo400v/would_it_be_possible_to_create_an_alternative_to/</guid>
      <pubDate>Tue, 12 Aug 2025 09:26:18 GMT</pubDate>
    </item>
    <item>
      <title>介绍Diffalyze：DevOps爱好者的新开源文本差异工具</title>
      <link>https://www.reddit.com/r/opensource/comments/1mo3wbu/introducing_diffalyze_a_new_opensource_text_diff/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   hi！ 我是一名DevOps工程师，对寻找日常技术问题的优雅和高效解决方案非常感兴趣。多年来，我经常发现自己正在比较日志，配置文件和脚本 - 这使我构建了我想与这个社区共享的东西。 ，该项目是 diffalyze ，是一种开放源工具，旨在与浏览器，速度，透明，透明界面以及现代界面和现代界面进行比较和合并文本文档。您可以在此处探索代码： github.com/joseangel-lomero/diffalyze 。。为了进行最佳的比较性能。 在多个层面上进行比较：对移动的块的插件，字符，角色，甚至智能检测。 一个干净且响应的UI：并排或统一的视图或统一的视图，实时构成构成，超出50种语言（超过50种语言），包括彩色主题，包括黑暗模式，以及全自动的语言检测。 responsive), local history stored in IndexedDB, and strong security measures (input sanitization, protection against ReDoS vulnerabilities).  Current Capabilities:  Undo/redo support (history of up to 20 actions) Advanced search with regex, file drag-and-drop, mobile-friendly design, and more.  路线图上的内容：  三路合并支持 - 特别有助于解决合并冲突。 插件系统自定义差异算法。 实时协作和通过url diff diff tix nour&gt;                   api  DIFF PDF或图像。   diffalyze在 gpl-3.0许可证下释放，这是完全自由使用，修改和分发的。 您如何帮助您：       在 报告错误，建议改进或贡献翻译，增强UI的增强，测试覆盖范围等等。 即使是较小的贡献也是欢迎的 - 无论是改进界面，是改进界面，还是添加调整的调整，还是只是为了提交反馈。合作提供。 感谢您阅读！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/itisjose     [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mo3wbu/introducing_diffalyze_a_new_opensource_text_diff/</guid>
      <pubDate>Tue, 12 Aug 2025 09:19:37 GMT</pubDate>
    </item>
    <item>
      <title>像素艺术风格的组件</title>
      <link>https://www.reddit.com/r/opensource/comments/1mo2u2h/pixel_art_styled_components/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  你们嗨，大家好， （我之前已经发布了一次，但我进行了重要更新。） 对于那些不知道的人，我想向您展示我的侧面项目，我想向您展示我的shadcn上的Pixel Art样式库，该库是由Shadcn上方的Proff Condcn。可以使用CLI命令在项目中导入组件，无需下载包。 href =“ https://github.com/pixelact-ui/pixelact-ui”&gt; https://github.com/pixelact-ui/pixelact-ui/pixelact-ui       &lt;！提交由＆＃32; /u/u/alburt22     [link]    32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mo2u2h/pixel_art_styled_components/</guid>
      <pubDate>Tue, 12 Aug 2025 08:09:42 GMT</pubDate>
    </item>
    <item>
      <title>纠结：建立在AT协议的代码协作平台</title>
      <link>https://www.reddit.com/r/opensource/comments/1mo2aes/tangled_a_code_collaboration_platform_built_on/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/softwarecitadel       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mo2aes/tangled_a_code_collaboration_platform_built_on/</guid>
      <pubDate>Tue, 12 Aug 2025 07:34:22 GMT</pubDate>
    </item>
    <item>
      <title>新的PostgreSQL连接池</title>
      <link>https://www.reddit.com/r/opensource/comments/1mo226r/new_postgresql_connection_pooler/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  你好，想侵入rust中的新的PostgreSQL连接池，它称为pgdoorman     PGDOORMAN是一种高性能的PostgreSQL连接池，它是您的应用程序和PostgreSQL服务器之间的中间件，有效地管理数据库连接以提高性能和资源利用率。 当应用程序连接到PGDOORMAN时，它的行为与PostgreSQL Server一样。在幕后，PGDOORMAN要么建立与实际的PostgreSQL Server的新连接，要么从其池中重复现有连接，从而大大降低了连接开销。 有关更多详细信息，请访问github的链接并检查readme。提交由＆＃32; /u/chechyotka     [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mo226r/new_postgresql_connection_pooler/</guid>
      <pubDate>Tue, 12 Aug 2025 07:19:39 GMT</pubDate>
    </item>
    <item>
      <title>[OSS] LLMUXER  - 成本吸引LLM模型选择器（MIT）。帮助我们添加数据集和缓存。</title>
      <link>https://www.reddit.com/r/opensource/comments/1mo0906/oss_llmuxer_costaware_llm_model_selector_mit_help/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  小型MIT许可的工具，以选择保持分类质量的最低成本模型。 Python，OpenRouter。  贡献指南：  droguting.md  href =“ https://github.com/mihirahuja1/llmuxer”&gt; https://github.com/mihirahuja1/mhirahuja1/llmuxer    demo colab + Benchmark + Benchmark Script。提交由＆＃32; /u/mihir_a     [links]   [commist]        ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mo0906/oss_llmuxer_costaware_llm_model_selector_mit_help/</guid>
      <pubDate>Tue, 12 Aug 2025 05:29:07 GMT</pubDate>
    </item>
    <item>
      <title>Linux在临界点，只需要正确的推动力:)</title>
      <link>https://www.reddit.com/r/opensource/comments/1mo07t8/linux_is_at_the_tipping_point_and_it_just_needs/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我一直在侧线上关注Linux多年来，最近几年我变得更加参与，它变得更好，我已经运行了Alpine Server一年多了，偶尔使用了Qubes OS OS笔记本电脑，并且有几个Linux VMS。 Nobara对我来说是改变了游戏的原因，现在我将100％转换为Linux，我现在可以在Linux中做的99％，这很容易。 我仍然不认为Linux是Windows替换的下降，但我认为我们很接近，但实际上是对Linux和更多的商业支持，更多的商业支持。 Microsoft强迫Steam认为Linux，这对Linux确实很有益。 AMD对Linux开放，这也非常好。我们的团队越多，Linux越好。 现在，我认为Linux对许多人来说足够好，并且对Windows/Microsoft/Microsoft/Billgates/USA E.T.C.有足够的消费者刺激。朝Linux的方向移动很多人。我们甚至偶尔会看到Linux在帧速率上比Windows更好的游戏基准，这肯定会激励一些硬核游戏玩家移动。 可以肯定的是，会有问题，会有一些问题会烧毁，新手会感到沮丧，在社区中会有更多的和平，但是我们会更喜欢Linux，而不是像linux一样胜过，而不是这样吗？更好的应用程序选择？更好的硬件支持？ 现在，我认为Linux需要开源营销，我们需要善于以社区制造的操作系统方式制作广告。我们需要展示开放和诚实的营销的外观。我们在Linux中有视频工具，我们应该在Linux中展示我们可以做什么，我们可以与Linux制作的伟大广告，并让多样性发生，让最佳的商业生存并传播开来。 让我们让世界上每个国家都像挪威一样做，让我们可以在所有其他国家/地区在所有其他国家/地区共享！ href=&quot;https://gs.statcounter.com/os-market-share/desktop/norway/#monthly-200901-202507&quot;&gt;https://gs.statcounter.com/os-market-share/desktop/norway/#monthly-200901-202507 &lt;!-- SC_ON - &gt;＆＃32;提交由＆＃32; /u/u/opensharks     [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mo07t8/linux_is_at_the_tipping_point_and_it_just_needs/</guid>
      <pubDate>Tue, 12 Aug 2025 05:27:09 GMT</pubDate>
    </item>
    <item>
      <title>电子表格申请用于财务建模</title>
      <link>https://www.reddit.com/r/opensource/comments/1mnolas/spreadsheet_application_for_financial_modeling/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我正在寻找有关最佳开源电子表格软件的建议，该软件允许良好的财务建模，特别是具有敏感性和方案分析功能。我的目标是找到一种强大的Excel替代方案，以进行永久性开关。 到目前为止，我尝试了libreoffice calc，但是我并没有完全相信它的性能，并且还没有找到方案分析的良好扩展。 I&#39;m curious if anyone here has experience with Grist or OpenOffice Calc and could share their thoughts. I have experience with Python, so Grist makes a compelling option, however this makes collaboration with others a bit hard (for people who are not familiar with programming languages in general) Some of specific points I&#39;m interested in: Availability and quality of extensions or plugins for financial modeling. 场景和感应性分析。 扩展或折旧的预构建公式（我有时会计算每月折旧值） 如果您还有其他建议，除了Grist and Openoffice计算以外的其他建议，我也喜欢听到它们。任何见解或个人经历都将不胜感激。 事先感谢您的帮助  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/clueless_cocker     [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mnolas/spreadsheet_application_for_financial_modeling/</guid>
      <pubDate>Mon, 11 Aug 2025 20:43:08 GMT</pubDate>
    </item>
    </channel>
</rss>