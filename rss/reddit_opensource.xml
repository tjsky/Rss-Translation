<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：Opensource</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>所有与开源相关的所有内容的子reddit（在此上下文中，我们在此处删除开源的定义http://en.wikipedia.org/wiki/open_source）</description>
    <lastBuildDate>Tue, 09 Sep 2025 15:19:44 GMT</lastBuildDate>
    <item>
      <title>您如何共享您的FOSS代码？</title>
      <link>https://www.reddit.com/r/opensource/comments/1ncljwc/how_do_you_share_your_foss_code/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我是启动FOSS项目的新手。我想到了我一直在修补 - 如何将代码拿到那里？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/jypark03     [link]    ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ncljwc/how_do_you_share_your_foss_code/</guid>
      <pubDate>Tue, 09 Sep 2025 15:10:57 GMT</pubDate>
    </item>
    <item>
      <title>Quarkdown 1.9.0淘汰：基于Markdown的排版系统最终带有VS代码扩展</title>
      <link>https://www.reddit.com/r/opensource/comments/1nckzw2/quarkdown_190_is_out_the_markdownbased/</link>
      <description><![CDATA[       ＆＃32;提交由＆＃32; /u/u/iamgioh      [注释]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nckzw2/quarkdown_190_is_out_the_markdownbased/</guid>
      <pubDate>Tue, 09 Sep 2025 14:49:44 GMT</pubDate>
    </item>
    <item>
      <title>为什么我们可以让30美元的Baofengs淹没乐队，但开源HTS却没有呢？</title>
      <link>https://www.reddit.com/r/opensource/comments/1nckiz6/why_are_we_okay_with_30_baofengs_flooding_the/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/conwat181     [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nckiz6/why_are_we_okay_with_30_baofengs_flooding_the/</guid>
      <pubDate>Tue, 09 Sep 2025 14:31:52 GMT</pubDate>
    </item>
    <item>
      <title>我为UX测试（MVP）开了一个交互式模拟器。由React/TS/Vite，基于插件的JSON驱动。会喜欢开源社区的想法！</title>
      <link>https://www.reddit.com/r/opensource/comments/1nciutn/ive_opensourced_an_interactive_simulator_for_ux/</link>
      <description><![CDATA[Hey folks,  I’ve been working on a project called SCOPE (Simulation for Cognitive Observation of Perception &amp; Experience) and just made the MVP open source. 🔹 What it is: An interactive, plugin-based simulator for exploring how people perceive并与接口进行交互。   JSON驱动的问题（易于添加您自己的问题） 抽象图样式样式隔离了感知＆amp; Intuition  使用React +打字稿 + Vite  自定义测试图的可扩展插件系统     为什么： 我想要一种超越理论和动手实验的经验上测试用户的直觉和感知的方法。目的是使其对UX研究人员，设计师和任何对人类计算机互动感到好奇的人有用。    MVP状态（v0.1.0）：      选择持续时间＆amp; difficulty Several sample questions/diagrams Early docs: setup, contribution guide, mockups, roadmap Roadmap includes results dashboard + AI-powered summaries  🔹 Repo [GitHub]: 👉Scopecreepsoap/scope-simulator：用于认知观察感知的模拟＆amp;经验（范围）  我都希望任何反馈 - 您认为这在研究，教学还是只是尝试UX设计中很有用。而且，如果有人想贡献插件/问题，则为此构建了体系结构。 谢谢！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/bhaaat     [link]       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nciutn/ive_opensourced_an_interactive_simulator_for_ux/</guid>
      <pubDate>Tue, 09 Sep 2025 13:25:04 GMT</pubDate>
    </item>
    <item>
      <title>构建合规性，安全性和Finops Cross-Cloud开源解决方案：有贡献者吗？ :)</title>
      <link>https://www.reddit.com/r/opensource/comments/1ncilkf/building_the_compliance_security_and_finops/</link>
      <description><![CDATA[Imagine being able to check across all your cloud providers for security, compliance and finops verifications, in a few seconds, with simple editable rules you will be able to enhance yourself to tailor it to your needs. This is our goal with Kexa, for now we have already built 250+ rules, for AWS, Azuer, GCP, Oracle, Office 365 and更多...  ，但我们想发展我们的社区，以便我们可以共同建立云合规性的未来，安全＆amp; finops for everyone. Our goal is to simplify the access to those notions, we want in the futur our user to be able to retrieve pre-structured rule group that match their infrastructure needs, and quickly have a report on their cloud compliance . We also have a premium offer that use AI to assist on remediation, but here i want to talk about the core of the project, if this interested you, please like us on Github, and更好的是，请给我们您对Kexa！ ，如果您是云专家或经常使用Cross-Cloud解决方案，我们很乐意有您的意见，也许您的贡献！  github：    &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/productkey8093      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ncilkf/building_the_compliance_security_and_finops/</guid>
      <pubDate>Tue, 09 Sep 2025 13:14:26 GMT</pubDate>
    </item>
    <item>
      <title>/dev /push- vercel /渲染的开源替代品</title>
      <link>https://www.reddit.com/r/opensource/comments/1nch4t8/devpush_open_source_alternative_to_vercel_render/</link>
      <description><![CDATA[I wanted to deploy Python apps but still wanted to have a polished UX experience, like Vercel has. So I built /dev/push for myself, and then decided to open source it. You can host它可以通过运行一个命令在Hetzner服务器（或任何debian/ubuntu框）上：   curl -fssl -fssl https://raw.githubusercortent.com/hunvreus/hunvreus/devpush/devpush/main/main/main/main/scripts/main/scripts/prod/prod/prod/install.sh | sudo bash   它与Vercel或Laravel Cloud非常相似：  基于git的部署， 环境管理， 实时监视， 团队合作， node.js（beta），但我正在努力添加其他语言（PHP，GO，Ruby）。 作品中的许多其他内容：持久存储，SQLITE数据库，缩放/资源设置，自定义容器，远程节点，远程节点等。非常欢迎反馈和贡献。  网站： https://devpu.sh      github： https://github.com/hunvreus/devpush        &lt;！ -  sc_on-&gt; sc_on-&gt; 32;提交由＆＃32; /u/u/hunvreus     [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nch4t8/devpush_open_source_alternative_to_vercel_render/</guid>
      <pubDate>Tue, 09 Sep 2025 12:09:34 GMT</pubDate>
    </item>
    <item>
      <title>是否有任何开源软件可以通过蓝牙使我的手机成为我的PC的无线鼠标和键盘？</title>
      <link>https://www.reddit.com/r/opensource/comments/1ncgyod/is_there_any_open_source_software_to_make_my/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/a-typical-stranger     [link]     [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ncgyod/is_there_any_open_source_software_to_make_my/</guid>
      <pubDate>Tue, 09 Sep 2025 12:01:32 GMT</pubDate>
    </item>
    <item>
      <title>ezantianticheat（重新发布）</title>
      <link>https://www.reddit.com/r/opensource/comments/1nceqsz/ezantianticheat_repost/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   ezantianticheat  大家好， 我正在研究Ezantianticheat，这是一个开源项目，该项目旨在研究和实验，用于研究和实验内核级反策略系统。它的目的是为研究和管理情况提供一个安全的框架，在这些情况下，激进的反欺诈软件彼此干扰，例如Riot Vanguard和其他反欺骗平台之间的冲突。 该项目在Github上完全开放： https://github.com/palordersoftworksofficial/ezantianticheat       我正在寻找对：测试和工具改进 注意：•该项目纯粹用于研究和教育目的。 •它并非旨在绕过或禁用用于游戏玩法的防治系统。 •使用不当可能使软件无法使用；请负责任地使用。 贡献，反馈和协作非常欢迎！如果这篇文章违反了社区规则，请与我联系，而不是立即禁止我进入SubReddit，以便我可以从问题中解决帖子！额外注意：EzantiantInticheat完全擦拭了反欺骗驱动程序，并且游戏可能会重新安装或崩溃为失败的安全。请在reddit上私下给我发给我。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1nceqsz/ezantianticheat_repost/”&gt; [link]   ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nceqsz/ezantianticheat_repost/</guid>
      <pubDate>Tue, 09 Sep 2025 10:00:08 GMT</pubDate>
    </item>
    <item>
      <title>我构建了一个超快速的开源GO Web服务，用于从HTML/JSON模板生成PDF。</title>
      <link>https://www.reddit.com/r/opensource/comments/1ncd935/i_built_an_ultrafast_opensource_go_web_service/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我很高兴分享一个我一直在开发的项目： gopdfsuit ，高性能的GO Web服务，旨在从HTML和JSON模板中创建PDF文档。它建立在GO 1.23+和杜松子酒框架上，并且是在麻省理工学院许可下完全开源的。 我创建了这一点，因为我厌倦了缓慢，笨拙且昂贵的商业PDF解决方案。 GoPdfSuit is designed to be a fast, simple, and flexible microservice that you can drop into any project. Key Features:  Ultra-Fast Performance: It can generate PDFs with sub-millisecond to low-millisecond response times, making it incredibly efficient for high-load applications.  模板驱动：它使用JSON驱动的模板系统，这意味着您可以在不编写任何代码的情况下生成复杂的，数据丰富的PDF。 It also has a built-in web interface for real-time preview and editing. HTML to PDF/Image Conversion: Easily convert entire web pages or HTML snippets into PDFs or images. Interactive Forms: Supports AcroForm and XFDF data for filling out interactive forms. Easy部署：它被部署为单个二进制文件，使启动和运行变得简单。  语言agnostic：，由于它使用了REST API，因此您可以将其与任何编程语言一起使用。      gopdfsuit是一种更灵活的和成本更高的替代方案。如果您与PDFS合作，我希望您能检查一下，让我知道您的想法！   github存储库：   项目页面：  https://chinmay-sawant.github.io/gopdfsuit//gopdfsuit/  - &gt;＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1ncd935/i_built_an_ultrafast_opensource_go_go_web_service/”&gt; [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1ncd935/i_built_an_ultrafast_opensource_go_web_service/</guid>
      <pubDate>Tue, 09 Sep 2025 08:20:54 GMT</pubDate>
    </item>
    <item>
      <title>我为OBJ Converter脚本创建了一个Ninjaripper 2！</title>
      <link>https://www.reddit.com/r/opensource/comments/1nccx0g/i_created_a_ninjaripper_2_to_obj_converter_script/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  （09/08/2025） 适用于版本1.7.1及以下： https://github.com/nazar-okruzhko/ninjaripper-ninjaripper-nr-to-bobj------------------  DirectX Games .. Hovewer它将它们倾倒到神秘的insown .nr格式中...但是我为您创建了一个脚本，以便您现在可以弯曲！    f12 + this脚本之后，所有魔术都会发生！提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1nccx0g/i_created_a_ninjaripper_2_to_obj_obj_converter_script/”&gt; [link]  &lt;a href =“ https://www.reddit.com/r/opensource/comments/1nccx0g/i_created_a_ninjaripper_2_to_2_to_obj_converter_script/]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nccx0g/i_created_a_ninjaripper_2_to_obj_converter_script/</guid>
      <pubDate>Tue, 09 Sep 2025 07:58:12 GMT</pubDate>
    </item>
    <item>
      <title>我为OBJ Converter脚本创建了一个Ninjaripper！</title>
      <link>https://www.reddit.com/r/opensource/comments/1nccwyl/i_created_a_ninjaripper_to_obj_converter_script/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  （09/07/2025） 适用于版本1.7.1及以下： https://github.com/nazar-okruzhko/ninjaripper-rip-t-to-to-to-to-bobj----------------------------------obj  DirectX Games .. Hovewer它将它们倾倒到神秘的insown .rip格式中...但是我为您创建了一个脚本，以便您现在可以弯曲！   在F12 +此脚本之后，所有魔术都会发生！提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1nccwyl/i_created_a_ninjaripper_to_obj_obj_converter_script/”&gt; [link]   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nccwyl/i_created_a_ninjaripper_to_obj_converter_script/</guid>
      <pubDate>Tue, 09 Sep 2025 07:58:06 GMT</pubDate>
    </item>
    <item>
      <title>为什么使用JS，HTML和CSS等Web技术创建跨平台和便携式应用程序 /软件不太常见？</title>
      <link>https://www.reddit.com/r/opensource/comments/1nccagc/why_isnt_it_more_common_to_create_crossplatform/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我试图摆脱我对拥有开源项目的专有（Microsoft）软件的依赖。无论我要寻找的开源软件的类型如何，我都意识到我有以下标准通常会出现：  兼容性：使用Windows，Linux和Macos  设备兼容性：使用PC，智能手机和平板电脑和平板电脑     for a for Ins li for Ins li，可以用来 USB No telemetry and no requirement to be connected to the internet Self-contained dependencies to avoid complicated set-ups Noob-friendly to download, execute and use by a tech-illiterate grandma  Optional criteria :  Syncing available across devices Easy to change its source code to customize the software / web-app  I realize that pretty much all of these requirements are fulfilled with what would essentially be portable web-apps. TiddlyWiki is one such example, it&#39;s a portable notebook that fits in one single HTML file (but I don&#39;t intend to do an implementation that extreme) and it works as intended. Keep in mind that the我要寻找的软件类型的替代方法不是资源密集型应用程序，并且通常是轻量级的：  注意说明提取标记应用程序（例如Obsidian）/或文本编辑器 电子书和漫画阅读器支持不同的文件格式（PDF，epub，cbz等）和paintic                   转换器  Meme Maker   所有这些都可以回到我的最初问题： 为什么使用基本的Web Technologies创建用于轻量级应用程序的开放源代码项目，为什么不更普遍？除了每个操作系统和每个设备都有浏览器“应用程序”的浏览器之外，它们似乎还提供了如此明显的优势。可以无缝运行。 那么，什么给出？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1nccagc/why_isnt_it_it_more_more_more_common_to_create_crossplatform/”&gt; [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nccagc/why_isnt_it_more_common_to_create_crossplatform/</guid>
      <pubDate>Tue, 09 Sep 2025 07:16:18 GMT</pubDate>
    </item>
    <item>
      <title>Dryrun -Linux实用工具在您的命令上执行干式运行</title>
      <link>https://www.reddit.com/r/opensource/comments/1nc9a4q/dryrun_linux_utility_tool_to_perform_dry_run_on/</link>
      <description><![CDATA[    src =“ https://external-preview.redd.it/0ygywsrrn844ivmublyzaoqvomtcvzlf8mron2xed56k.png？宽度= 640＆amp; crop = smart＆amp; auto = webp＆amp＆amp; s = f419e867ef08e437b658fe7ED5ECF66DB38D6194“ title =“ dryrun-linux实用工具在您的命令上执行干式运行”/&gt;    &lt;！ -  sc_off- sc_off-&gt;  多年来，我一直在使用各种Linux发行版，并且一直熟悉一些基本的软件包和命令。我不会称自己为专家，但可以很好地导航。 在LLM接管之前，我曾经在Stackoverflow上阅读一些复杂的CP MV命令。我曾经问过自己是否有办法进行干式运行，然后再复制从SO或LLMS粘贴命令。我搜索了，尽管有一个网络实用工具解释说明shell.com 它不涵盖我想要的东西。   ，因此，这是我尝试构建Linux实用工具来构建一个不需要的命令的linux实用工具，这些命令几乎不需要built build of build of build of build of build of bult of bund of the buld。可以适用于60％的命令的系统至少涵盖最常用的命令。 让我知道你们所有人的想法。我确实想集成解释shell.com  utlity to dryrun，也可以为像我这样的新手提供命令说明。   &lt;！ -  sc_on-&gt; sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/allergic2humans      &lt;a href =“ https://www.reddit.com/r/opensource/comments/1nc9a4q/dryrun_linux_utility_tool_tool_too_to_to_to_perform_dry_run_on_on/]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nc9a4q/dryrun_linux_utility_tool_to_perform_dry_run_on/</guid>
      <pubDate>Tue, 09 Sep 2025 04:13:22 GMT</pubDate>
    </item>
    <item>
      <title>有关开发人员验证系统可以采取的操作的收集</title>
      <link>https://www.reddit.com/r/opensource/comments/1nc62fr/collection_of_actions_that_can_be_done_regarding/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/endo231     [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nc62fr/collection_of_actions_that_can_be_done_regarding/</guid>
      <pubDate>Tue, 09 Sep 2025 01:33:11 GMT</pubDate>
    </item>
    <item>
      <title>制作无干扰的电子墨水仪表板以超过Google的巢枢纽</title>
      <link>https://www.reddit.com/r/opensource/comments/1nc5as4/crafting_a_distractionfree_eink_dashboard_to/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我用trmnl砍了一个开源的电子墨水显示器，将自定义API拔起天气，公共汽车信息和个人健康跟踪。 最终结果是能效和完全我的。 https://youtu.be/MPm60wxAQKY?si=zLNTxU0rR0egOckZ   提交由＆＃32; /u/u/sey-tourist569     [link]       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1nc5as4/crafting_a_distractionfree_eink_dashboard_to/</guid>
      <pubDate>Tue, 09 Sep 2025 00:57:13 GMT</pubDate>
    </item>
    </channel>
</rss>