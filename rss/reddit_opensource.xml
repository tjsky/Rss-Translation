<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：Opensource</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>所有与开源相关的所有内容的子reddit（在此上下文中，我们在此处删除开源的定义http://en.wikipedia.org/wiki/open_source）</description>
    <lastBuildDate>Sat, 30 Aug 2025 09:18:18 GMT</lastBuildDate>
    <item>
      <title>我们开源代理的故事！</title>
      <link>https://www.reddit.com/r/opensource/comments/1n3woa7/the_story_of_our_open_source_agent/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿 u/opensource 👋 我想分享几天的旅程href =“ http://www.droidrun.ai”&gt; droidrun ，我们用于自动化真实Android Apps的开放式代理框架。 我们开始构建Droidrun，因为我们感到沮丧：自动化和代理技术中的所有东西似乎都陷入了Browserer中。但是人们住在手机和应用程序上是围墙的花园。因此，我们建立了一个可以实际利用，滚动和交互的代理，就像人类一样。 几周前，我们发布了一个简短的演示无音调，只是一个运行真实Android UI的代理。在48小时内：  我们达到了 xxxx+ github     获得了Devs加入我们的devord      在投资者的雷达 after  What worked for us:  We led with a real demo, not a roadmap Posted in the right communities, not product forums Asked for feedback, not attention And open-sourced from day one, which gave us credibility +动量  我们还处于早期，还有很多吨要弄清楚。但是到目前为止，最大的一课是：  不要等待抛光。如果核心很强，就会运送怪异，破碎，原始的东西。提交由＆＃32; /u/u/petesneaknex     [link]    ＆＃32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n3woa7/the_story_of_our_open_source_agent/</guid>
      <pubDate>Sat, 30 Aug 2025 08:44:43 GMT</pubDate>
    </item>
    <item>
      <title>🚀新版本：Timetracker v1.1.0  - 自托管时间跟踪变得简单</title>
      <link>https://www.reddit.com/r/opensource/comments/1n3wb2q/new_release_timetracker_v110_selfhosted_time/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/u/innin-egg-7321     [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n3wb2q/new_release_timetracker_v110_selfhosted_time/</guid>
      <pubDate>Sat, 30 Aug 2025 08:19:58 GMT</pubDate>
    </item>
    <item>
      <title>寻求RTCIO的反馈：现代的，类型的安全WEBRTC库，带有脱钩的信号器</title>
      <link>https://www.reddit.com/r/opensource/comments/1n3uyjq/seeking_feedback_on_rtcio_a_modern_typesafe/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在过去的几周中，我一直在一个名为 rtcio 的新开源库。我的目标是创建一个具有简单，高级的API类似于 socket.io 的简单，高级的API ，但要与现有解决方案更灵活。 API设计以及您可能会看到的任何潜在改进。   github repo：   注意：这不是主分支上的 ，因为这是我几年前在此问题上进行的一次尝试的广泛重构。从那时起，我就已经成为开发人员了很多，认为重新做​​这个库是值得的，这样我就可以在不久的将来在一个项目中使用它。如果您想向自己大笑，您可以检查主分支的当前实现：）  “为什么”为什么     ，而像 simple&gt; simple-peer 之类的图书馆很棒，我想要在现代，模块化项目中更觉得在家中感觉到的东西。我的主要目标是：   真正的信号者不可知论：我想要一个与任何特定的信号传输无关的库（例如socket.io）。     第一级类型安全    ：一个完全符合的库，一般的库是必不可少的   密钥架构＆amp;打字稿的决定  这是我最感谢您的反馈的地方。   1。解耦的信号层库的核心通过 clientsignaler 接口（@rtcio/signding ）完全从信号服务器与信号服务器解耦。这意味着您可以编写（或使用）任何信号实现（Websockets， socket.io ，graphQl等），并将其插入主 rtc  Manager。这使库非常灵活且易于测试。   2。类型安全的通用事件系统我在事件系统上花费了很多时间。  RTC 管理器和单个 P2PConnection 实例是通用的。您可以通过定义自定义P2P事件的接口传递，并且使用 .on（）和 .emit（）。      //定义您的自定义事件interface Appevents Appevents {ChatMessage：chatMessage：chatMess：（chatMess）= cant，messags：string）=＆gt;空白; gamestate ：（状态：gameStateObject）=＆gt;空白; } const rtc = new rtc＆lt; appevents＆gt;（Signaler，&#39;my-room&#39;）; //“ peer”现在已与您的事件rtc.on（&#39;connected&#39;，（peer）=＆gt; {//自动完成&#39;chatmessage&#39;&#39;&#39;和&#39;gameState&#39;在这里peer.on（&#39;chatmessage&#39;，&#39;chatmessage&#39;，（来自，message）=＆gt; gt;     3。带有NPM工作区的Monorepo＆amp;项目参考  该项目的构造是带有软件包/*的monorepo，我正在使用Typescript的项目参考来管理核心，信号界面和信号器实现软件包之间的依赖关系。这可以使一切保持清洁并有效地建造。 请求反馈  我正在寻找：   api设计：RTC Manager和P2PConnection api api Intuitive contuitive contore        type  一般代码质量：您看到的任何事情都可以做得更好？   感谢您抽出宝贵的时间来查看！我期待您的评论！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/joe-diertay     [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n3uyjq/seeking_feedback_on_rtcio_a_modern_typesafe/</guid>
      <pubDate>Sat, 30 Aug 2025 06:53:18 GMT</pubDate>
    </item>
    <item>
      <title>🚀开源AI智能手表项目 - 寻找合作者！</title>
      <link>https://www.reddit.com/r/opensource/comments/1n3u8jj/open_source_ai_smartwatch_project_looking_for/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;     tl; dr：构建智能手表的开放课程AI模型作为附带项目。我正在学习时，我正在学习寻找此项目 这是我创建一个开源的AI-Power智能手表平台的热情方面的项目。我不是该领域的专家，但是我非常致力于一起学习和建立有意义的东西。寻找志趣相投的人，他们想探索可穿戴的AI技术！ 我们正在构建的 一个开源AI驱动的智能手表平台，使可穿戴的智能民主化。 Our goal is to create accessible, privacy-focused AI models that can run efficiently on smartwatch hardware while providing meaningful insights and interactions. What We Need 🧠 AI/ML Engineers - Model optimization, edge AI, TinyML 📊 Data Scientists - Health analytics, user insights 📚技术作家  - 文档，教程 其他学习者  - 任何兴奋地一起探索和学习的人！ 我的承诺     总是学习，我一直在学习  - 我正在积极地学习em emperable this ai ai emp eart ai emp this ai emperable  br/&gt;   附带项目，我一直致力于一致的进步 长期视觉  - 不仅是周末骇客 - 我为此付出了很长的时间    Open Communication   - 定期更新，透明挑战和进度和进度 为什么要加入我们的范围？ freely available ✅ Learn Together - Perfect for anyone wanting to dive into edge AI and wearables ✅ No Pressure Environment - We&#39;re all learning and figuring this out together ✅ Real Impact - Build something people will actually use and benefit from ✅ Flexible Commitment - Contribute as much or as little as your schedule allows ✅投资组合构建器  - 展示您不断增长的技能 当前状态   🔥早期阶段 - 塑造项目方向📋定义架构和技术要求 的绝佳时机，您是...   是一个学生或专业的学生，​​想探索可穿戴的AI  具有愿意指导和指导和指导的专业知识的人 一个初学者兴奋地与他人一起学习   相关领域中具有基本技能的人      dm me或评论！     也是这些东西的新事物？完美！让我们一起学习和建立。我相信最好的项目来自热情的人，他们愿意在他们走时弄清楚事情。  有5分钟的时间？⭐⭐明星我们的仓库，并与可能对这一学习旅程感兴趣的任何人分享！ 让我们建立可穿戴的AI的未来 - 一个人一次承诺！ 🤝  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/skillsalt9362     [link]     [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n3u8jj/open_source_ai_smartwatch_project_looking_for/</guid>
      <pubDate>Sat, 30 Aug 2025 06:08:23 GMT</pubDate>
    </item>
    <item>
      <title>寻找贡献者：C ++和Rust的早期国际象棋引擎</title>
      <link>https://www.reddit.com/r/opensource/comments/1n3shfc/looking_for_contributors_earlystage_chess_engine/</link>
      <description><![CDATA[       ＆＃32;提交由＆＃32; /u/u/u/kyoshiyoshi     link”   [注释]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n3shfc/looking_for_contributors_earlystage_chess_engine/</guid>
      <pubDate>Sat, 30 Aug 2025 04:26:42 GMT</pubDate>
    </item>
    <item>
      <title>在AI编码时期维护开源项目</title>
      <link>https://www.reddit.com/r/opensource/comments/1n3ms01/maintaining_an_open_source_project_in_the_times/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   均未由AI编写或审查。所有的错别字和错误都是我的。由于AI工具的可用性，对OSS的贡献降低了。到达某种有效的，有点OK的解决方案的速度要快，但是审查过程比如果完全没有AI编写代码，熨除了细节和错误的时间要长得多。我还认为，双方的总体挫败感将减少。另一方面，我认为没有克劳德（Claude），我们根本就没有这些贡献。最初的伪解决方案和评论评论的伪造的极端速度令人上瘾，这可能是人们考虑撰写贡献的唯一原因。因此，我想总体上有一种胜利？ 现在是具有一些背景的较长版本。我是Serena MCP的开发人员，在那里我们使用语言服务器为代理提供类似IDE的工具。在过去的几个月中，该项目的受欢迎程度爆炸了，我们得到了许多外部贡献，主要支持更多语言。 Serena并不是一个非常复杂的项目，我们确保增加对新语言的支持并不难。有一个关于如何做到这一点的详细指南，可以以测试驱动的方式进行。 这是与克劳德（Claude）一起工作的外部贡献者显示出好处和缺点。由于说明，克劳德（Claude）确实很快就撰写了一些测试，并吐出了对新语言的初始支持。但是，让测试通过 - 包括可怕的作弊水平。我已经看到了代码：  如果断言失败 仅测试测试琐事，例如 isInstance（输出，列表），而不是执行任何有用的东西 使用 使用MOCK ERTINATINAL ERRAINE，则可以使用入侵和解决方法“解决”一个不存在的问题。测试通过，但是实现是脆弱的，错误和不必要的   没有人会以这种方式编写代码。您可能想象，审核过程通常对双方都是微不足道的。当我对黑客发表评论时，PR作者有时甚至都不知道它是在场的，也无法解释为什么有必要。最终，公关变成了大量的提交（我们总是必须挤压），并花费大量时间完成。就像我说的那样，没有克劳德，它可能会更快。但是话又说回来，没有克劳德，这可能根本不会发生...  如果您做到了这么远，那么在这里为维护者和AI的一般用户进行编码的一些实用个人建议。  确保在如何书写和模拟的情况下包含有关如何写入测试的非常详细的说明，并且必须避免使用模拟。如果必须的话，请大喊Claude。假装是2022  从AI开始之前，请考虑一下一些简单的复制和次要调整是否也不会使您更快地进行初始实现。您还会感到自己拥有代码 知道何时减少损失。如果您注意到自己在克劳德（Claude）上放了很多时间，请考虑回去做一些事情。 对于维护者来说 - 请注意AI的典型作弊行为，并且对解决方法非常怀疑。比您几年前进行的评论非常彻底，更彻底。  最后，我什至不想考虑不经验丰富的程序员的Vibe编码人员的项目...经过几周的发展，经过数周的开发，它可能会带来沙堡，它可能会带着基于幻想肥皂的基础，而幻想又可以听到facters of the of the of the deal of face of plood of plood of face of plood。有类似的问题！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/left-orange2267     [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n3ms01/maintaining_an_open_source_project_in_the_times/</guid>
      <pubDate>Fri, 29 Aug 2025 23:36:33 GMT</pubDate>
    </item>
    <item>
      <title>我们构建并开源了一个远程对编程应用程序</title>
      <link>https://www.reddit.com/r/opensource/comments/1n3j6ei/we_build_and_opensourced_a_remote_pair/</link>
      <description><![CDATA[       &lt;！ -  sc_off-&gt;   hey  hopp，一种开源远程对编程工具，无法在质量和预算之间进行选择。     repo可在：  https://github.com/gethopp/hopp/hopp/hopp     促使我们疯狂的问题使我们疯狂    我们都是远程工程师（我在Grafana实验室中，我们都在 价格过高的替代方案。没有中型启动可以证明每月每月有数十美元的合理性。  我们尝试了所有事情。没有什么让我们“坐在彼此相邻的地方”。  所以我们没有破坏银行。我们认为，每个开发人员都应该获得平滑的配对编程，不仅是那些拥有无限工具预算的FAANG公司的配对编程。 我们受到ZED所做的一切的启发 - 公开建立，让社区塑造产品。 We&#39;re not VC-backed (by choice), so we can focus on what developers actually need. Tech stack:  Desktop: Tauri + React/TypeScript (native performance, tiny bundle) Backend: GoLang Real-time: Built on LiveKit with our own WebRTC optimizations   是什么与众不同：    sub-100ms潜伏期 - 真正的本地  🎮完全遥控 - 两个人都可以同时编码   📱跨平台 -  MacOS和Windows  -  MacOS和Windows，我们希望获得Linux Support  li&gt;           💰自我主持 - 您可以自主甚至拜克（带上自己的livekit）   尝试一下！ 🎯  我们正在积极寻找Beta测试人员和贡献者！请确保检查我们的回购并参与其中！  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/kostakos14       [注释]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n3j6ei/we_build_and_opensourced_a_remote_pair/</guid>
      <pubDate>Fri, 29 Aug 2025 21:02:49 GMT</pubDate>
    </item>
    <item>
      <title>方案驱动的异步后端模拟器（编码之前设计）</title>
      <link>https://www.reddit.com/r/opensource/comments/1n3iknv/scenariodriven_simulator_for_async_backends/</link>
      <description><![CDATA[Hello! I’d like to share AsyncFlow, an open-source scenario-driven simulator for asynchronous distributed backends. With AsyncFlow you can do something like: Declare a topology (users → client → load balancer → servers) → Run it → Inspect results (latency, queues, RAM, failures). That’s the core idea: simulate your async system before it exists in production. 🔹 What AsyncFlow Does? • Scenario-driven simulations → inject network RTT, jitter, outages, or resource caps. • Event-loop aware servers → CPU块，RAM保持分配，I/O产量像真实的异步框架一样。 •网络边缘→型号延迟分布，尖峰或退化链接。 •box→p95/p99延迟，plyptime→posock 什么是动态（流量峰值，服务器崩溃，链接降解）。 🔹🔹是谁是？  repo： https://github.com/asyncflow-sim/asyncflow    我会在：               •哪些指标最能为您提供最大的帮助？ •文档和示例上有任何OSS提示。 谢谢，很高兴回答问题。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/dired_remove8731     [link]        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n3iknv/scenariodriven_simulator_for_async_backends/</guid>
      <pubDate>Fri, 29 Aug 2025 20:38:19 GMT</pubDate>
    </item>
    <item>
      <title>Java项目贡献</title>
      <link>https://www.reddit.com/r/opensource/comments/1n3ckjy/java_project_to_contribute/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  嘿，大家我是Prakash，是Oracle的软件开发人员，拥有约2年的经验。我非常有兴趣为OpenSearch做出贡献，并想从一个既适合初学者友好又提供良好学习机会的项目/模块开始。 我最初尝试潜入Main  OpenSearch  repo，但发现它有点不知所措。您能否建议一些良好的子项目，插件或新贡献者通常开始并可以有效学习的领域？ 我的首要任务是为基于 Java的项目做出贡献。   &lt;！ -  sc_on- sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/delperate_ability655     [link]    32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n3ckjy/java_project_to_contribute/</guid>
      <pubDate>Fri, 29 Aug 2025 16:46:49 GMT</pubDate>
    </item>
    <item>
      <title>淹没了具有差异不同的代码质量的贡献者的拉力请求</title>
      <link>https://www.reddit.com/r/opensource/comments/1n3c097/drowning_in_pull_requests_from_contributors_with/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  维护开源项目并每周获得10-15个PR，从贡献者到完整的初学者到高级工程师。质量差异是疯狂的。 有些PR已经准备就绪，有些PR会引入可能崩溃整个系统的错误。我花费更多的时间来审查和提供反馈，而不是实际从事功能。作为志愿者的努力，它变得不可持续。挑战是在不灰心的情况下是教育性的。想要帮助初学者学习，但也需要保持项目质量。不能只是自动拒绝低质量的PR，但也不能合并所有内容。开始使用GREPTILE进行初始筛选并提供一致的反馈格式。有助于抓住明显的问题，并为我提供了更多详细评论的起点。仍在寻找自动化和人类指导之间的适当平衡。 其他维护者如何处理？您在欢迎新贡献者的同时管理公关质量的过程是什么？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/u/frosty-protection-53     [link]   [注释]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n3c097/drowning_in_pull_requests_from_contributors_with/</guid>
      <pubDate>Fri, 29 Aug 2025 16:24:50 GMT</pubDate>
    </item>
    <item>
      <title>简单墙的最佳替代品</title>
      <link>https://www.reddit.com/r/opensource/comments/1n35vbx/best_alternative_to_simplewall/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  在SimpleWall的创建者左之后。  您推荐Windows Firewall + DNS的哪种选择？  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/o_xpg     [link]    32;   [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n35vbx/best_alternative_to_simplewall/</guid>
      <pubDate>Fri, 29 Aug 2025 12:18:47 GMT</pubDate>
    </item>
    <item>
      <title>Termix-基于网络的自托管SSH终端，反向隧道和文件编辑</title>
      <link>https://www.reddit.com/r/opensource/comments/1n35so1/termix_self_hosted_webbased_ssh_terminal_reverse/</link>
      <description><![CDATA[GitHub Repo: https://github.com/LukeGus/ For the past couple of months, I have been working on my free self-hosted passion project, Termix. Termix is an开源，永久的，自托管的多合一服务器管理平台。它提供了一种基于Web的解决方案，用于通过单个直观界面来管理服务器和基础架构。 Termix提供SSH终端访问，SSH隧道功能和远程文件编辑，并提供更多工具。 完整的功能列表：       ssh终端访问  - 完整的终端，带有分式式Screen Support and Split -Screen Support（doup 4 Panels and Tab System          ssh puntem 自动重新连接和健康监控  远程文件编辑  - 直接在远程服务器上编辑文件，具有语法突出显示，文件管理功能（上传，删除，重命名，删除文件）         ssh ssh主机管理器 strort  - 在任何SSH服务器上查看CPU，内存和HDD用法  用户身份验证  - 使用管理员控件和OIDC支持的安全用户管理和更多的auth类型支持      现代UI   - 与React和Shadwind css＆Shadcn /u/u/vizekarma     [link]        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n35so1/termix_self_hosted_webbased_ssh_terminal_reverse/</guid>
      <pubDate>Fri, 29 Aug 2025 12:15:16 GMT</pubDate>
    </item>
    <item>
      <title>我创建了一个程序来记录流</title>
      <link>https://www.reddit.com/r/opensource/comments/1n35qzo/ive_created_a_program_to_record_streams/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好，我刚刚发布了一个名为Televedi的新软件。 Televedi允许用户实时录制流频道或安排以后的自动录制。 是：   - 开源   - 免费   - 配备了简单且直觉的界面     - 与自定义流和playlist和playlist     - 仅与Windows 10和11  兼容，您可以在 https://github.com/github.com/github.com/messina-agata/televedi/televedi/televedi 提交由＆＃32; /u/u/agata_30     [link]       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n35qzo/ive_created_a_program_to_record_streams/</guid>
      <pubDate>Fri, 29 Aug 2025 12:12:59 GMT</pubDate>
    </item>
    <item>
      <title>我替代了Daylio的替代品</title>
      <link>https://www.reddit.com/r/opensource/comments/1n35fqq/my_foss_alternative_to_daylio/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/mash_the_conqueror      [link]       [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n35fqq/my_foss_alternative_to_daylio/</guid>
      <pubDate>Fri, 29 Aug 2025 11:58:12 GMT</pubDate>
    </item>
    <item>
      <title>制作了一个很小的库来收集您的应用中的用户反馈</title>
      <link>https://www.reddit.com/r/opensource/comments/1n32vf9/made_a_tiny_library_to_collect_user_feedback_in/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我构建了一个名为 echobox的小型android库，一种轻巧的方式来收集用户（表情符号 +消息）的应用程序内反馈（Emoji +消息），而无需后端。 现在，如果现在，我可能会添加jetpack compack of jetpack，但我可能会添加XML的支持。贡献非常欢迎！提交由＆＃32; /u/u/androiddeveloper01     [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1n32vf9/made_a_tiny_library_to_collect_user_feedback_in/</guid>
      <pubDate>Fri, 29 Aug 2025 09:36:31 GMT</pubDate>
    </item>
    </channel>
</rss>