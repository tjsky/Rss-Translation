<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：Opensource</title>
    <link>https://www.reddit.com/r/opensource/new</link>
    <description>所有与开源相关的所有内容的子reddit（在此上下文中，我们在此处删除开源的定义http://en.wikipedia.org/wiki/open_source）</description>
    <lastBuildDate>Wed, 06 Aug 2025 12:40:49 GMT</lastBuildDate>
    <item>
      <title>100％开源工具链以绘制全局电网</title>
      <link>https://www.reddit.com/r/opensource/comments/1mj1rjy/100_open_source_toolchain_to_map_the_global/</link>
      <description><![CDATA[       &lt;！ -  sc_off-&gt;  我们构建了100％的开源工具链来使用：       opentreetmap 作为数据库   osmose 用于验证    mkdocs y/li&gt; for abr/li&gt; href =“ https://github.com/leaflet/leaflet”&gt;传单对于交互式映射  您将找到我们在网站存储库的ReadMe页面上集成的所有较小工具和请求者的详细信息。  https://github.com/open-energy-energy-transition/mapyourgrid 提交由＆＃32; /u/upspurger     ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mj1rjy/100_open_source_toolchain_to_map_the_global/</guid>
      <pubDate>Wed, 06 Aug 2025 11:12:11 GMT</pubDate>
    </item>
    <item>
      <title>OpenSuse 16.0 RC构建148.4发布</title>
      <link>https://www.reddit.com/r/opensource/comments/1mj1r03/opensuse_160_rc_build_1484_release/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;   opensuse leap 16.0已正式从beta中转移到释放候选阶段，构建148.4    new Installer      leap 16.0使用最新的Agama用于在线和离线安装。   是Wayland上最早提供XFCE的人之一  我们在安装程序中只提供仅基于Wayland的台式环境。 Wayland上的XFCE最近加入了列表。感谢OpenSuse XFCE团队，我们是第一个将其作为实验预览交付给用户的人之一。  Selinux是新的默认默认值&lt; /strong&gt; &lt; /p&gt; 所有新安装都将使用Selinux使用Selinux。用户可以切换到Appamour发布后安装。   Steam，Wine，32位支持   suse linux Enterprise 16.0不支持32位二进制执行。 leap用户可以通过安装通过 grub2-compat-ia32   &lt;222 &lt;222 &lt;222 &lt;222 内核。 从Fast Netherlands Seedbox下载文件（Infohash）此处：  opensuse leap-16.0-offline-installer-aarch64-build148.4.install.iso   E7E691BDCF909FDFA01A3243D42EE1F7B75E5F02   opensuse leap-16.0-offline-infline-installer-pppc64le-build148.4.install.iso.iso   e397E1431E595A14482B0762E3F7944453487EF3F   opensuse leap-16.0-offline-infline-installer-s390x-build148.4.install.iso   DD6DAA6B66408331F1F01BE2BA6F0DB11C965904   opensuse leap-16.0-offline-infline-installer-x86_64-build148.4.install.iso   D61DDF01834CBEDE4F53E8F502C9BCC804AF9338   opensuse leap-16.0-online-inline-inline-inline-installer-aarch64-build148.4.install.iso.iso   4CD0AC01EFC01CCB3EBCCC9A1888A2606EBD2D03   opensuse leap-16.0-online-online-inline-inline-inline-installer-pppc64le-build148.4.install.isotal.iso   A7459326127A185D85D4C102FA2B485675BC9BF3   opensuse leap-16.0-Online-Online-inline-inline-inline-inline-inline-inline-inline-s390x-build148.4.install.istall.iso   62491F27F4D27B042DCCCA09F09F0CE4D8B38F6B07F   opensuse leap-16.0-Online-online-inline-inline-inline-inline-installer-x86_64-build148.4.install.istall.iso   3A0128EF9598156D7DB1B4F32D822A3428A9BACC   &lt;！&lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/usious-economist867     [link]    [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mj1r03/opensuse_160_rc_build_1484_release/</guid>
      <pubDate>Wed, 06 Aug 2025 11:11:22 GMT</pubDate>
    </item>
    <item>
      <title>如何停止害怕开源？</title>
      <link>https://www.reddit.com/r/opensource/comments/1miz5ur/how_to_stop_being_afraid_of_open_source/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好， 我正在写这篇文章以寻求建议和信息。我是网络开发人员，我想为开源PHP项目做出贡献。但是我该怎么说呢？我害怕做出贡献，并认为我的工作做得不好，或者我毫无用处。 您如何处理？还是您对自己说：“我遇到了这个问题，我想通过开源项目来解决它”？例如，一个Laravel框架，您可以尝试使用包装，并且它无法正常工作。 您如何鼓励年轻的开发人员为开放源代码做出贡献，以免害怕？当我看这些问题时，我会感到迷失，因为其他人比我更好。 谢谢您的反馈，祝您有美好的一天。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/gr3zor     [link]        [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1miz5ur/how_to_stop_being_afraid_of_open_source/</guid>
      <pubDate>Wed, 06 Aug 2025 08:32:10 GMT</pubDate>
    </item>
    <item>
      <title>建立开源，私人E2EE备忘录服务</title>
      <link>https://www.reddit.com/r/opensource/comments/1miyeoa/build_open_source_private_e2ee_memo_service/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好！ 我一直在为自己构建一些附带项目，但这是每个人都可以使用的。  它的工作原理：  用户撰写秘密备忘录，然后选择“到期时间8H到30d”  备忘录使用AES-256 PBKDF2在客户端浏览器中加密，具有600K迭代。向用户显示了生成的密码和备忘录的URL链接。 加密备忘录也将生成备忘录。 Memo_ID和加密备忘录将发送到服务器并保存到数据库。 Server never sees password. User shares URL and password to Bob using separate communication channels. Bob opens up URL and enters password, encrypted memo is decrypted in Browser. Memo gets deleted.  If Bob never opens memo, it will be deleted on expiration. Service run on CloudFlare。 数据库仅保存加密备忘录，没有密码。没有用户帐户。  github： https：//github.com/timoheimonen/securememonen/securememo.app   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/qettyz     [link]  &lt;a href =“ https://www.reddit.com/r/opensource/comments/1miyeoa/build_open_open_source_e2ee_e2ee_memo_service/]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1miyeoa/build_open_source_private_e2ee_memo_service/</guid>
      <pubDate>Wed, 06 Aug 2025 07:42:05 GMT</pubDate>
    </item>
    <item>
      <title>PYBOTCHI：基于轻量级意图的代理构建器</title>
      <link>https://www.reddit.com/r/opensource/comments/1miy35k/pybotchi_lightweight_intentbased_agent_builder/</link>
      <description><![CDATA[]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1miy35k/pybotchi_lightweight_intentbased_agent_builder/</guid>
      <pubDate>Wed, 06 Aug 2025 07:21:05 GMT</pubDate>
    </item>
    <item>
      <title>我们的开源项目已经两年了。为了庆祝，我们打印并发行了一个杂志，其中包含我们的GIT历史。</title>
      <link>https://www.reddit.com/r/opensource/comments/1mixytj/our_opensource_project_has_turned_two_years_old/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;    OpenStatus.dev 几天前2岁。 我们想释放一些很酷的商品。作为一个小型独立项目，我们从DIY朋克场景中汲取了灵感。我们在我的办公室打印机上打印了整个GIT历史记录，并将其作为有限批次（30印刷）为我们的社区和贡献者 以下是一些图片：     &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/tibozaurus   href =“ https://www.reddit.com/r/opensource/comments/1mixytj/our_opensource_project_project_has_has_turned_two_years_old/”&gt; [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mixytj/our_opensource_project_has_turned_two_years_old/</guid>
      <pubDate>Wed, 06 Aug 2025 07:13:36 GMT</pubDate>
    </item>
    <item>
      <title>建立了浏览器扩展程序，以与实时计时器和AI进行拖延</title>
      <link>https://www.reddit.com/r/opensource/comments/1mixnlk/built_a_browser_extension_to_fight/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  刚刚启动了狂欢仪表。我建立了它是为了解决自己的拖延问题，并决定为每个人提供效果。 github repo： https://github.com/sahaj-b/binge-meter/     它是直播在Chrome网络商店中的，并在Chrome网上和Firefox上添加了prof ins。可以在同一域上区分有用和无用的内容的阻滞剂，以及更大的功能，例如阻止，分析等。 任何反馈都得到了大大赞赏。   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/sahajbhatt     [link]   ＆＃32;   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mixnlk/built_a_browser_extension_to_fight/</guid>
      <pubDate>Wed, 06 Aug 2025 06:53:39 GMT</pubDate>
    </item>
    <item>
      <title>引入开放式ASPM：请求反馈并寻找贡献者</title>
      <link>https://www.reddit.com/r/opensource/comments/1miw0pw/introducing_open_aspm_requesting_feedback_and/</link>
      <description><![CDATA[]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1miw0pw/introducing_open_aspm_requesting_feedback_and/</guid>
      <pubDate>Wed, 06 Aug 2025 05:15:08 GMT</pubDate>
    </item>
    <item>
      <title>构建了任何网站都可以使用的本地AI聊天机器人小部件（无需API密钥）</title>
      <link>https://www.reddit.com/r/opensource/comments/1miqsmm/built_a_local_ai_chatbot_widget_that_any_website/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  大家好！ I just released OpenAuxilium, an open source chatbot solution that runs entirely on your own server using local LLaMA models. It runs an AI model locally, there is a JavaScript widget for any website, it handles multiple users and conversations, and there&#39;s zero ongoing costs once set up Setup is pretty straightforward : clone the repo, run the init script to download a model, configure your .env文件，你很好。前端仅是两个脚本标签。 所有的麻省理工学院已获得许可，因此您可以根据需要进行修改。很想从社区那里获得一些反馈或查看人们的建立。 sc_on-&gt;＆＃32;提交由＆＃32; /u/u/kindly-treacle-6378       [link]  &lt;a href =“ https://www.reddit.com/r/opensource/comments/1miqsmm/built_a_local_ai_ai_ai_chatbot_widget_that_that_that_that_any_website/]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1miqsmm/built_a_local_ai_chatbot_widget_that_any_website/</guid>
      <pubDate>Wed, 06 Aug 2025 00:53:00 GMT</pubDate>
    </item>
    <item>
      <title>软件可以比较所有照片文件 *（主要是JPEG和JPG）的两个硬盘驱动器，并仅显示每个驱动器的独特驱动器。</title>
      <link>https://www.reddit.com/r/opensource/comments/1mijvtx/software_to_compare_two_hard_drives_for_all_photo/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  它必须能够扫描整个驱动器，包括所有文件夹和子文件夹。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/rougaroux1969     [link]   [注释]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mijvtx/software_to_compare_two_hard_drives_for_all_photo/</guid>
      <pubDate>Tue, 05 Aug 2025 20:08:56 GMT</pubDate>
    </item>
    <item>
      <title>是否有一种简单的方法来处理TS中S3/R2/ETC上的文件上传？</title>
      <link>https://www.reddit.com/r/opensource/comments/1miieyx/is_there_a_simple_way_to_handle_file_uploads/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  我最近正在从事一个项目，需要处理用户文件上传图像，pdfs ..  我以前使用过S3，但想尝试这次尝试Cloudflare R2甚至Supabase。但是，切换提供商感觉就像是从头开始重写新的SDK，不同的签名URL逻辑，没有一致性。 我最终写了一些小包装器来统一它们，并使签名的上载/下载/delete更轻松。毫无疑问，只让我打电话upload（），（）删除和getsignEdurl（）与提供商之间的方式相同。 想知道： ： 你们是否会永远坚持一个提供者，以避免这种乱七八糟的东西？   这样一个简单的库吗？黑客攻击事物并乐于分享或获得想法。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32;态href =“ https://www.reddit.com/r/opensource/comments/1miieyx/is_there_a_a_a_simple_way_way_way_to_handle_handle_file_uploads/”&gt; [link]   [注释]]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1miieyx/is_there_a_simple_way_to_handle_file_uploads/</guid>
      <pubDate>Tue, 05 Aug 2025 19:14:00 GMT</pubDate>
    </item>
    <item>
      <title>作为违反学生开设清洁 /维护服务业务，您会推荐哪种软件，以免失去理智？</title>
      <link>https://www.reddit.com/r/opensource/comments/1mihhwl/opening_a_cleaning_maintenance_service_business/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  因此，我正在为我的当地，基本所有东西（电气，管道等）开设清洁 /维护服务，以及从基本清洁到电动洗涤墙和地板的清洁。我正在寻找能够根据我的可用性进行预约，安排时间安排的选项，并且可能会在网站中嵌入，您会推荐启动什么？  我们是4岁，所以我们需要可以具有个人资料的东西，是否有我可以将自己进入的开源应用程序？如果没有，您会推荐任何付费？ 感谢您的帮助：d   &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/chavapedia     [link]       [注释]   ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mihhwl/opening_a_cleaning_maintenance_service_business/</guid>
      <pubDate>Tue, 05 Aug 2025 18:40:22 GMT</pubDate>
    </item>
    <item>
      <title>流程优先管理器</title>
      <link>https://www.reddit.com/r/opensource/comments/1mih110/process_priority_manager/</link>
      <description><![CDATA[＆＃32;提交由＆＃32; /u/u/the-bluwiz      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mih110/process_priority_manager/</guid>
      <pubDate>Tue, 05 Aug 2025 18:23:08 GMT</pubDate>
    </item>
    <item>
      <title>HOPPSCOTCH API LIVE同步</title>
      <link>https://www.reddit.com/r/opensource/comments/1mig4k6/hoppscotch_api_livesync/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  作为后端工程师，Postman是我使用API文档的首选工具。它通过其抛光的UI和收集式文档对我来说很有困难。缺点是您必须手动记录API。在写了许多API之后，它已经成为手动创建和更新API文档的琐事，尤其是随着API规格发生了很大变化。可以将其视为想要观看直播电视广播而不是观看录制的视频 - 您总是看到最新信息，而无需任何手动干预。  &lt;！ -  sc_on-&gt;＆＃32;提交由＆＃32; /u/u/evilhighlord      [注释]  ]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mig4k6/hoppscotch_api_livesync/</guid>
      <pubDate>Tue, 05 Aug 2025 17:50:49 GMT</pubDate>
    </item>
    <item>
      <title>我构建了100％客户端的开源视频编辑器（没有服务器，没有上传，只是您的浏览器）</title>
      <link>https://www.reddit.com/r/opensource/comments/1mifuyk/i_built_a_100_clientside_open_source_video_editor/</link>
      <description><![CDATA[&lt;！ -  sc_off-&gt;  上传视频，剪切，删除部分，撤消编辑，更改播放率并导出结果而无需将任何内容上传到服务器。使用Vuejs和Mediarecorder API构建。您不必登录任何东西，您的视频永远不会离开设备。未来的计划是使其友好。尝试一下 https://vustu.vercel.app/ 或检查代码 https://github.com/williamtuominiemi/vustu 。。   &lt;！提交由＆＃32; /u/u/william_420     [link]  &lt;a href =“ https://www.reddit.com/r/opensource/comments/1mifuyk/i_built_a_a_100_clientside_open_source_source_video_editor/”]]></description>
      <guid>https://www.reddit.com/r/opensource/comments/1mifuyk/i_built_a_100_clientside_open_source_video_editor/</guid>
      <pubDate>Tue, 05 Aug 2025 17:41:10 GMT</pubDate>
    </item>
    </channel>
</rss>