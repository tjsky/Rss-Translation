<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：webdev</title>
    <link>https://www.reddit.com/r/webdev/new</link>
    <description>致力于所有 Web 开发的社区：前端和后端。有关更多与设计相关的问题，请尝试 /r/web_design。</description>
    <lastBuildDate>Wed, 08 Oct 2025 18:26:59 GMT</lastBuildDate>
    <item>
      <title>我使用 Grafana + Postgres + BullMQ 为我的前端应用程序创建了一个完全自托管的实时监控仪表板</title>
      <link>https://www.reddit.com/r/webdev/comments/1o1hsxw/i_created_a_fully_selfhosted_realtime_monitoring/</link>
      <description><![CDATA[      我开发了一个前端日志记录和批处理库，用于将核心 Web 生命体和错误收集到后端 API。然后后端 API 利用 BullMQ 批处理数据并将其发送到 PostgreSQL。 Grafana 随后可以查询 PostgreSQL 并可视化数据。 前端代码：https://github.com/rohitpotato/monospaced-stack 自托管 Kubernetes 代码：https://github.com/rohitpotato/k8s-apps   由   提交/u/theinknownpotato218   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o1hsxw/i_created_a_fully_selfhosted_realtime_monitoring/</guid>
      <pubDate>Wed, 08 Oct 2025 17:58:21 GMT</pubDate>
    </item>
    <item>
      <title>JavaScript 超文本预处理器</title>
      <link>https://www.reddit.com/r/webdev/comments/1o1g2jd/javascript_hypertext_preprocessor/</link>
      <description><![CDATA[      魔术师 Pooya（来自 nintojs、unjs、nuxt 等）玩得很开心！ 😆 他刚刚发布了 rendu，一个 JHP，所有当时编写 PHP 的 OG 都会熟悉它。 在 GH 上查看：https://github.com/h3js/rendu PSA：在有人惊慌失措并开始抱怨重新发明轮子等之前，请记住，这个人只是在享受乐趣。 就我个人而言，我认为它有可能用作电子邮件模板的轻量级模板渲染器。   由   提交/u/ritwite  [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o1g2jd/javascript_hypertext_preprocessor/</guid>
      <pubDate>Wed, 08 Oct 2025 16:55:28 GMT</pubDate>
    </item>
    <item>
      <title>行为 - 创建更复杂的普通 JavaScript 解决方案，同时仍然保持其对于基于 LLM 的 AI 的可理解性和可扩展性。</title>
      <link>https://www.reddit.com/r/webdev/comments/1o1fhv5/behaviour_create_more_sophisticated_vanilla/</link>
      <description><![CDATA[      简短的起源故事： 今天，我试图用 vanilla JS 制作一个代码编辑器，好吧，在 10 个版本之后，用 AI 编辑它变得非常复杂。 所以现在你有两个选择：  花几个小时/几天的时间 深入理解代码 以某种方式使代码更简单，更具可扩展性，以便人工智能能够理解它。  经过一番困惑，我找到了一个有效的模式：behavior.js 我为使我的代码再次可以用人工智能迭代而采取的步骤/提示：1.编写一个迷你版本2.使用behavior.js源代码：[复制代码]并制作 迷你版就是这样工作的。 3. 编写一个新行为：[新行为]。我现有的代码 [第 2 步中的代码]   由   提交/u/EveYogaTech   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o1fhv5/behaviour_create_more_sophisticated_vanilla/</guid>
      <pubDate>Wed, 08 Oct 2025 16:34:23 GMT</pubDate>
    </item>
    <item>
      <title>我的第一个 REACT 和 Tailwindcss 作品。</title>
      <link>https://www.reddit.com/r/webdev/comments/1o1fck4/my_first_react_tailwindcss_work/</link>
      <description><![CDATA[大家好， 十天前，我挑战自己，使用 React 和 Tailwind 为朋友的开源项目构建一个文档网站，这两者对我来说都是全新的。我的整个策略是边走边学。 这是一个令人筋疲力尽但收获颇丰的过程。虽然我不是设计师，但我为能够使其正常工作并完成该网站感到非常自豪。这证明，直接投入就是一种很好的学习方式。 这是完成的项目： 我愿意接受任何和所有反馈。谢谢！ https://open-mate-docs-plnn.vercel.app/ 注意：此网站未针对小屏幕进行优化。    由   提交 /u/theguyudreamabt   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o1fck4/my_first_react_tailwindcss_work/</guid>
      <pubDate>Wed, 08 Oct 2025 16:28:59 GMT</pubDate>
    </item>
    <item>
      <title>网络流</title>
      <link>https://www.reddit.com/r/webdev/comments/1o1f13l/webflow/</link>
      <description><![CDATA[开发人员对 Webflow 的想法是什么？好、坏……？  我正在考虑从 Shopify 迁移到 Webflow，以获得更好的视觉效果和控制。我很擅长 html、css 和 JS。我还使用 pythonanywhere 在我的网站上的某些交互式自定义部分中运行代码。 只是想知道开发人员对此类事情的想法。我喜欢它，因为从头开始构建并设置托管和 API 等。 我没有时间。   由   提交 /u/-vesperum   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o1f13l/webflow/</guid>
      <pubDate>Wed, 08 Oct 2025 16:17:13 GMT</pubDate>
    </item>
    <item>
      <title>我们分析了 10,000 多个 Git 工作流程：团队何时应该合并而不是 rebase</title>
      <link>https://www.reddit.com/r/webdev/comments/1o1ez4a/we_analyzed_10000_git_workflows_heres_when_teams/</link>
      <description><![CDATA[合并与变基的争论永远不会结束，但在与数千个开发团队合作之后，我们已经看到了每种方法何时效果最佳的清晰模式。 当我们看到合并效果更好时： 团队背景：  混合经验级别（初级开发人员发现合并） 更安全） 多人在同一功能分支上工作 您希望保留功能集成时的上下文 与外部贡献者一起开发开源  技术背景：  寿命超过一周的功能分支 涉及许多文件的复杂功能 当您需要查看时 “故事”发展历史  合并命令模式： bash git checkout main git pull origin main git merge --no-ff feature-branch 当我们看到 Rebase 工作时 更好： 团队背景：  经验丰富的 Git 用户，了解历史重写 单独工作或非常紧密的团队协调 您需要干净、线性的历史记录，以便于调试 严格的代码审查流程  技术背景：  短期功能分支（1-3 天） 小而集中的更改 当您需要避免“合并泡沫”时提交 为开源贡献准备干净的提交  Rebase 命令模式： bash git checkout feature-branch git rebase main # 解决任何冲突 git checkout main git merge feature-branch # 这将是快进的 我们推荐的混合方法：  本地变基以清理你的工作 合并到 main 以保留功能 context 使用 git pull --rebase 进行主分支更新 使用常规合并来集成功能  专业提示：  git rebase -i 在需要时清理提交历史记录 git merge --squash 一次干净的提交 始终在共享分支上git pull --rebase 永远不要对已推送到共享分支的提交进行变基  我们有争议的做法：大多数团队应该默认进行合并，并且仅在有特定原因需要线性历史记录时才进行变基。 您的团队的合并与变基是什么？ 策略？   由   提交 /u/GitKraken   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o1ez4a/we_analyzed_10000_git_workflows_heres_when_teams/</guid>
      <pubDate>Wed, 08 Oct 2025 16:15:07 GMT</pubDate>
    </item>
    <item>
      <title>Coinbase 表示 40% 的代码由 AI 编写，主要是测试和 Typescript</title>
      <link>https://www.reddit.com/r/webdev/comments/1o1erkp/coinbase_says_40_of_code_written_by_ai_mostly/</link>
      <description><![CDATA[这次对 Coinbase 的 Kyle Cesmat 的 Syntax 采访是我第一次听到一家大公司的工程师详细介绍如何使用人工智能来编写代码。他解释了用例。它从测试覆盖率开始，目前专注于 Typescript。 https://youtu.be/x7bsNmVuY8M?si=SXAre85XyxlRnE1T&amp;t=1036 对于 Go 和 绿地项目，他们在使用人工智能方面取得的成功较少。   由   提交/u/thehashimwarren  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o1erkp/coinbase_says_40_of_code_written_by_ai_mostly/</guid>
      <pubDate>Wed, 08 Oct 2025 16:07:21 GMT</pubDate>
    </item>
    <item>
      <title>我的做事方式正确吗？</title>
      <link>https://www.reddit.com/r/webdev/comments/1o1db29/are_my_ways_of_doing_things_correctly/</link>
      <description><![CDATA[在过去的几年里，事情对我来说变得很困难。当我编写新功能时，我会使用“块”、模块或更多“组件”类型的方法。  这有时会导致与其他团队成员的摩擦。当我创建一个新分支时，我总是首先从分离逻辑开始。就像我不会创建一个完整的类，然后再将它们分开一样，我的方法是让类更加可重用并且不那么臃肿。当我发现 PHP 或 JS 文件超过 1000 行时，我总觉得我做错了，需要更好地编码。所以我没有正确使用完整的查询过滤器类，而是将它们直接分成多个范围。 但是我的同事更倾向于发布它，请稍后修正意见。他们后来把事情分开，这让我在 PR 中很恼火，因为我总是问他们为什么不从一开始就这样做。在我看来，这会导致以后出现问题，而且我也不认为与从一开始就采取不同的方法相比，它不会让你更快。很多时候我们有重复的代码，或者因为它不可重用，需要大量重构。 我不知道这种编码方式怎么称呼？我确实患有自闭症，这确实帮助我更好地将物体中的事物分开，但它也让我很伤心，因为我这样想。  你如何处理这个问题？其他人是否有可能从代码分离开始，而不是相反？只是澄清一下，我无论如何都不完美，这对我来说只是感觉很不自然。但也许是我？ 谢谢！    由   提交/u/sensitiveCube  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o1db29/are_my_ways_of_doing_things_correctly/</guid>
      <pubDate>Wed, 08 Oct 2025 15:14:57 GMT</pubDate>
    </item>
    <item>
      <title>与 Kateryna Porchienova 一起实现大规模无障碍</title>
      <link>https://www.reddit.com/r/webdev/comments/1o1co6q/accessibility_at_scale_with_kateryna_porchienova/</link>
      <description><![CDATA[Señors @ Scale的新一集重点关注辅助功能、UI 设计和包容性工程实践。 Kateryna 分享了一些精彩的故事和惨痛的教训：  她的第一个应用程序如何帮助残疾儿童在家学习 为什么辅助功能应该是 像测试一样对待，而不是事后的想法 最常见的开发人员错误，例如过度使用 ARIA 或忽略动作首选项 使可访问性可扩展的工具，例如 React Aria、Storybook 和 Lighthouse 如果盲目使用，人工智能如何既帮助又破坏可访问性 如何建立默认重视包容性的公司文化  如果您 关心前端工程、设计系统或 UI 性能，本集充满了来自 Buffer 制作工作的真实见解。 🎧 在此处观看或收听： ▶️ YouTube：https://youtu.be/Y8ph_8pmFmo 🎧 Spotify：https://open.spotify.com/episode/2gCamstD91G9ZRlqt0O3Bw 好奇您的团队如何实现无障碍。您是否将其包含在测试中、依赖审核或拥有强制执行它的设计系统？   由   提交/u/cresta29  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o1co6q/accessibility_at_scale_with_kateryna_porchienova/</guid>
      <pubDate>Wed, 08 Oct 2025 14:51:36 GMT</pubDate>
    </item>
    <item>
      <title>您的网站应该是集成基础设施的一部分，没有适当的增强，它是毫无用处的</title>
      <link>https://www.reddit.com/r/webdev/comments/1o1c8ix/your_website_is_supposed_to_be_a_part_of_an/</link>
      <description><![CDATA[我厌倦了公众如何简化网站建设。  “这只是一个网站”的意识形态。正在破坏市场和客户的期望。令人震惊的是，企业主不明白在线建立业务是一个全新的领域。实体业务可能需要一个世纪的时间才能完成，但他们希望在线业务能够在几分钟内建立起来。您的网络开发人员或任何与此相关的服务提供商都不是试图敲诈您的精灵。 通常，他们没有营销预算，没有引入潜在客户的渠道，不知道客户旅程是什么，不了解品牌，或者只是不会投资这一切，因为“我可以自己做这一切”，并期望他们花 5 美元购买的不成熟的 WordPress 网站排名高于 Google谷歌。  拥有一个网站和拥有一个完全集成系统一部分的网站是两件不同的事情。如果看不到，对受众旅程没有帮助，就没用，你的潜在客户不会用你的名字在 chrome 中搜索。如果您甚至不知道它适合什么车，那么获得引擎就没有意义。  此外，随着人工智能被社交媒体强行灌输给每个人，难相处的人变得难以应对   由   提交 /u/TheSKReport   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o1c8ix/your_website_is_supposed_to_be_a_part_of_an/</guid>
      <pubDate>Wed, 08 Oct 2025 14:35:23 GMT</pubDate>
    </item>
    <item>
      <title>如何测试全栈 Web 应用程序框架的开发</title>
      <link>https://www.reddit.com/r/webdev/comments/1o1b2yg/how_to_test_development_of_a_fullstack_web_app/</link>
      <description><![CDATA[       由   提交/u/hottown  [link] [评论] ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o1b2yg/how_to_test_development_of_a_fullstack_web_app/</guid>
      <pubDate>Wed, 08 Oct 2025 13:52:11 GMT</pubDate>
    </item>
    <item>
      <title>安全食谱包</title>
      <link>https://www.reddit.com/r/webdev/comments/1o190zg/security_recipes_package/</link>
      <description><![CDATA[嗨，我发布了一个新的 npm 包。它可用于增强 Web 应用程序的安全性。  如果您想到其他食谱并希望合作，请这样做， 请注意 https://www.npmjs.com/package/security-recipes https://gitHub.com/bacloud22/security-recipes   由   提交/u/Sracer2018  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o190zg/security_recipes_package/</guid>
      <pubDate>Wed, 08 Oct 2025 12:26:00 GMT</pubDate>
    </item>
    <item>
      <title>寻找志同道合的人服务</title>
      <link>https://www.reddit.com/r/webdev/comments/1o18hir/find_likeminded_people_service/</link>
      <description><![CDATA[我创建了一些 Web 应用程序，可以帮助您找到可以交谈的人。我认为人们对此有问题。我想问你 - 这是我的想法还是我应该离开？ https://talker.website - 就是这样。   由   提交/u/Leo_Krasava   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o18hir/find_likeminded_people_service/</guid>
      <pubDate>Wed, 08 Oct 2025 12:01:02 GMT</pubDate>
    </item>
    <item>
      <title>网页抓取合法与否？</title>
      <link>https://www.reddit.com/r/webdev/comments/1o18eo7/web_scraping_legal_or_not/</link>
      <description><![CDATA[我有一个真正的问题。我们如何衡量我们是否尊重网站的 robots.txt 并从该网站获取数据（例如：房地产列表等）。我们假设该网站是公开的，这不是个人数据。如果我们修改这些数据，转售它是否合法？   由   提交 /u/Typical_Basil7625   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o18eo7/web_scraping_legal_or_not/</guid>
      <pubDate>Wed, 08 Oct 2025 11:57:17 GMT</pubDate>
    </item>
    <item>
      <title>人工智能和网络</title>
      <link>https://www.reddit.com/r/webdev/comments/1o187r7/ai_and_the_web/</link>
      <description><![CDATA[这会给人一种居高临下和粗鲁的感觉，但作为经常光顾这个 Reddit 子版块的人，我觉得有必要提醒你们。 如果你花一半的时间谈论 AI 是否会取代你的工作，真正进行开发。练习技巧。或者只是其他任何事情，你的时间会更好地度过。  谈论人工智能并不能解决它是否有用的问题。分享有关使用和工具的积极或消极的经验或智慧肯定会有所帮助。但是，大量的帖子和评论只是将你对人工智能的看法付诸实践，这是空洞的，对你的旅程没有任何帮助。 仅此而已。   由   提交 /u/Stratose   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o187r7/ai_and_the_web/</guid>
      <pubDate>Wed, 08 Oct 2025 11:47:41 GMT</pubDate>
    </item>
    </channel>
</rss>