<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：webdev</title>
    <link>https://www.reddit.com/r/webdev/new</link>
    <description>致力于所有 Web 开发的社区：前端和后端。有关更多与设计相关的问题，请尝试 /r/web_design。</description>
    <lastBuildDate>Fri, 17 Oct 2025 09:19:55 GMT</lastBuildDate>
    <item>
      <title>Scribe这样的平台是如何截图的？</title>
      <link>https://www.reddit.com/r/webdev/comments/1o8wk1g/how_does_a_platform_like_scribe_takes_screenshots/</link>
      <description><![CDATA[对于那些不知道的人，scribe 是一个 Chrome 扩展，可让您通过对网页上的操作进行屏幕截图并将其转换为步骤来记录工作流程。  正在构建类似的东西，我想在用户点击网页时截取屏幕截图，我尝试使用chrome的captureVisibleTab api，但它似乎有每秒1个屏幕截图的内部限制，因为我错过了一些屏幕截图，但抄写员似乎没有这个问题，那么他们在使用什么？ 我也尝试使用chrome调试器api，它似乎工作 完美，但它显示了一个信息栏“说我的扩展正在调试此选项卡”这对于普通用户来说可能会很可怕，抄写员没有显示任何这样的栏，所以他们也不使用调试器 api。  我也尝试过使用 html2canvas ，但这是一个较慢的过程，并且在处理屏幕截图时还会阻止用户界面。  那么，我怎样才能通过用户点击在一秒钟内获得比屏幕截图更多的内容呢？谢谢。   由   提交/u/boiiwithcode  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o8wk1g/how_does_a_platform_like_scribe_takes_screenshots/</guid>
      <pubDate>Fri, 17 Oct 2025 09:18:24 GMT</pubDate>
    </item>
    <item>
      <title>自托管 API 文档</title>
      <link>https://www.reddit.com/r/webdev/comments/1o8w8ld/selfhosted_api_docs/</link>
      <description><![CDATA[我正在寻找类似 Redoc 的东西，但带有“尝试一下”的提示形式， 本质上，我有一个简单的营销网站，我希望我的 API 文档位于同一个网站上，并包含在相同的品牌中。 我有一个开放的 API 规范 (swagger.json) 来生成它。 我研究过 Redocly（Redoc 的付费版本），但它似乎对这项工作来说太过分了，并且想要对整个网站负责，所以你最终得到了一个单独的 API 网站 文档。 有什么建议吗？   由   提交 /u/DoNotBelieveHim   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o8w8ld/selfhosted_api_docs/</guid>
      <pubDate>Fri, 17 Oct 2025 08:58:17 GMT</pubDate>
    </item>
    <item>
      <title>有人尝试过人工智能测试用例生成工具吗？</title>
      <link>https://www.reddit.com/r/webdev/comments/1o8w3ro/anyone_experimenting_with_ai_test_case_generation/</link>
      <description><![CDATA[我最近一直在探索 AI 测试用例生成工具，看看它们在实际项目中的表现如何。我接触过的一些平台包括 Apidog、CloudQA、Loadmill、Test Composer 和 Qodo，它们都有望加快测试创建速度并提高覆盖率。 如果您尝试过其中任何一个： AI 生成的测试用例在实践中有多有用？ 它们实际上减少了手动工作量，还是您仍然需要进行大量调整？ 有任何工作流程吗？ 或者让人工智能测试工具更容易采用的技巧？ 希望听到真实的经验，特别是 API 和集成测试。   由   提交/u/WholeComplete376   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o8w3ro/anyone_experimenting_with_ai_test_case_generation/</guid>
      <pubDate>Fri, 17 Oct 2025 08:49:32 GMT</pubDate>
    </item>
    <item>
      <title>我需要一个“假装”项目来进行</title>
      <link>https://www.reddit.com/r/webdev/comments/1o8vber/i_need_a_pretend_project_to_work_on/</link>
      <description><![CDATA[如果有人不介意给我一些练习的指导。想看看我是否可以为潜在客户提供简介。  我将使用 Django&gt;mysql，使用 DRM 作为 API 后端，并使用 React 作为前端。  请告诉我您假装的公司名称、其服务是什么、一点历史以及您希望从在线形象中获得什么。不太复杂——我仍在开始学习，但与我自己的项目偏差太大，我需要一个严格的结构来工作。  当我完成后端后，我将分享存储库，如果您不介意给我一个批评。  如果有人感兴趣并且不介意节省时间，我将非常感激！  为了更加现实，我选择第一个回复，而不是挑选。    由   提交 /u/notwritingasusual   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o8vber/i_need_a_pretend_project_to_work_on/</guid>
      <pubDate>Fri, 17 Oct 2025 07:57:37 GMT</pubDate>
    </item>
    <item>
      <title>有没有其他人因为网络开发人员的求职而感到彻底沮丧？</title>
      <link>https://www.reddit.com/r/webdev/comments/1o8vatu/has_anyone_else_felt_totally_beaten_down_by_job/</link>
      <description><![CDATA[对我来说，总是同样的故事：  我的简历消失在黑洞中。 我被机器人拒绝，永远不知道为什么。 大量的带回家的项目，但然后...没有任何回报（浪费每个公司的精力） 过了一段时间，它真的会扰乱你的信心。  我非常沮丧，我开始自己构建 zymohire.tech 。这个想法很简单：跳过愚蠢的谜题和性格测试。只需做真正的网络工作，展示您实际可以构建的内容。 如果您做得好，您可以直接与真正的团队交谈。不再有无休止的应用和祈祷循环。 现在还为时过早，但厌倦了旧游戏的开发者和公司似乎都很感兴趣。 所以我真的很好奇：  有人找到或构建了一些可以跳过简历和测试苦差事的东西吗？ 你认为“展示你能做什么”是前进的方向，还是我只是在做梦？ 实际上会怎样？ 让一个对开发人员友好的招聘平台适合您？  希望得到任何反馈、诚实的想法，甚至是咆哮。如果您想尝试一下，请链接：zymohire.tech   由   提交/u/Ok_Blacksmith2678   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o8vatu/has_anyone_else_felt_totally_beaten_down_by_job/</guid>
      <pubDate>Fri, 17 Oct 2025 07:56:34 GMT</pubDate>
    </item>
    <item>
      <title>在不使用 React/Svelte 这样的框架的情况下，如何构建大型前端应用程序？</title>
      <link>https://www.reddit.com/r/webdev/comments/1o8uxwa/how_does_one_build_large_frontend_apps_without/</link>
      <description><![CDATA[当我得知 Obsidian 是在没有任何前端 JS 的情况下构建的时，我感到非常震惊 框架。  好处，我可以看到。   JS 框架发展得非常快，当我们致力于一个大型的长期项目时，仅仅几年后就引入重大的突破性变化，这很糟糕。坚持发展缓慢的网络标准（目前已经相当成熟）可以延长项目的寿命。 稳定性也意味着将更多时间花在交付功能上，而不是解决兼容性问题。 还有独立性的好处。项目的成功与框架的成功无关。它还使项目更加安全，免受供应链攻击等。  因为没有“抽象层”。有了框架，您还可以更好地控制您的项目，并可以在较低级别进行性能优化。  我觉得不使用框架甚至可以让我们成为更好的开发人员。因为我们对正在发生的事情了解得更多。  使用框架也有好处，我不是来挑战这一点的。 但是这种不使用框架的替代方案......似乎很少被谈论。我想了解更多有关构建具有很少依赖项的大型（最好是基于网络的）软件项目的信息。  您对如何了解更多信息有什么建议吗？您知道是否有任何开源项目是通过这种方式构建的？它需要庞大、复杂、类似应用程序并且基于浏览器。我对前端更感兴趣。 谢谢！   由   提交/u/DanielFernandzz   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o8uxwa/how_does_one_build_large_frontend_apps_without/</guid>
      <pubDate>Fri, 17 Oct 2025 07:33:16 GMT</pubDate>
    </item>
    <item>
      <title>gitfluff：提交消息 Linter（常规提交 + AI 签名清理）</title>
      <link>https://www.reddit.com/r/webdev/comments/1o8ui36/gitfluff_commit_message_linter_conventional/</link>
      <description><![CDATA[Hey Peeps， 我很高兴展示一个新的小型且非常快速的提交消息 linter 和自动修复工具 gitfluff。 我的项目做什么 Claude 代码保留 注入“🤖 Co-Authored-By”拖车进入提交。您现在可以在本地设置中禁用它，但我需要跨多个存储库和多种语言在团队范围内实施。另外，我希望在不拼凑多个工具的情况下进行严格的常规提交验证。 它的作用  强制执行常规提交 1.0.0（类型、范围、重大更改、页脚），并完全符合规范。 自动剥离 AI 签名（可配置模式） 验证或重写消息，使用--write 零配置开始，可选的.gitfluff.toml用于自定义规则，允许您基本上做任何您想做的事情。   安装并安装使用 该工具编写并 Rust 并编译到多个平台。您可以直接通过 Cargo 安装： bash Cargo install gitfluff  或者使用自制程序： bash brew install goldziher/tap/gitfluff  或者通过 NPM： bash npm install -g gitfluff  或者通过 PIP： bash pip install gitfluff  然后您可以将其安装为提交消息钩子： bash gitfluff hook install commit-msg --write  或者，您可以将其安装为 pre-commit （或 prek）的钩子： 添加以下内容 .pre-commit-config: ```yaml repos: - repo: https://github.com/Goldziher/gitfluff rev: v0.2.0 hooks: - id: gitfluff-lint name: gitfluff (lint) entry: gitfluff lint --from-file language: system stage: [commit-msg] args: [&quot;{commit_msg_file}&quot;]  # 或者使用 autofix hook: # - id: gitfluff-write # name: gitfluff (lint + write) # entry: gitfluff lint --from-file # language: system # stage: [commit-msg] # args: [&quot;{commit_msg_file}&quot;, &quot;--write&quot;]  ``` 然后运行 pre-commit install --hook-type commit-msg，这将正确安装钩子。  您还可以使用 npx 或 uvx 命令将其集成到 lefthook 或 husky 中！ 主要工作流程：添加到预提交配置，别管它了。开发人员正常提交，在消息到达历史记录之前挂钩验证/清理消息。 目标受众 团队在多语言项目中强制执行提交约定。使用人工智能编码助手的开发人员想要干净的提交历史记录。任何需要常规提交验证而无需 JavaScript 依赖项的人。 比较  commitlint（Node 生态系统，需要单独的清理配置） cocogitto（Rust，专注于 semver 发布工作流程） gitlint （Python，可扩展，但需要用于 AI 签名的自定义插件）  当然还有许多其他工具，我不能声称这是原创的。主要区别在于，gitfluff 将验证 + 模式清理结合在一个二进制文件中，并为所有主要平台预先构建了发行版。 像往常一样，如果您喜欢该工具，请加注 github.com/Goldziher/gitfluff。   由   提交/u/Goldziher   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o8ui36/gitfluff_commit_message_linter_conventional/</guid>
      <pubDate>Fri, 17 Oct 2025 07:04:15 GMT</pubDate>
    </item>
    <item>
      <title>如何在您的网站上动态显示 Google 评论？</title>
      <link>https://www.reddit.com/r/webdev/comments/1o8tjge/how_do_you_display_google_reviews_dynamically_on/</link>
      <description><![CDATA[邀请其他人分享他们最喜欢的 API、库或嵌入实时 Google 评论而不影响网站速度的方法。   由   提交/u/daniel_mirams37  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o8tjge/how_do_you_display_google_reviews_dynamically_on/</guid>
      <pubDate>Fri, 17 Oct 2025 06:03:33 GMT</pubDate>
    </item>
    <item>
      <title>我的网站的付款处理器？</title>
      <link>https://www.reddit.com/r/webdev/comments/1o8qylv/payment_processor_for_my_website/</link>
      <description><![CDATA[嘿，简而言之，我正在为我的网站寻找支付处理器。这是一个像 Indeed/glassdoor 这样的网站，将工人和企业（例如清洁工）联系起来。我希望企业先付款，然后一旦工作人员完成任务，他们就可以发送图片，然后我发送付款（我是一个中间人，通过将这些人联系在一起而获得佣金）。将涉及合同，因此没有人会被骗。支付处理商应允许接受信用卡付款、银行转帐/银行卡付款，然后能够通过银行转帐向工人付款。之前的业务付款很重要，这样我就不必与篡夺身份/公司的人打交道（谁会愿意花钱买公司来为他们创造工作？）。 我不愿意使用 stripe 的想法。我不断听到有关冻结帐户和糟糕的客户支持的故事，所以我不想与他们打交道。 Paypal 显然也是一个令人头疼的问题。 我开始关注 Mango pay 和 Ayden。你们有什么偏好吗？你有更好的选择吗？我住在加拿大（如果涉及任何法律，尤其是托管账户）。  此外，如果您对此网站的业务逻辑/流程有任何建议，我也愿意接受。如果已经存在任何类似的网站，我可以研究一下并尝试激励自己。   由   提交/u/ADM0o  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o8qylv/payment_processor_for_my_website/</guid>
      <pubDate>Fri, 17 Oct 2025 03:39:54 GMT</pubDate>
    </item>
    <item>
      <title>AI会取代后端吗</title>
      <link>https://www.reddit.com/r/webdev/comments/1o8qh8o/will_ai_replace_backend/</link>
      <description><![CDATA[人们都说不会，但有人可以帮我分解一下吗？   由   提交/u/Mediocre_Bluejay6344  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o8qh8o/will_ai_replace_backend/</guid>
      <pubDate>Fri, 17 Oct 2025 03:15:02 GMT</pubDate>
    </item>
    <item>
      <title>标题：你如何真正跳出框框思考，记住标签和元素之类的东西，并且在看到人工智能在几秒钟内建立网站时不会感到无用？</title>
      <link>https://www.reddit.com/r/webdev/comments/1o8pmpe/title_how_do_you_actually_think_outside_the_box/</link>
      <description><![CDATA[所以我一直在学习全栈（基础）——HTML、CSS、一点 JS——并且我正在意识到一些事情。难的不是语法，而是实际上记住所有内容并知道如何创造性地应用它。 每次我尝试自己做一些东西时，我最终都会陷入思考“等等，那个标签又是什么？”或者“这个布局是如何运作的？”它让我的速度大大减慢，以至于我失去了动力。 最重要的是，我不断看到人工智能工具的卷轴和视频，这些工具可以在一分钟内生成完整的网站。老实说，这让我很头疼。我开始想知道——如果人工智能可以做得更好更快，为什么我还要学习这一切？我知道这些演示可能会跳过困难的部分，但仍然让人感到沮丧。 所以我想问一下这里经历过这种情况的人 - 你们如何处理这种感觉？当感觉机器在你想要掌握的事情上做得越来越好时，你如何保持创造力并不断学习？ 此外，是什么帮助你真正长期记住 HTML/CSS/JS 概念？就像不仅仅是一次理解它们，而是以后能够自然地回忆和使用它们。 我并不是要求一个“学习计划”或“更快学习的 10 个技巧”。我只是想从曾经经历过我现在处境的人那里得到诚实的建议或观点——陷入学习和怀疑是否值得之间。   由   提交/u/VisibleResearch3295  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o8pmpe/title_how_do_you_actually_think_outside_the_box/</guid>
      <pubDate>Fri, 17 Oct 2025 02:33:14 GMT</pubDate>
    </item>
    <item>
      <title>有谁知道Apple使用哪个JS库来制作这个动画？</title>
      <link>https://www.reddit.com/r/webdev/comments/1o8pd8g/does_anyone_know_which_js_library_apple_is_using/</link>
      <description><![CDATA[      我正在寻找复制这个动画 - 有谁知道哪个 JS 库可以帮助我复制这样的东西？   由   提交/u/alvaaz2  [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o8pd8g/does_anyone_know_which_js_library_apple_is_using/</guid>
      <pubDate>Fri, 17 Oct 2025 02:20:49 GMT</pubDate>
    </item>
    <item>
      <title>热门观点：对于大多数网站来说，使用 javascript 是过度设计的。</title>
      <link>https://www.reddit.com/r/webdev/comments/1o8p6uy/hot_take_using_javascript_is_overengineered_for/</link>
      <description><![CDATA[每个人都跳上 JavaScript 列车，因为它应该更有利于交互性和用户体验，但老实说，对于大多数网站来说，带有内联 CSS 的简单 HTML 文件效果很好。除非您实际上正在构建从动态内容中受益的东西，否则您不需要 React 及其所有复杂性。 对于大多数用例来说，交互性收益是微乎其微的，您正在用更大的包大小、更长的加载时间和更陡峭的学习曲线来交换。 但是尝试告诉想要在博客上使用最新框架的开发人员，这实际上只是文本和图像。有时  标记实际上更好。   由   提交/u/khalCSGO   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o8p6uy/hot_take_using_javascript_is_overengineered_for/</guid>
      <pubDate>Fri, 17 Oct 2025 02:12:28 GMT</pubDate>
    </item>
    <item>
      <title>我上次使用 Next.js 是两年前的事了，今天我该有多操蛋？</title>
      <link>https://www.reddit.com/r/webdev/comments/1o8p6qv/last_time_i_used_nextjs_was_2_years_ago_how/</link>
      <description><![CDATA[基本上我只是想为我的作品集建立一个简单的网站。我离开了 Web 开发，现在主要使用 Swift，但最初我学习了 React 和 Next.js。现在我想建立一个小型投资组合网站来展示我的移动应用程序，但大约 2 年没有使用 Next.js。改变了多少？我会很困难还是更像是我需要查找一些新语法？   由   提交/u/RylertonTheFirst  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o8p6qv/last_time_i_used_nextjs_was_2_years_ago_how/</guid>
      <pubDate>Fri, 17 Oct 2025 02:12:21 GMT</pubDate>
    </item>
    <item>
      <title>想尝试用express和react制作一个服务器+客户端，以便更好地构建代码。</title>
      <link>https://www.reddit.com/r/webdev/comments/1o8p5ug/wanted_to_try_making_a_server_client_with_just/</link>
      <description><![CDATA[基本上，我正在制作一个项目，它将成为 Express 中的服务器，基于 cookie 和会话进行身份验证，以及（尚未完成）使用它的 React 客户端，基本上不使用像 next/nuxt 等框架，也不使用 laravel 或 adonis...并且尝试尽量减少不使用 ORM 或日期库，只是为了好玩而做我自己的事情。 如果有人是 感兴趣： https://github.com/fenilli/taco   由   提交/u/Gustavo_Fenilli   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/webdev/comments/1o8p5ug/wanted_to_try_making_a_server_client_with_just/</guid>
      <pubDate>Fri, 17 Oct 2025 02:11:04 GMT</pubDate>
    </item>
    </channel>
</rss>