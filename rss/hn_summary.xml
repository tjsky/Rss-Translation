<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>HN 摘要</title>
    <link>https://tg.i-c-a.su</link>
    <description>由大型语言模型编写的热门 Hacker News 故事的自动摘要。</description>
    <lastBuildDate>Mon, 22 Jul 2024 10:27:34 GMT</lastBuildDate>
    <item>
      <title>[媒体] 在 Medium 上的文章“网络垃圾已占据主导地位”中，作者批评了现代人的现状 [...]</title>
      <link>https://t.me/hn_summary/100699</link>
      <description><![CDATA[Web Crap Has Taken Control
在 Medium 上的“Web Crap Has Taken Control”中，作者批评了现代 Web 开发的现状，认为像 React 这样的工具和框架的激增导致了不必要的复杂性和低效率。该文章引用了 Jose Aguinaga 2016 年的一篇文章，强调了自那时以来 Web 开发环境如何恶化。React 最初由 Facebook 创建，用于处理其复杂的 UI 需求，因强加异步操作和复杂的语法而受到批评，导致“回调地狱”和性能不佳。作者指出，在这些框架兴起之前，存在更简单、更高效的解决方案。这篇文章还强调了 React 的广泛采用，尽管 Facebook 的声望正在下降，并且它引入了臃肿的 JavaScript 文件和依赖性问题等低效率问题，但这种做法却具有讽刺意味。作者通过将现代网络实践与旧技术和更简单的编码实践的效率进行比较，强调了现代网络实践的荒谬性。（基于 62% 的故事文本的摘要。）]]></description>
      <guid>https://t.me/hn_summary/100699</guid>
      <pubDate>Mon, 22 Jul 2024 10:27:34 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] std:monostate 有什么意义？</title>
      <link>https://t.me/hn_summary/100698</link>
      <description><![CDATA[std:monostate 有什么用？你无法用它做任何事情
标题：std::monostate 有什么用？你无法用它做任何事情
网站：devblogs.microsoft.com

C++17 引入了 std::monostate，这是一种本质上不执行任何操作且没有成员或重要函数的类型。它的主要用途是充当占位符或虚拟类型，在需要默认构造类型但您不想执行任何操作的情况下特别有用。例如，在 std::variant 中，std::monostate 可用作初始类型，以允许默认构造而没有副作用。当变体中的其他类型缺少默认构造函数或有不必要的副作用时，这特别方便。本质上，std::monostate 为 std::variant 提供了一个“空”状态，避免了对更复杂的解决方案（如 std::optional&lt;...&gt;&gt;）的需求。]]></description>
      <guid>https://t.me/hn_summary/100698</guid>
      <pubDate>Mon, 22 Jul 2024 10:16:24 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] “Bash-Oneliners” GitHub 项目是高效、简洁的 bash 通信的集合 [...]</title>
      <link>https://t.me/hn_summary/100697</link>
      <description><![CDATA[Bash-Oneliners：Linux 终端技巧合集
“Bash-Oneliners”GitHub 项目是一套高效简洁的 bash 命令，旨在简化数据解析和 Linux 系统维护任务。该存储库最初受到生物信息学的启发，后来通过云计算工作得到扩展，提供了各种终端技巧，包括变量、数学、grep、sed、awk 等命令。作者强调简洁和速度，这些命令对于那些希望优化工作流程的人来说特别有用。该项目通过提供实用的真实示例和技巧脱颖而出，尽管它缺乏详细的引用。它主要针对 Ubuntu、Amazon Linux、RedHat、Linux Mint、Mac 和 CentOS 系统量身定制。 （根据 13% 的故事文本进行总结。）]]></description>
      <guid>https://t.me/hn_summary/100697</guid>
      <pubDate>Mon, 22 Jul 2024 09:51:11 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 科学家发现，严重的自闭症是可以逆转的，症状可以减轻到[...]</title>
      <link>https://t.me/hn_summary/100696</link>
      <description><![CDATA[科学家发现自闭症可以逆转
科学家发现严重的自闭症可以逆转，症状可以减轻到难以区分的程度。在一项开创性的试验中，美国的两个异卵双胞胎女孩接受了一项为期两年的定制干预计划。该计划使她们的症状“显著改善”。双胞胎 P 的自闭症治疗评估清单分数从 43 降至 4，这一结果被描述为“一种奇迹”。双胞胎 L 也表现出显着的改善，尽管没有那么明显。干预措施包括行为分析、语言治疗和严格的无麸质、无酪蛋白饮食。科学家们认为，这些改善不太可能随着时间的推移而消失，尽管他们避免使用“治愈”一词。这项研究强调了一种整体的、个性化的治疗方法。该案例研究发表在《个性化医学杂志》上。

争议：自闭症症状可以逆转的说法极具争议性，因为它挑战了自闭症是一种终身疾病这一被广泛接受的观点。

独特/聪明：个性化、整体的方法以及双胞胎之一的显著改善尤其值得注意。]]></description>
      <guid>https://t.me/hn_summary/100696</guid>
      <pubDate>Mon, 22 Jul 2024 09:30:01 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 广角镜头的失真对人类来说是立即可察觉的，特别是通过 [...]</title>
      <link>https://t.me/hn_summary/100695</link>
      <description><![CDATA[通过线条进行广角镜头畸变校正
广角镜头畸变对人类来说是一目了然的，尤其是通过直线的弯曲。在计算机视觉中，校正这种畸变至关重要。可以采用一个简单的径向不畸变模型，在像素坐标上使用球对称函数。一个有效的模型是多项式除法模型，它调整参数以校正各种畸变水平。为了估计畸变，使用图像中的直线。Radon 和 Hough 变换有助于测量图像的“直线”质量。由于 Sobel 滤波器的效率和有效性，建议将其用于边缘检测。提供的代码演示了计算边缘和将 Radon 变换应用于失真和未失真图像的过程。结果表明，未失真图像在 Radon 变换中具有更尖锐的峰值，表明校正成功。 （根据 35% 的故事文本进行总结。）]]></description>
      <guid>https://t.me/hn_summary/100695</guid>
      <pubDate>Mon, 22 Jul 2024 09:14:51 GMT</pubDate>
    </item>
    <item>
      <title>人们为何愿意为 Vercel 支付如此高的价格？</title>
      <link>https://t.me/hn_summary/100694</link>
      <description><![CDATA[为什么人们要为 Vercel 支付如此高昂的费用？
Vercel 本质上是建立在 AWS 之上的高级层，但其收费却比 AWS 本身高出 100-200%。这就引出了一个问题：为什么用户愿意支付额外费用而不是直接选择 AWS？答案在于 Vercel 的用户友好界面、简化的部署流程和强大的性能优化功能。这些优势为开发人员节省了大量的时间和精力，使得更高的价格对许多人来说是合理的。虽然有些人可能会认为成本过高，但对于那些优先考虑生产力和易用性的人来说，Vercel 提供的便利性和效率可以抵消费用。]]></description>
      <guid>https://t.me/hn_summary/100694</guid>
      <pubDate>Mon, 22 Jul 2024 08:46:39 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 在我们论坛最近的一篇文章中，我们分享了有关 Jellyfin 财务状况的重要更新 [...]</title>
      <link>https://t.me/hn_summary/100693</link>
      <description><![CDATA[Jellyfin：我们真的很棒
在我们论坛的最近一篇文章中，我们分享了有关 Jellyfin 财务状况的重要更新。在过去五年中，我们积累了可观的预算，目前已超过 24,000 美元。我们的平均月支出约为 600 美元，这为我们提供了超过 40 个月的舒适运行时间。因此，我们恳请我们的社区暂时停止向主要项目捐款。相反，我们鼓励您支持您使用的客户端的作者，因为他们在保持与即将发布的版本的兼容性方面面临最大的挑战。这并不违反我们的“不付费开发”政策，因为捐款仍然是自愿的。当我们的运行时间缩短到大约 12 个月时，我们将重新评估我们的财务需求。祝您观看愉快！]]></description>
      <guid>https://t.me/hn_summary/100693</guid>
      <pubDate>Mon, 22 Jul 2024 08:44:34 GMT</pubDate>
    </item>
    <item>
      <title>网站：billabear.com</title>
      <link>https://t.me/hn_summary/100692</link>
      <description><![CDATA[Show HN：我花了 18 个月构建的源可用计费系统
标题：Show HN：我花了 18 个月构建的源可用计费系统
网站：billabear.com

使用 Billabear 轻松管理订阅的各个方面。此源可用计费系统允许您即时创建自定义计划和价格，确保您在支持客户方面不受限制。只需单击几下即可轻松修改现有订阅以处理边缘情况，无需技术干预。这种创新方法提供了灵活性和易用性，使订阅管理更加高效和用户友好。]]></description>
      <guid>https://t.me/hn_summary/100692</guid>
      <pubDate>Mon, 22 Jul 2024 08:34:26 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 美国一家法院裁定，Booking.com 违反了《计算机欺诈和滥用法案》，理由是 [...]</title>
      <link>https://t.me/hn_summary/100691</link>
      <description><![CDATA[瑞安航空在美国法院裁决中赢得对 Booking.com 的屏幕抓取案
根据法院文件，美国法院裁定 Booking.com 未经许可访问瑞安航空网站的部分内容，违反了《计算机欺诈和滥用法案》。瑞安航空称赞这一裁决是打击未经授权屏幕抓取的胜利，裁决发现 Booking.com 诱导第三方“意图欺诈”访问瑞安航空网站。法院还驳回了 Booking.com 对瑞安航空提出的诽谤和不正当竞争反诉。Booking.com 表示失望并计划上诉，称票价比较可以促进消费者的选择。瑞安航空首席执行官 Michael O&#39;Leary 希望该裁决能促使政府采取行动打击非法屏幕抓取和过度收费行为。最近，瑞安航空已与多家在线旅行社签署了授权机票转售协议。]]></description>
      <guid>https://t.me/hn_summary/100691</guid>
      <pubDate>Mon, 22 Jul 2024 08:34:21 GMT</pubDate>
    </item>
    <item>
      <title>Eza 是一个现代化的、积极维护的 Unix 中传统 ls 命令的替代品 [...]</title>
      <link>https://t.me/hn_summary/100690</link>
      <description><![CDATA[Eza：ls 的现代、维护替代品
Eza 是 Unix 和 Linux 系统中传统 ls 命令的现代、积极维护替代品。它旨在提供更多功能和更好的默认设置，使用颜色区分文件类型和元数据，并支持符号链接、扩展属性和 Git。Eza 设计精巧、快速且用户友好，提供超链接支持、挂载点详细信息、SELinux 上下文输出和人性化相对日期等增强功能。它还修复了类似工具（如 exa）中存在的几个错误和安全问题。Eza 适用于 Windows、macOS 和 Linux，并提供了详细的安装说明。]]></description>
      <guid>https://t.me/hn_summary/100690</guid>
      <pubDate>Mon, 22 Jul 2024 08:29:16 GMT</pubDate>
    </item>
    </channel>
</rss>