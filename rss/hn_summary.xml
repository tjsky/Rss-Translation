<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>HN 摘要</title>
    <link>https://tg.i-c-a.su</link>
    <description>由大型语言模型编写的热门 Hacker News 故事的自动摘要。</description>
    <lastBuildDate>Mon, 05 Aug 2024 18:15:40 GMT</lastBuildDate>
    <item>
      <title>欢迎来到“Rust-Python 互操作性”！</title>
      <link>https://t.me/hn_summary/102723</link>
      <description><![CDATA[Rust-Python 互操作性 [动手课程](https://news.ycombinator.com/item?id=41161085)
欢迎来到“Rust-Python 互操作性”！本动手课程将指导您使用 Rust 编写 Python 扩展并从 Python 调用 Rust 代码。虽然我们假设您熟悉这两种语言，但不需要事先具备互操作性知识。本课程是互动式的，专为课堂环境而设计，但您也可以在导师的指导下独立学习。您需要安装和更新 Rust，并使用特定命令验证您的设置。练习可在 GitHub 存储库中找到，解决方案可以使用 Git 进行跟踪。本课程由经验丰富的 Rust 开发人员和作家 Luca Palmieri 开发。享受学习之旅！]]></description>
      <guid>https://t.me/hn_summary/102723</guid>
      <pubDate>Mon, 05 Aug 2024 18:15:40 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] PostgreSQL 能应对分析查询的挑战吗？</title>
      <link>https://t.me/hn_summary/102722</link>
      <description><![CDATA[PostgreSQL 是否应对了分析查询的挑战？
这篇文章探讨了 PostgreSQL 是否能够有效地处理分析查询，灵感来自 Crunchy Data 的文章和 YugabyteDB 使用 Postgres 作为无状态入口点的方法。外部数据包装器 (FDW) 和分区功能的出现使 Postgres 能够管理大数据分析。关键改进包括聚合处理、连接排序和表扫描。尽管存在一些限制，例如仅修剪分区和缺乏统计数据，但 Postgres 的灵活性使开发人员能够定制解决方案。值得注意的进步包括用于更好地估计函数的“prosupport”例程、用于多子句过滤器的扩展统计数据、用于高效执行查询的增量排序以及用于在连接中进行缓存的 Memoize。社区积极讨论进一步的增强功能，表明使用 Postgres 的混合系统前景光明。

争议：该帖子强调了 FDW/分区技术的局限性和缺点，这可能会引发数据库专业人士的争论。

独特/巧妙：引入“prosupport”例程和增量排序特别具有创新性，提供了优化查询执行的新方法。（基于 62% 的故事文本的摘要。）]]></description>
      <guid>https://t.me/hn_summary/102722</guid>
      <pubDate>Mon, 05 Aug 2024 18:14:34 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 学习如何学习（LHTL）是一个变革性的概念，它强调指数级的[...]</title>
      <link>https://t.me/hn_summary/102721</link>
      <description><![CDATA[学习如何学习
学习如何学习 (LHTL) 是一个变革性概念，强调通过掌握学习艺术本身而实现的指数级增长。你学会学习的速度越快，你学习的能力就越快。七年前，我开始关注这个正反馈循环，直到最近才观察到显著的复合效应。这个网站，LHTL.org，提供了关于各种学习策略和概念的文章，旨在加速你自己的 LHTL 循环。该网站正在建设中，论坛和社区功能即将推出！]]></description>
      <guid>https://t.me/hn_summary/102721</guid>
      <pubDate>Mon, 05 Aug 2024 18:12:27 GMT</pubDate>
    </item>
    <item>
      <title>在 iOS 18、iPadOS 18 和 macOS Sequoia 全面发布之前，Apple 推出了第一个 [...]</title>
      <link>https://t.me/hn_summary/102720</link>
      <description><![CDATA[Safari 最新测试版可屏蔽分散注意力的广告和其他网站杂乱内容
在 iOS 18、iPadOS 18 和 macOS Sequoia 全面发布之前，Apple 推出了第五个开发者测试版，其中包含对 Safari 和照片的更新。值得注意的是，Safari 现在包含一个名为 Distraction Control 的工具，旨在通过允许用户隐藏分散注意力的元素（如覆盖和 cookie 请求）来减少网页杂乱。但是，它不是广告拦截器，需要手动选择要隐藏的项目。Distraction Control 不会永久删除广告或动态内容，隐藏的项目可以稍后取消隐藏。测试版还包括重新设计的阅读器、用于汇总信息的突出显示以及用于视频内容的增强型查看器。由于可能存在错误，用户应在尝试测试版之前备份数据。]]></description>
      <guid>https://t.me/hn_summary/102720</guid>
      <pubDate>Mon, 05 Aug 2024 18:10:23 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] KCL 是一种基于约束的函数式语言，专为配置而设计[...]</title>
      <link>https://t.me/hn_summary/102719</link>
      <description><![CDATA[KCL，一种基于约束的配置函数式语言
KCL 是一种专为配置管理而设计的基于约束的函数式语言。它强调简单性和效率，允许用户以声明方式定义配置，并确保一致性和正确性。该语言支持多种工具来增强用户体验，包括集成开发环境 (IDE)、软件开发工具包 (SDK) 以及用于共享、格式化、测试和文档的功能。KCL 旨在简化配置过程，使其更直观、更不容易出错。KCL 的一个独特之处在于其强大的约束系统，通过提供更高水平的可靠性和精确度，使其有别于其他配置语言。]]></description>
      <guid>https://t.me/hn_summary/102719</guid>
      <pubDate>Mon, 05 Aug 2024 18:10:19 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 网站：arstechnica.com</title>
      <link>https://t.me/hn_summary/102718</link>
      <description><![CDATA[游戏化让司机放下手机
标题：游戏化让司机放下手机
网站：arstechnica.com

分心驾驶，尤其是因使用手机而导致的分心驾驶，是一个严重的问题，导致 13% 的分心驾驶死亡，并影响到五分之一的年轻司机。一项针对 Progressive 保险客户的研究测试了减少驾驶时使用手机的策略。参与者平均每小时手持使用手机超过 6.4 分钟，被分成五组，每组干预措施各不相同。简单的教育和手机支架收效甚微。然而，加入竞争性游戏化和财务激励措施后，手机使用率显著降低，最高可达 27.6%，且效果在研究后依然存在。这表明游戏化和财务奖励可能是改善驾驶行为的有效工具。

争议：无突出之处。
令人惊讶/聪明：游戏化和财务激励措施在减少驾驶时使用手机方面具有持久的有效性。]]></description>
      <guid>https://t.me/hn_summary/102718</guid>
      <pubDate>Mon, 05 Aug 2024 18:09:13 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 上周，我们引入了“跨分叉对象引用”（CFOR）这个术语，它描述了 [...]</title>
      <link>https://t.me/hn_summary/102717</link>
      <description><![CDATA[TruffleHog 现在可以查找 GitHub 上所有已删除和私人提交
上周，我们引入了术语“跨分支对象引用”(CFOR)，它描述了一个存储库分支何时可以访问另一个分支的敏感提交数据，包括私人和已删除的分支。本周，我们很高兴地宣布，TruffleHog 现在可以发现并扫描所有这些提交以查找机密。我们已经开源了一个新的 TruffleHog 模块的 alpha 版本，该模块枚举 CFOR 和已删除的 git 历史记录，然后扫描它们以查找机密。由于 GitHub 的速率限制，该过程很慢，但它包含一个进度条并创建文件来跟踪有效和无效的提交哈希。用户需要设置 GitHub 访问令牌才能使用新功能。该方法涉及查询 GitHub 的 GraphQL 服务以获取简短的 SHA-1 提交哈希值，并使用生日悖论估计冲突。虽然有效，但这个过程很耗时，对于大型存储库可能需要几个小时。未来的发展取决于 GitHub 在数据访问方面的行动。]]></description>
      <guid>https://t.me/hn_summary/102717</guid>
      <pubDate>Mon, 05 Aug 2024 18:09:06 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 本文深入探讨了联想思维作为创造力核心组成部分的概念 [...]</title>
      <link>https://t.me/hn_summary/102716</link>
      <description><![CDATA[联想工具、思维和创造力：关于增强创造力
本文深入探讨了联想思维作为创造力的核心组成部分的概念，探索了像 Semioscape 这样的工具如何增强这一过程。心理分析学家和认知科学家研究的联想思维涉及在看似不相关的概念之间建立联系。作者引用了 Henri Poincaré 和最近的科学文献，特别是认知科学趋势中的一篇评论，讨论了 GloVe 和 word2vec 等计算模型如何量化语义空间并通过前向流 (FF) 等指标衡量创造力。Semioscape 利用人工智能来增强用户的联想视野，通过呈现意想不到的关联来潜在地提高创造力。然而，该工具的有效性可能会因个体差异和文化适应而异。本文还回顾了梅德尼克关于联想创造力的开创性著作，强调偶然性、相似性和调解是通往创造性解决方案的途径。虽然 Semioscape 前景光明，但它目前的局限性包括无法跟上快速发展的文化趋势，而这对于在当今充满活力的网络环境中真正增强创造性思维至关重要。（基于 87% 的故事文本的摘要。）]]></description>
      <guid>https://t.me/hn_summary/102716</guid>
      <pubDate>Mon, 05 Aug 2024 18:09:02 GMT</pubDate>
    </item>
    <item>
      <title>标题：Gleam 的第一印象：充满欢乐，但也有些瑕疵</title>
      <link>https://t.me/hn_summary/102715</link>
      <description><![CDATA[对 Gleam 的第一印象：乐趣无穷，但有些粗糙
标题：对 Gleam 的第一印象：乐趣无穷，但有些粗糙

我的朋友 Erika 对 Gleam 的热情最终说服了我学习这种函数式编程语言，它同时针对 BEAM（Erlang 的 VM）和 JavaScript。这种双重定位使其对前端和后端应用程序都具有吸引力，充分利用了广泛的 Erlang/Elixir 和 JavaScript 生态系统以及 Erlang 的可扩展性和弹性。虽然我还没有在现实世界中使用它，但语言之旅让我对 Gleam 有了深刻的了解。 

令人高兴的部分：
- 社区：Gleam Discord 热情而乐于助人，体现了创作者的关怀。
- 模式匹配：Gleam 的模式匹配堪称典范，具有详尽性检查和结构模式匹配。
- 阴影不变性：此功能增强了人体工程学，而不会引入竞争条件。
- LSP 支持：于 2022 年推出，大大有助于语言采用。
- 合格导入：这些提高了代码的可发现性和可读性。
- 带标签的参数：它们阐明了程序员的意图。
- 标准库：用 Gleam 编写，使其易于访问且实用。
- 关键字：todo 和 panic 作为关键字是一种深思熟虑的设计选择。

粗糙的边缘：
- 无循环：由于不可变性，Gleam 依赖于递归，这会牺牲可读性和性能。
- 类型别名：这可能会导致令人困惑的错误消息，类似于 Rust 中的问题。

总体而言，Gleam 提供了很多乐趣，但也有一些粗糙之处，可能会让一些开发人员望而却步。（基于 75% 的故事文本的总结。）]]></description>
      <guid>https://t.me/hn_summary/102715</guid>
      <pubDate>Mon, 05 Aug 2024 18:07:56 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 在《低级剥削的悲剧》一书中，作者探讨了低级剥削所带来的挑战和 [...]</title>
      <link>https://t.me/hn_summary/102714</link>
      <description><![CDATA[低级漏洞利用的悲剧
在《低级漏洞利用的悲剧》中，作者讨论了从事网络安全低级漏洞利用职业的挑战和现实。作者强调，此类职位很少见，而且通常仅限于渗透测试、内部安全团队、执法、军事和情报机构等特定环境。由于时间和成本限制，大多数公司更喜欢现成的漏洞利用，这使得端到端低级漏洞利用成为一项罕见的任务。作者还讨论了漏洞研究、网络安全营销和漏洞赏金等潜在领域，但指出这些机会有限且竞争激烈。这篇文章旨在提供一个现实的观点，而不会打击人们对该领域的热情。

争议点：
- 为情报机构和零日漏洞行业工作时，存在道德和法律灰色地带。
- 对漏洞利用开发后如何使用的控制和透明度有限。

独特/聪明的见解：
- 制造和使用漏洞之间的区别，以及漏洞研究有时如何成为更大角色的一部分。
- 提到网络安全营销和带有徽标的命名漏洞这一有争议的话题。（基于 82% 的故事文本的摘要。）]]></description>
      <guid>https://t.me/hn_summary/102714</guid>
      <pubDate>Mon, 05 Aug 2024 18:06:47 GMT</pubDate>
    </item>
    </channel>
</rss>